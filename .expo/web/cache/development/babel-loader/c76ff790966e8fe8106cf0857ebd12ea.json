{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\screens\\\\system\\\\UpdateMemo\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { openLink } from \"../../../marslab-library-react-native/utils/common\";\nimport { UpdateMemo } from \"../../../components/templates\";\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this.onUpdatePress = function (storeUrl) {\n      openLink(storeUrl);\n    };\n\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          updateNeeded = _this$props.updateNeeded,\n          forceUpdate = _this$props.forceUpdate,\n          android = _this$props.android,\n          ios = _this$props.ios,\n          OS = _this$props.OS,\n          appVersion = _this$props.appVersion;\n      var latestVersion = \"0.0.0\";\n      var latestVersionDescription = null;\n      var storeUrl = null;\n\n      switch (OS) {\n        case \"ios\":\n          latestVersion = ios.latestVersion;\n          latestVersionDescription = ios.latestVersionDescription;\n          storeUrl = ios.appstoreUrl;\n          break;\n\n        case \"android\":\n          latestVersion = android.latestVersion;\n          latestVersionDescription = android.latestVersionDescription;\n          storeUrl = android.playstoreUrl;\n          break;\n      }\n\n      return React.createElement(UpdateMemo, {\n        messages: latestVersionDescription,\n        options: [{\n          text: \"UPDATE NOW\",\n          onPress: function onPress() {\n            return _this2.onUpdatePress(storeUrl);\n          }\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$system = state.system,\n      updateNeeded = _state$system.updateNeeded,\n      forceUpdate = _state$system.forceUpdate,\n      android = _state$system.android,\n      ios = _state$system.ios,\n      OS = _state$system.OS,\n      appVersion = _state$system.appVersion;\n  return {\n    updateNeeded: updateNeeded,\n    forceUpdate: forceUpdate,\n    android: android,\n    ios: ios,\n    OS: OS,\n    appVersion: appVersion\n  };\n};\n\nexport default connect(mapStateToProps, {})(index);","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/screens/system/UpdateMemo/index.js"],"names":["React","Component","connect","openLink","UpdateMemo","styles","index","props","onUpdatePress","storeUrl","updateNeeded","forceUpdate","android","ios","OS","appVersion","latestVersion","latestVersionDescription","appstoreUrl","playstoreUrl","text","onPress","mapStateToProps","state","system"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AAEA,SAASC,QAAT;AAEA,SAASC,UAAT;AACA,OAAOC,MAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAInBC,aAJmB,GAIH,UAACC,QAAD,EAAc;AAC1BN,MAAAA,QAAQ,CAACM,QAAD,CAAR;AACH,KANkB;;AAAA;AAElB;;;;6BAMQ;AAAA;;AAAA,wBAQD,KAAKF,KARJ;AAAA,UAEDG,YAFC,eAEDA,YAFC;AAAA,UAGDC,WAHC,eAGDA,WAHC;AAAA,UAIDC,OAJC,eAIDA,OAJC;AAAA,UAKDC,GALC,eAKDA,GALC;AAAA,UAMDC,EANC,eAMDA,EANC;AAAA,UAODC,UAPC,eAODA,UAPC;AASL,UAAIC,aAAa,GAAG,OAApB;AACA,UAAIC,wBAAwB,GAAG,IAA/B;AACA,UAAIR,QAAQ,GAAG,IAAf;;AAEA,cAAQK,EAAR;AACI,aAAK,KAAL;AACIE,UAAAA,aAAa,GAAGH,GAAG,CAACG,aAApB;AACAC,UAAAA,wBAAwB,GAAGJ,GAAG,CAACI,wBAA/B;AACAR,UAAAA,QAAQ,GAAGI,GAAG,CAACK,WAAf;AACA;;AACJ,aAAK,SAAL;AACIF,UAAAA,aAAa,GAAGJ,OAAO,CAACI,aAAxB;AACAC,UAAAA,wBAAwB,GAAGL,OAAO,CAACK,wBAAnC;AACAR,UAAAA,QAAQ,GAAGG,OAAO,CAACO,YAAnB;AACA;AAVR;;AAaA,aACI,oBAAC,UAAD;AACI,QAAA,QAAQ,EAAEF,wBADd;AAEI,QAAA,OAAO,EAAE,CACL;AACIG,UAAAA,IAAI,EAAE,YADV;AAEIC,UAAAA,OAAO,EAAE;AAAA,mBAAM,MAAI,CAACb,aAAL,CAAmBC,QAAnB,CAAN;AAAA;AAFb,SADK,CAFb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAWH;;;;EA9CeR,S;;AAiDpB,IAAMqB,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,KAAK,EAAI;AAAA,sBAQzBA,KAAK,CAACC,MARmB;AAAA,MAEzBd,YAFyB,iBAEzBA,YAFyB;AAAA,MAGzBC,WAHyB,iBAGzBA,WAHyB;AAAA,MAIzBC,OAJyB,iBAIzBA,OAJyB;AAAA,MAKzBC,GALyB,iBAKzBA,GALyB;AAAA,MAMzBC,EANyB,iBAMzBA,EANyB;AAAA,MAOzBC,UAPyB,iBAOzBA,UAPyB;AAS7B,SAAO;AAAEL,IAAAA,YAAY,EAAZA,YAAF;AAAgBC,IAAAA,WAAW,EAAXA,WAAhB;AAA6BC,IAAAA,OAAO,EAAPA,OAA7B;AAAsCC,IAAAA,GAAG,EAAHA,GAAtC;AAA2CC,IAAAA,EAAE,EAAFA,EAA3C;AAA+CC,IAAAA,UAAU,EAAVA;AAA/C,GAAP;AACH,CAVD;;AAYA,eAAeb,OAAO,CAACoB,eAAD,EAAkB,EAAlB,CAAP,CAA6BhB,KAA7B,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\n\r\nimport { openLink } from \"../../../marslab-library-react-native/utils/common\";\r\n\r\nimport { UpdateMemo } from \"../../../components/templates\";\r\nimport styles from \"./styles\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n    onUpdatePress = (storeUrl) => {\r\n        openLink(storeUrl)\r\n    }\r\n\r\n    render() {\r\n        const {\r\n            updateNeeded,\r\n            forceUpdate,\r\n            android,\r\n            ios,\r\n            OS,\r\n            appVersion\r\n        } = this.props;\r\n        let latestVersion = \"0.0.0\";\r\n        let latestVersionDescription = null;\r\n        let storeUrl = null;\r\n\r\n        switch (OS) {\r\n            case \"ios\":\r\n                latestVersion = ios.latestVersion;\r\n                latestVersionDescription = ios.latestVersionDescription;\r\n                storeUrl = ios.appstoreUrl;\r\n                break;\r\n            case \"android\":\r\n                latestVersion = android.latestVersion;\r\n                latestVersionDescription = android.latestVersionDescription;\r\n                storeUrl = android.playstoreUrl;\r\n                break;\r\n        }\r\n\r\n        return (\r\n            <UpdateMemo\r\n                messages={latestVersionDescription}\r\n                options={[\r\n                    {\r\n                        text: \"UPDATE NOW\",\r\n                        onPress: () => this.onUpdatePress(storeUrl)\r\n                    }\r\n                ]}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    const {\r\n        updateNeeded,\r\n        forceUpdate,\r\n        android,\r\n        ios,\r\n        OS,\r\n        appVersion\r\n    } = state.system;\r\n    return { updateNeeded, forceUpdate, android, ios, OS, appVersion };\r\n};\r\n\r\nexport default connect(mapStateToProps, {})(index);\r\n"]},"metadata":{},"sourceType":"module"}