{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport ColorPropType from \"../ColorPropType\";\nimport ViewStylePropTypes from \"../View/ViewStylePropTypes\";\nimport { array, number, oneOf, oneOfType, shape, string } from 'prop-types';\nvar numberOrString = oneOfType([number, string]);\n\nvar TextStylePropTypes = _extends({}, ViewStylePropTypes, {\n  color: ColorPropType,\n  fontFamily: string,\n  fontFeatureSettings: string,\n  fontSize: numberOrString,\n  fontStyle: string,\n  fontWeight: string,\n  fontVariant: array,\n  letterSpacing: numberOrString,\n  lineHeight: numberOrString,\n  textAlign: oneOf(['center', 'end', 'inherit', 'justify', 'justify-all', 'left', 'right', 'start']),\n  textAlignVertical: string,\n  textDecorationColor: ColorPropType,\n  textDecorationLine: string,\n  textDecorationStyle: string,\n  textShadowColor: ColorPropType,\n  textShadowOffset: shape({\n    width: number,\n    height: number\n  }),\n  textShadowRadius: number,\n  writingDirection: oneOf(['auto', 'ltr', 'rtl']),\n  textIndent: numberOrString,\n  textOverflow: string,\n  textRendering: oneOf(['auto', 'geometricPrecision', 'optimizeLegibility', 'optimizeSpeed']),\n  textTransform: oneOf(['capitalize', 'lowercase', 'none', 'uppercase']),\n  unicodeBidi: oneOf(['normal', 'bidi-override', 'embed', 'isolate', 'isolate-override', 'plaintext']),\n  whiteSpace: string,\n  wordWrap: string,\n  MozOsxFontSmoothing: string,\n  WebkitFontSmoothing: string\n});\n\nexport default TextStylePropTypes;","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-web/dist/exports/Text/TextStylePropTypes.js"],"names":["ColorPropType","ViewStylePropTypes","array","number","oneOf","oneOfType","shape","string","numberOrString","TextStylePropTypes","color","fontFamily","fontFeatureSettings","fontSize","fontStyle","fontWeight","fontVariant","letterSpacing","lineHeight","textAlign","textAlignVertical","textDecorationColor","textDecorationLine","textDecorationStyle","textShadowColor","textShadowOffset","width","height","textShadowRadius","writingDirection","textIndent","textOverflow","textRendering","textTransform","unicodeBidi","whiteSpace","wordWrap","MozOsxFontSmoothing","WebkitFontSmoothing"],"mappings":";AAUA,OAAOA,aAAP;AACA,OAAOC,kBAAP;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,EAA+BC,SAA/B,EAA0CC,KAA1C,EAAiDC,MAAjD,QAA+D,YAA/D;AAEA,IAAIC,cAAc,GAAGH,SAAS,CAAC,CAACF,MAAD,EAASI,MAAT,CAAD,CAA9B;;AAEA,IAAIE,kBAAkB,GAAG,SAAc,EAAd,EAAkBR,kBAAlB,EAAsC;AAC7DS,EAAAA,KAAK,EAAEV,aADsD;AAE7DW,EAAAA,UAAU,EAAEJ,MAFiD;AAG7DK,EAAAA,mBAAmB,EAAEL,MAHwC;AAI7DM,EAAAA,QAAQ,EAAEL,cAJmD;AAK7DM,EAAAA,SAAS,EAAEP,MALkD;AAM7DQ,EAAAA,UAAU,EAAER,MANiD;AAO7DS,EAAAA,WAAW,EAAEd,KAPgD;AAQ7De,EAAAA,aAAa,EAAET,cAR8C;AAS7DU,EAAAA,UAAU,EAAEV,cATiD;AAU7DW,EAAAA,SAAS,EAAEf,KAAK,CAAC,CAAC,QAAD,EAAW,KAAX,EAAkB,SAAlB,EAA6B,SAA7B,EAAwC,aAAxC,EAAuD,MAAvD,EAA+D,OAA/D,EAAwE,OAAxE,CAAD,CAV6C;AAW7DgB,EAAAA,iBAAiB,EAAEb,MAX0C;AAY7Dc,EAAAA,mBAAmB,EAAErB,aAZwC;AAa7DsB,EAAAA,kBAAkB,EAAEf,MAbyC;AAc7DgB,EAAAA,mBAAmB,EAAEhB,MAdwC;AAe7DiB,EAAAA,eAAe,EAAExB,aAf4C;AAgB7DyB,EAAAA,gBAAgB,EAAEnB,KAAK,CAAC;AAAEoB,IAAAA,KAAK,EAAEvB,MAAT;AAAiBwB,IAAAA,MAAM,EAAExB;AAAzB,GAAD,CAhBsC;AAiB7DyB,EAAAA,gBAAgB,EAAEzB,MAjB2C;AAkB7D0B,EAAAA,gBAAgB,EAAEzB,KAAK,CAAC,CAAC,MAAD,EAAS,KAAT,EAAgB,KAAhB,CAAD,CAlBsC;AAoB7D0B,EAAAA,UAAU,EAAEtB,cApBiD;AAqB7DuB,EAAAA,YAAY,EAAExB,MArB+C;AAsB7DyB,EAAAA,aAAa,EAAE5B,KAAK,CAAC,CAAC,MAAD,EAAS,oBAAT,EAA+B,oBAA/B,EAAqD,eAArD,CAAD,CAtByC;AAuB7D6B,EAAAA,aAAa,EAAE7B,KAAK,CAAC,CAAC,YAAD,EAAe,WAAf,EAA4B,MAA5B,EAAoC,WAApC,CAAD,CAvByC;AAwB7D8B,EAAAA,WAAW,EAAE9B,KAAK,CAAC,CAAC,QAAD,EAAW,eAAX,EAA4B,OAA5B,EAAqC,SAArC,EAAgD,kBAAhD,EAAoE,WAApE,CAAD,CAxB2C;AAyB7D+B,EAAAA,UAAU,EAAE5B,MAzBiD;AA0B7D6B,EAAAA,QAAQ,EAAE7B,MA1BmD;AA2B7D8B,EAAAA,mBAAmB,EAAE9B,MA3BwC;AA4B7D+B,EAAAA,mBAAmB,EAAE/B;AA5BwC,CAAtC,CAAzB;;AA+BA,eAAeE,kBAAf","sourcesContent":["/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport ColorPropType from '../ColorPropType';\nimport ViewStylePropTypes from '../View/ViewStylePropTypes';\nimport { array, number, oneOf, oneOfType, shape, string } from 'prop-types';\n\nvar numberOrString = oneOfType([number, string]);\n\nvar TextStylePropTypes = Object.assign({}, ViewStylePropTypes, {\n  color: ColorPropType,\n  fontFamily: string,\n  fontFeatureSettings: string,\n  fontSize: numberOrString,\n  fontStyle: string,\n  fontWeight: string,\n  fontVariant: array,\n  letterSpacing: numberOrString,\n  lineHeight: numberOrString,\n  textAlign: oneOf(['center', 'end', 'inherit', 'justify', 'justify-all', 'left', 'right', 'start']),\n  textAlignVertical: string,\n  textDecorationColor: ColorPropType,\n  textDecorationLine: string,\n  textDecorationStyle: string,\n  textShadowColor: ColorPropType,\n  textShadowOffset: shape({ width: number, height: number }),\n  textShadowRadius: number,\n  writingDirection: oneOf(['auto', 'ltr', 'rtl']),\n  /* @platform web */\n  textIndent: numberOrString,\n  textOverflow: string,\n  textRendering: oneOf(['auto', 'geometricPrecision', 'optimizeLegibility', 'optimizeSpeed']),\n  textTransform: oneOf(['capitalize', 'lowercase', 'none', 'uppercase']),\n  unicodeBidi: oneOf(['normal', 'bidi-override', 'embed', 'isolate', 'isolate-override', 'plaintext']),\n  whiteSpace: string,\n  wordWrap: string,\n  MozOsxFontSmoothing: string,\n  WebkitFontSmoothing: string\n});\n\nexport default TextStylePropTypes;"]},"metadata":{},"sourceType":"module"}