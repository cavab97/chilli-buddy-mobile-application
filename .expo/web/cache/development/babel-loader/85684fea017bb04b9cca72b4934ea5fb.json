{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\src\\\\components\\\\templates\\\\payment\\\\SubmitReceipt\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./styles\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport ProgressCircle from 'react-native-progress-circle';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport { View, Button, ActivityIndicator, Overlay, Text, ScrollView } from \"../../../../marslab-library-react-native/components/atoms\";\nimport { ImageInfo } from \"../../../../marslab-library-react-native/components/molecules\";\n\nvar SubmitReceipt = function SubmitReceipt(_ref) {\n  var uri = _ref.uri,\n      retakeTitle = _ref.retakeTitle,\n      doneTitle = _ref.doneTitle,\n      onRetakePress = _ref.onRetakePress,\n      onDonePress = _ref.onDonePress,\n      uploadImageProgress = _ref.uploadImageProgress,\n      progressVisible = _ref.progressVisible,\n      errorMessage = _ref.errorMessage,\n      successfulMessage = _ref.successfulMessage,\n      errorHeader = _ref.errorHeader,\n      errorRedirectMessage = _ref.errorRedirectMessage,\n      successHeader = _ref.successHeader,\n      triggerLoading = _ref.triggerLoading,\n      loadingMessage = _ref.loadingMessage,\n      uploadLoadingMessage = _ref.uploadLoadingMessage,\n      submitLoading = _ref.submitLoading,\n      messageSubmit = _ref.messageSubmit,\n      uploadLoading = _ref.uploadLoading;\n  var barWidth = Dimensions.get('screen').width - 40;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, React.createElement(Overlay, {\n    isVisible: progressVisible,\n    width: \"100%\",\n    overlayStyle: styles.overlayContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }\n  }, errorMessage ? React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 21\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-close-circle-outline\",\n    color: \"white\",\n    size: 70,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 25\n    }\n  }), React.createElement(Text, {\n    style: styles.subjectText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 25\n    }\n  }, errorHeader), React.createElement(Text, {\n    style: styles.messageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 25\n    }\n  }, errorMessage, \" \", errorRedirectMessage)) : uploadLoading || submitLoading ? React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 25\n    }\n  }, React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"white\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 29\n    }\n  }), React.createElement(Text, {\n    style: styles.messageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 29\n    }\n  }, \"Submitting your transactions\")) : messageSubmit ? React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 29\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-checkmark-circle-outline\",\n    color: \"white\",\n    size: 70,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 33\n    }\n  }), React.createElement(Text, {\n    style: styles.subjectText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 33\n    }\n  }, successHeader), React.createElement(Text, {\n    style: styles.messageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, messageSubmit)) : triggerLoading ? React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 33\n    }\n  }, React.createElement(Text, {\n    style: styles.messageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 37\n    }\n  }, uploadLoadingMessage)) : successfulMessage ? React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 37\n    }\n  }, React.createElement(Icon, {\n    name: \"ios-checkmark-circle-outline\",\n    color: \"white\",\n    size: 70,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 41\n    }\n  }), React.createElement(Text, {\n    style: styles.subjectText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 41\n    }\n  }, successHeader), React.createElement(Text, {\n    style: styles.messageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 41\n    }\n  }, successfulMessage)) : React.createElement(View, {\n    style: styles.contentContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 37\n    }\n  }, React.createElement(ProgressCircle, {\n    percent: uploadImageProgress,\n    radius: 50,\n    borderWidth: 8,\n    color: \"#fff\",\n    shadowColor: \"#fff1de\",\n    bgColor: \"#f18a22\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 41\n    }\n  }, React.createElement(Text, {\n    style: styles.percentText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 45\n    }\n  }, uploadImageProgress, \"%\")), React.createElement(Text, {\n    style: styles.messageText,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 41\n    }\n  }, loadingMessage))), React.createElement(ScrollView, {\n    showsVerticalScrollIndicator: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, React.createElement(ImageInfo, {\n    banner: uri,\n    imageContainer: styles.overlayImage,\n    imageStyle: styles.image,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: retakeTitle,\n    buttonStyle: styles.button,\n    titleStyle: styles.buttonText,\n    onPress: onRetakePress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }), React.createElement(Button, {\n    title: doneTitle,\n    buttonStyle: styles.completeButton,\n    titleStyle: styles.completeButtonText,\n    onPress: onDonePress,\n    loading: uploadLoading,\n    disabled: uploadLoading,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 13\n    }\n  })));\n};\n\nexport { SubmitReceipt };","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/components/templates/payment/SubmitReceipt/index.js"],"names":["React","styles","ProgressCircle","Icon","View","Button","ActivityIndicator","Overlay","Text","ScrollView","ImageInfo","SubmitReceipt","uri","retakeTitle","doneTitle","onRetakePress","onDonePress","uploadImageProgress","progressVisible","errorMessage","successfulMessage","errorHeader","errorRedirectMessage","successHeader","triggerLoading","loadingMessage","uploadLoadingMessage","submitLoading","messageSubmit","uploadLoading","barWidth","Dimensions","get","width","container","overlayContainer","contentContainer","subjectText","messageText","percentText","overlayImage","image","button","buttonText","completeButton","completeButtonText"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./styles\";\r\nimport { Dimensions } from 'react-native';\r\nimport ProgressCircle from 'react-native-progress-circle';\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\n\r\nimport {\r\n    View,\r\n    Button,\r\n    ActivityIndicator,\r\n    Overlay,\r\n    Text,\r\n    ScrollView\r\n} from \"../../../../marslab-library-react-native/components/atoms\";\r\n\r\nimport {\r\n    ImageInfo,\r\n} from \"../../../../marslab-library-react-native/components/molecules\";\r\n\r\n\r\nconst SubmitReceipt = ({\r\n    uri,\r\n    retakeTitle,\r\n    doneTitle,\r\n    onRetakePress,\r\n    onDonePress,\r\n    uploadImageProgress,\r\n    progressVisible,\r\n    errorMessage,\r\n    successfulMessage,\r\n    errorHeader,\r\n    errorRedirectMessage,\r\n    successHeader,\r\n    triggerLoading,\r\n    loadingMessage,\r\n    uploadLoadingMessage,\r\n    submitLoading,\r\n    messageSubmit,\r\n    uploadLoading\r\n })=> {\r\n    const barWidth = Dimensions.get('screen').width - 40;\r\n     return(     \r\n        <View style={styles.container}> \r\n\r\n            <Overlay\r\n                isVisible={progressVisible}\r\n                width=\"100%\"\r\n                overlayStyle={styles.overlayContainer}\r\n            >\r\n                {errorMessage ? (\r\n                    <View style={styles.contentContainer}>\r\n                        <Icon \r\n                            name=\"ios-close-circle-outline\" \r\n                            color=\"white\" \r\n                            size={70} \r\n                        />\r\n                        <Text style={styles.subjectText}>\r\n                            {errorHeader}\r\n                        </Text>\r\n                        <Text style={styles.messageText}>\r\n                            {errorMessage} {errorRedirectMessage}\r\n                        </Text>\r\n                    </View>\r\n                ) : (\r\n                    (uploadLoading || submitLoading) ? (\r\n                        <View style={styles.contentContainer}>\r\n                            <ActivityIndicator\r\n                                size=\"large\"\r\n                                color=\"white\"\r\n                            />\r\n                            <Text style={styles.messageText}>\r\n                                Submitting your transactions\r\n                            </Text>\r\n                        </View>\r\n                    ) : (\r\n                        messageSubmit ? (\r\n                            <View style={styles.contentContainer}>\r\n                                <Icon \r\n                                    name=\"ios-checkmark-circle-outline\" \r\n                                    color=\"white\" \r\n                                    size={70} \r\n                                />         \r\n                                <Text style={styles.subjectText}>\r\n                                    {successHeader}\r\n                                </Text>\r\n                                <Text style={styles.messageText}>\r\n                                    {messageSubmit} \r\n                                </Text>\r\n                            </View>\r\n                        ) : (\r\n                            triggerLoading ? (\r\n                                <View style={styles.contentContainer}>\r\n                                    <Text style={styles.messageText}>\r\n                                        {uploadLoadingMessage} \r\n                                    </Text>\r\n                                </View>\r\n                            ) : (\r\n                                successfulMessage ? (\r\n                                    <View style={styles.contentContainer}>\r\n                                        <Icon \r\n                                            name=\"ios-checkmark-circle-outline\" \r\n                                            color=\"white\" \r\n                                            size={70} \r\n                                        />\r\n                                        \r\n                                        <Text style={styles.subjectText}>\r\n                                            {successHeader}\r\n                                        </Text>\r\n                                        <Text style={styles.messageText}>\r\n                                            {successfulMessage} \r\n                                        </Text>\r\n                                    </View>\r\n                                ) : (\r\n                                    <View style={styles.contentContainer}>\r\n                                        <ProgressCircle\r\n                                            percent={uploadImageProgress}\r\n                                            radius={50}\r\n                                            borderWidth={8}\r\n                                            color=\"#fff\"\r\n                                            shadowColor=\"#fff1de\"\r\n                                            bgColor=\"#f18a22\"\r\n                                        >\r\n                                            <Text style={styles.percentText}>\r\n                                                {uploadImageProgress}%\r\n                                            </Text>\r\n                                        </ProgressCircle>\r\n                                        <Text style={styles.messageText}>\r\n                                            {loadingMessage} \r\n                                        </Text>\r\n                                    </View>\r\n                                )\r\n                            )\r\n                        )\r\n                    )\r\n                )}\r\n            </Overlay>\r\n            <ScrollView showsVerticalScrollIndicator={false}>\r\n            <ImageInfo\r\n                banner={uri}\r\n                imageContainer={styles.overlayImage}\r\n                imageStyle={styles.image}\r\n            />\r\n            {/* progressVisible &&\r\n                <ProgressBarAnimated\r\n                    width={barWidth}\r\n                    value={uploadImageProgress}\r\n                    backgroundColorOnComplete=\"#f18a22\"\r\n                /> */}\r\n            <Button\r\n                title={retakeTitle}\r\n                buttonStyle={styles.button}\r\n                titleStyle={styles.buttonText}\r\n                onPress={onRetakePress}\r\n            />\r\n            <Button\r\n                title={doneTitle}\r\n                buttonStyle={styles.completeButton}\r\n                titleStyle={styles.completeButtonText}\r\n                onPress={onDonePress}\r\n                loading={uploadLoading}\r\n                disabled={uploadLoading}\r\n            />\r\n            </ScrollView>\r\n        </View>\r\n     );\r\n };\r\n \r\n export { SubmitReceipt };"]},"metadata":{},"sourceType":"module"}