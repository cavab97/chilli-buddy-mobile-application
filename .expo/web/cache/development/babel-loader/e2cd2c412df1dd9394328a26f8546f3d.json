{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\components\\\\templates\\\\Prizes\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./styles\";\nimport { View, Text, FlatList, Overlay, TouchableOpacity, Image } from \"../../atoms\";\nimport { ImageInfo } from \"../../molecules\";\nimport ContentLoader, { Rect, Circle } from 'react-content-loader/native';\n\nvar Prizes = function Prizes(_ref) {\n  var data = _ref.data,\n      reward = _ref.reward,\n      rewardPress = _ref.rewardPress,\n      modalControl = _ref.modalControl,\n      showModal = _ref.showModal,\n      readLoading = _ref.readLoading;\n\n  var RewardList = function RewardList(_ref2) {\n    var data = _ref2.data,\n        index = _ref2.index;\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    }, React.createElement(TouchableOpacity, {\n      onPress: function onPress() {\n        return rewardPress(data);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.rank,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 25\n      }\n    }, index + 1), React.createElement(View, {\n      style: styles.imageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 25\n      }\n    }, React.createElement(ImageInfo, {\n      banner: data.images[0] ? data.images[0] : require(\"../../../../assets/DefaultAvatar.jpg\"),\n      imageContainer: styles.image,\n      imageStyle: styles.imageFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 29\n      }\n    })), React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 25\n      }\n    }, data.title), React.createElement(Text, {\n      style: styles.totalNumber,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 25\n      }\n    }, \"x \" + data.quantity)), React.createElement(View, {\n      style: styles.line,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    })));\n  };\n\n  return readLoading ? React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, React.createElement(ContentLoader, {\n    speed: 1,\n    width: \"100%\",\n    height: 95,\n    backgroundColor: \"#d9d9d9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 15\n    }\n  }, React.createElement(Rect, {\n    x: \"5\",\n    y: \"30\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"20\",\n    height: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 17\n    }\n  }), React.createElement(Circle, {\n    cx: \"19%\",\n    cy: \"45\",\n    r: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }\n  }), React.createElement(Rect, {\n    x: \"30%\",\n    y: \"35\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"30%\",\n    height: \"16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 17\n    }\n  })), React.createElement(View, {\n    style: styles.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 15\n    }\n  })) : React.createElement(View, {\n    style: styles.screenContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 14\n    }\n  }, React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    renderItem: function renderItem(_ref3) {\n      var item = _ref3.item,\n          index = _ref3.index;\n      return React.createElement(RewardList, {\n        data: item,\n        index: index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 54\n        }\n      });\n    },\n    showsVerticalScrollIndicator: false,\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }\n  }), React.createElement(Overlay, {\n    onBackdropPress: function onBackdropPress() {\n      return modalControl();\n    },\n    isVisible: showModal,\n    width: \"auto\",\n    height: \"50%\",\n    overlayStyle: styles.modalContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }\n  }, reward.images[0] ? React.createElement(Image, {\n    source: {\n      uri: reward.images[0]\n    },\n    style: styles.imageBackgroundStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }) : React.createElement(Image, {\n    source: require(\"../../../../assets/DefaultAvatar.jpg\"),\n    style: styles.imageBackgroundStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 21\n    }\n  })));\n};\n\nexport { Prizes };","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/components/templates/Prizes/index.js"],"names":["React","styles","View","Text","FlatList","Overlay","TouchableOpacity","Image","ImageInfo","ContentLoader","Rect","Circle","Prizes","data","reward","rewardPress","modalControl","showModal","readLoading","RewardList","index","row","rank","imageContainer","images","require","image","imageFrame","title","totalNumber","quantity","line","container","screenContainer","item","id","modalContainer","uri","imageBackgroundStyle"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./styles\";\r\nimport {\r\n    View,\r\n    Text,\r\n    FlatList,\r\n    Overlay,\r\n    TouchableOpacity,\r\n    Image\r\n} from \"../../atoms\";\r\nimport { ImageInfo } from \"../../molecules\";\r\nimport ContentLoader, { Rect, Circle } from 'react-content-loader/native'\r\n\r\nconst Prizes = ({\r\n    data,\r\n    reward,\r\n    rewardPress,\r\n    modalControl,\r\n    showModal,\r\n    readLoading\r\n})=> {\r\n    const RewardList = ({data, index}) => {\r\n        return(\r\n            <View>\r\n                <TouchableOpacity\r\n                    onPress={() => rewardPress(data)}\r\n                >\r\n                    <View style={styles.row}>\r\n                        <Text style={styles.rank}>{index + 1}</Text>\r\n                        <View style={styles.imageContainer}>\r\n                            <ImageInfo\r\n                                banner={\r\n                                    data.images[0]\r\n                                    ? data.images[0]\r\n                                    : require(\"../../../../assets/DefaultAvatar.jpg\")\r\n                                }\r\n                                imageContainer={styles.image}\r\n                                imageStyle={styles.imageFrame}\r\n                            />\r\n                        </View>\r\n                        <Text style={styles.title}>{data.title}</Text> \r\n                        <Text style={styles.totalNumber}>{\"x \" + data.quantity}</Text> \r\n                    </View>\r\n                    <View style={styles.line} />\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n\r\n    return (\r\n        readLoading ?\r\n            <View style={styles.container}>\r\n              <ContentLoader\r\n                speed={1}\r\n                width={\"100%\"}\r\n                height={95}\r\n                backgroundColor= \"#d9d9d9\"\r\n              >\r\n                <Rect x=\"5\" y=\"30\" rx=\"4\" ry=\"4\" width=\"20\" height=\"20\" />\r\n                <Circle cx=\"19%\" cy=\"45\" r=\"30\"/>\r\n                <Rect x=\"30%\" y=\"35\" rx=\"4\" ry=\"4\" width=\"30%\" height=\"16\" />\r\n              </ContentLoader>\r\n              <View style={styles.line} />\r\n            </View>\r\n          :\r\n            (<View style={styles.screenContainer}>\r\n                <FlatList\r\n                    data={data}\r\n                    keyExtractor={item => item.id}\r\n                    renderItem={({ item, index }) => <RewardList data={item} index={index} /> }\r\n                    showsVerticalScrollIndicator={false}\r\n                    style = {styles.container}\r\n                />\r\n\r\n                <Overlay\r\n                    onBackdropPress={() => modalControl()}\r\n                    isVisible={showModal}\r\n                    width=\"auto\"\r\n                    height=\"50%\"\r\n                    overlayStyle={styles.modalContainer}\r\n                >\r\n                {   reward.images[0] ?\r\n                    <Image\r\n                        source={{uri: reward.images[0]}}\r\n                        style={styles.imageBackgroundStyle}\r\n                    />\r\n                    :\r\n                    <Image\r\n                        source={require(\"../../../../assets/DefaultAvatar.jpg\")}\r\n                        style={styles.imageBackgroundStyle}\r\n                    />\r\n                }\r\n                </Overlay>\r\n            </View>)\r\n    );\r\n    \r\n\r\n\r\n};\r\n\r\nexport { Prizes };"]},"metadata":{},"sourceType":"module"}