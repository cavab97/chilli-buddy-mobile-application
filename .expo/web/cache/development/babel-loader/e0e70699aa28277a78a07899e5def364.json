{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\src\\\\screens\\\\auth\\\\LogIn\\\\recaptcha.js\";\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { Text, TouchableOpacity, WebView, Overlay, ActivityIndicator } from \"../../../marslab-library-react-native/components/atoms\";\nimport { Colors } from \"../../../settings/styles/theme\";\n\nvar RecaptchaModal = function RecaptchaModal(_ref) {\n  var isVisible = _ref.isVisible,\n      buttonHide = _ref.buttonHide,\n      buttonTitle = _ref.buttonTitle,\n      authDomain = _ref.authDomain,\n      onMessage = _ref.onMessage,\n      onSendSMS = _ref.onSendSMS,\n      onBackdropPress = _ref.onBackdropPress,\n      containerWidth = _ref.containerWidth,\n      containerHeight = _ref.containerHeight,\n      onError = _ref.onError,\n      error = _ref.error;\n  return React.createElement(Overlay, {\n    isVisible: isVisible,\n    width: containerWidth,\n    height: containerHeight,\n    overlayStyle: styles.modal,\n    onBackdropPress: onBackdropPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, React.createElement(WebView, {\n    style: styles.webView,\n    source: {\n      uri: \"https://\" + authDomain + \"/authrecaptcha\"\n    },\n    onMessage: onMessage,\n    renderError: onError,\n    onError: onError,\n    startInLoadingState: true,\n    renderLoading: function renderLoading() {\n      return React.createElement(ActivityIndicator, {\n        style: {\n          position: \"absolute\",\n          left: 0,\n          right: 0,\n          top: 0,\n          bottom: 0,\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), error && React.createElement(Text, {\n    style: styles.textFontFamily,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }\n  }, error), buttonHide && React.createElement(TouchableOpacity, {\n    style: styles.submitContainer,\n    onPress: onSendSMS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, buttonTitle)));\n};\n\nvar styles = StyleSheet.create({\n  webView: {\n    height: 200,\n    width: 304\n  },\n  modal: {\n    alignItems: \"center\"\n  },\n  submitContainer: {\n    backgroundColor: Colors.PRIMARY,\n    borderRadius: 3,\n    width: 292,\n    height: 49,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  text: {\n    color: \"#fff\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    fontFamily: \"RobotoRegular\"\n  },\n  textFontFamily: {\n    fontFamily: \"RobotoRegular\"\n  }\n});\nexport { RecaptchaModal };","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/screens/auth/LogIn/recaptcha.js"],"names":["React","Text","TouchableOpacity","WebView","Overlay","ActivityIndicator","Colors","RecaptchaModal","isVisible","buttonHide","buttonTitle","authDomain","onMessage","onSendSMS","onBackdropPress","containerWidth","containerHeight","onError","error","styles","modal","webView","uri","position","left","right","top","bottom","alignItems","justifyContent","textFontFamily","submitContainer","text","StyleSheet","create","height","width","backgroundColor","PRIMARY","borderRadius","color","fontSize","fontWeight","fontFamily"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { StyleSheet } from \"react-native\";\r\nimport {\r\n  Text,\r\n  TouchableOpacity,\r\n  WebView,\r\n  Overlay,\r\n  ActivityIndicator,\r\n} from \"../../../marslab-library-react-native/components/atoms\";\r\nimport { Colors } from \"../../../settings/styles/theme\";\r\n\r\nconst RecaptchaModal = ({\r\n  isVisible,\r\n  buttonHide,\r\n  buttonTitle,\r\n  authDomain,\r\n  onMessage,\r\n  onSendSMS,\r\n  onBackdropPress,\r\n  containerWidth,\r\n  containerHeight,\r\n  onError,\r\n  error\r\n}) => {\r\n  return (\r\n    <Overlay\r\n      isVisible={isVisible}\r\n      width={containerWidth}\r\n      height={containerHeight}\r\n      overlayStyle={styles.modal}\r\n      onBackdropPress={onBackdropPress}\r\n    >\r\n      <WebView\r\n        style={styles.webView}\r\n        source={{\r\n          uri: `https://${authDomain}/authrecaptcha`,\r\n        }}\r\n        onMessage={onMessage}\r\n        renderError={onError}\r\n        onError={onError}\r\n        startInLoadingState\r\n        renderLoading={() => {\r\n          return (\r\n            <ActivityIndicator\r\n              style={{\r\n                position: \"absolute\",\r\n                left: 0,\r\n                right: 0,\r\n                top: 0,\r\n                bottom: 0,\r\n                alignItems: \"center\",\r\n                justifyContent: \"center\",\r\n              }}\r\n            />\r\n          );\r\n        }}\r\n      />\r\n      {error && <Text style={styles.textFontFamily}>{error}</Text>}\r\n\r\n      {buttonHide && (\r\n        <TouchableOpacity style={styles.submitContainer} onPress={onSendSMS}>\r\n          <Text style={styles.text}>{buttonTitle}</Text>\r\n        </TouchableOpacity>\r\n      )}\r\n    </Overlay>\r\n  );\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n  webView: {\r\n    height: 200,\r\n    width: 304,\r\n  },\r\n  modal: {\r\n    alignItems: \"center\",\r\n  },\r\n  submitContainer: {\r\n    backgroundColor: Colors.PRIMARY,\r\n    borderRadius: 3,\r\n    width: 292,\r\n    height: 49,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  text: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n    fontWeight: \"bold\",\r\n    fontFamily: \"RobotoRegular\"\r\n  },\r\n  textFontFamily: {\r\n    fontFamily: \"RobotoRegular\",\r\n  }\r\n});\r\n\r\nexport { RecaptchaModal };\r\n"]},"metadata":{},"sourceType":"module"}