{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\node_modules\\\\react-native-page-list\\\\src\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport InteractionManager from \"react-native-web/dist/exports/InteractionManager\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PropTypes from \"prop-types\";\nimport Scrolling from \"react-native-scrolling\";\nimport { createResponder } from \"react-native-easy-guesture-responder\";\nvar MIN_FLING_VELOCITY = 0.5;\n\nvar _Dimensions$get = Dimensions.get(\"window\"),\n    width = _Dimensions$get.width,\n    height = _Dimensions$get.height;\n\nvar PageList = function (_PureComponent) {\n  _inherits(PageList, _PureComponent);\n\n  var _super = _createSuper(PageList);\n\n  function PageList(props) {\n    var _this;\n\n    _classCallCheck(this, PageList);\n\n    _this = _super.call(this, props);\n    _this.currentPage = undefined;\n    _this.layoutChanged = false;\n    _this.activeGesture = false;\n    _this.gestureResponder = undefined;\n    _this.state = {\n      width: width,\n      height: height\n    };\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.renderRow = _this.renderRow.bind(_assertThisInitialized(_this));\n    _this.onResponderGrant = _this.onResponderGrant.bind(_assertThisInitialized(_this));\n    _this.onResponderMove = _this.onResponderMove.bind(_assertThisInitialized(_this));\n    _this.onResponderRelease = _this.onResponderRelease.bind(_assertThisInitialized(_this));\n    _this.getItemLayout = _this.getItemLayout.bind(_assertThisInitialized(_this));\n    _this.scroller = _this.createScrolling();\n    _this.gestureResponder = createResponder({\n      onStartShouldSetResponder: function onStartShouldSetResponder(evt, gestureState) {\n        return true;\n      },\n      onResponderGrant: _this.onResponderGrant,\n      onResponderMove: _this.onResponderMove,\n      onResponderRelease: _this.onResponderRelease,\n      onResponderTerminate: _this.onResponderRelease\n    });\n    return _this;\n  }\n\n  _createClass(PageList, [{\n    key: \"createScrolling\",\n    value: function createScrolling() {\n      var _this2 = this;\n\n      return new Scrolling(true, function (dx, dy, scroller) {\n        if (dx === 0 && dy === 0 && scroller.isFinished()) {\n          if (!_this2.activeGesture) {\n            _this2.onPageScrollStateChanged(\"idle\");\n          }\n        } else {\n          var curX = _this2.scroller.getCurrX();\n\n          _this2.innerFlatList && _this2.innerFlatList.scrollToOffset({\n            offset: curX,\n            animated: false\n          });\n          var position = Math.floor(curX / (_this2.state.width + _this2.props.pageMargin));\n          position = _this2.validPage(position);\n\n          var offset = (curX - _this2.getScrollOffsetOfPage(position)) / (_this2.state.width + _this2.props.pageMargin);\n\n          var fraction = (curX - _this2.getScrollOffsetOfPage(position) - _this2.props.pageMargin) / _this2.state.width;\n\n          if (fraction < 0) {\n            fraction = 0;\n          }\n\n          _this2.props.onPageScroll && _this2.props.onPageScroll({\n            position: position,\n            offset: offset,\n            fraction: fraction\n          });\n        }\n      });\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this3 = this;\n\n      this.onPageScrollStateChanged(\"settling\");\n      var page = this.validPage(this.props.initialPage);\n      this.onPageChanged(page);\n      var finalX = this.getScrollOffsetOfPage(page);\n      this.scroller.startScroll(this.scroller.getCurrX(), 0, finalX - this.scroller.getCurrX(), 0, 0);\n      requestAnimationFrame(function () {\n        _this3.scrollByOffset(1);\n\n        _this3.scrollByOffset(-1);\n      });\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var pageDataArray = this.props.pageDataArray.length > 0 ? this.props.pageDataArray : this.props.data;\n\n      if (this.layoutChanged) {\n        this.layoutChanged = false;\n\n        if (typeof this.currentPage === \"number\") {\n          this.scrollToPage(this.currentPage, true);\n        }\n      } else if (this.currentPage + 1 >= pageDataArray.length && pageDataArray.length !== prevProps.pageDataArray.length) {\n        this.scrollToPage(pageDataArray.length, true);\n      }\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          width = _e$nativeEvent$layout.width,\n          height = _e$nativeEvent$layout.height;\n      var sizeChanged = this.state.width !== width || this.state.height !== height;\n\n      if (width && height && sizeChanged) {\n        this.layoutChanged = true;\n        this.setState({\n          width: width,\n          height: height\n        });\n      }\n    }\n  }, {\n    key: \"onResponderGrant\",\n    value: function onResponderGrant(evt, gestureState) {\n      this.activeGesture = true;\n      this.onPageScrollStateChanged(\"dragging\");\n    }\n  }, {\n    key: \"onResponderMove\",\n    value: function onResponderMove(evt, gestureState) {\n      var dx = gestureState.moveX - gestureState.previousMoveX;\n      this.scrollByOffset(dx);\n    }\n  }, {\n    key: \"onResponderRelease\",\n    value: function onResponderRelease(evt, gestureState, disableSettle) {\n      this.activeGesture = false;\n\n      if (!disableSettle) {\n        this.settlePage(gestureState.vx);\n      }\n    }\n  }, {\n    key: \"onPageChanged\",\n    value: function onPageChanged(page) {\n      if (this.currentPage !== page) {\n        this.currentPage = page;\n        this.props.onPageSelected && this.props.onPageSelected(page);\n      }\n    }\n  }, {\n    key: \"onPageScrollStateChanged\",\n    value: function onPageScrollStateChanged(state) {\n      this.props.onPageScrollStateChanged && this.props.onPageScrollStateChanged(state);\n    }\n  }, {\n    key: \"settlePage\",\n    value: function settlePage(vx) {\n      var sensitiveScroll = this.props.sensitiveScroll;\n      var pageDataArray = this.props.pageDataArray.length > 0 ? this.props.pageDataArray : this.props.data;\n\n      if (sensitiveScroll && vx < -MIN_FLING_VELOCITY) {\n        if (this.currentPage < pageDataArray.length - 1) {\n          this.flingToPage(this.currentPage + 1, vx);\n        } else {\n          this.flingToPage(pageDataArray.length - 1, vx);\n        }\n      } else if (sensitiveScroll && vx > MIN_FLING_VELOCITY) {\n        if (this.currentPage > 0) {\n          this.flingToPage(this.currentPage - 1, vx);\n        } else {\n          this.flingToPage(0, vx);\n        }\n      } else {\n        var page = this.currentPage;\n        var progress = (this.scroller.getCurrX() - this.getScrollOffsetOfPage(this.currentPage)) / this.state.width;\n\n        if (progress > 1 / 3) {\n          page += 1;\n        } else if (progress < -1 / 3) {\n          page -= 1;\n        }\n\n        page = Math.min(pageDataArray.length - 1, page);\n        page = Math.max(0, page);\n        this.scrollToPage(page);\n      }\n    }\n  }, {\n    key: \"getScrollOffsetOfPage\",\n    value: function getScrollOffsetOfPage(page) {\n      var pageDataArray = this.props.pageDataArray.length > 0 ? this.props.pageDataArray : this.props.data;\n      return this.getItemLayout(pageDataArray, page).offset;\n    }\n  }, {\n    key: \"flingToPage\",\n    value: function flingToPage(page, velocityX) {\n      this.onPageScrollStateChanged(\"settling\");\n      page = this.validPage(page);\n      this.onPageChanged(page);\n      velocityX *= -1000;\n      var finalX = this.getScrollOffsetOfPage(page);\n      this.scroller.fling(this.scroller.getCurrX(), 0, velocityX, 0, finalX, finalX, 0, 0);\n    }\n  }, {\n    key: \"scrollToPage\",\n    value: function scrollToPage(page, immediate) {\n      var _this4 = this;\n\n      this.onPageScrollStateChanged(\"settling\");\n      page = this.validPage(page);\n      this.onPageChanged(page);\n      var finalX = this.getScrollOffsetOfPage(page);\n\n      if (immediate) {\n        InteractionManager.runAfterInteractions(function () {\n          _this4.scroller.startScroll(_this4.scroller.getCurrX(), 0, finalX - _this4.scroller.getCurrX(), 0, 0);\n\n          _this4.innerFlatList && _this4.innerFlatList.scrollToOffset({\n            offset: finalX,\n            animated: false\n          });\n          _this4.innerFlatList && _this4.innerFlatList.recordInteraction();\n        });\n      } else {\n        this.scroller.startScroll(this.scroller.getCurrX(), 0, finalX - this.scroller.getCurrX(), 0, 400);\n      }\n    }\n  }, {\n    key: \"scrollByOffset\",\n    value: function scrollByOffset(dx) {\n      this.scroller.startScroll(this.scroller.getCurrX(), 0, -dx, 0, 0);\n    }\n  }, {\n    key: \"validPage\",\n    value: function validPage(page) {\n      var pageDataArray = this.props.pageDataArray.length > 0 ? this.props.pageDataArray : this.props.data;\n      page = Math.min(pageDataArray.length - 1, page);\n      page = Math.max(0, page);\n      return page;\n    }\n  }, {\n    key: \"getScrollOffsetFromCurrentPage\",\n    value: function getScrollOffsetFromCurrentPage() {\n      return this.scroller.getCurrX() - this.getScrollOffsetOfPage(this.currentPage);\n    }\n  }, {\n    key: \"getItemLayout\",\n    value: function getItemLayout(data, index) {\n      return {\n        length: this.state.width + this.props.pageMargin,\n        offset: (this.state.width + this.props.pageMargin) * index,\n        index: index\n      };\n    }\n  }, {\n    key: \"keyExtractor\",\n    value: function keyExtractor(item, index) {\n      if (item.key) {\n        return item.key.toString();\n      }\n\n      return index.toString();\n    }\n  }, {\n    key: \"renderRow\",\n    value: function renderRow(_ref) {\n      var item = _ref.item,\n          index = _ref.index;\n      var _this$state = this.state,\n          width = _this$state.width,\n          height = _this$state.height;\n      var page = this.props.renderPage ? this.props.renderPage(item, index) : this.props.renderItem({\n        item: item,\n        index: index\n      });\n      var layout = {\n        width: width,\n        height: height,\n        position: \"relative\"\n      };\n      var style = page.props.style ? [page.props.style, layout] : layout;\n\n      var newProps = _objectSpread({}, page.props, {\n        ref: page.ref,\n        style: style\n      });\n\n      var element = React.createElement(page.type, newProps);\n\n      if (this.props.pageMargin > 0 && index > 0) {\n        return React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 356,\n            columnNumber: 17\n          }\n        }, React.createElement(View, {\n          style: {\n            width: width + this.props.pageMargin,\n            height: height,\n            alignItems: \"flex-end\"\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 21\n          }\n        }, element));\n      } else {\n        return element;\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this5 = this;\n\n      var _this$state2 = this.state,\n          width = _this$state2.width,\n          height = _this$state2.height;\n      var _this$props = this.props,\n          scrollEnabled = _this$props.scrollEnabled,\n          style = _this$props.style,\n          scrollViewStyle = _this$props.scrollViewStyle;\n      var pageDataArray = this.props.pageDataArray.length > 0 ? this.props.pageDataArray : this.props.data;\n\n      if (width && height) {\n        var list = pageDataArray;\n\n        if (!list) {\n          list = [];\n        }\n      }\n\n      var gestureResponder = this.gestureResponder;\n\n      if (!scrollEnabled || pageDataArray.length <= 0) {\n        gestureResponder = {};\n      }\n\n      return React.createElement(View, _extends({}, this.props, {\n        style: [style, {\n          flex: 1\n        }]\n      }, gestureResponder, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395,\n          columnNumber: 13\n        }\n      }), React.createElement(FlatList, _extends({}, this.props.flatListProps, {\n        style: [{\n          flex: 1\n        }, scrollViewStyle, this.props.flatListProps.style],\n        ref: function ref(component) {\n          return _this5.innerFlatList = component;\n        },\n        keyExtractor: this.keyExtractor,\n        scrollEnabled: false,\n        horizontal: true,\n        data: pageDataArray,\n        renderItem: this.renderRow,\n        onLayout: this.onLayout,\n        removeClippedSubviews: this.props.removeClippedSubviews,\n        initialNumToRender: this.props.initialNumToRender,\n        contentOffset: {\n          x: this.getScrollOffsetOfPage(parseInt(this.props.initialPage)),\n          y: 0\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 399,\n          columnNumber: 17\n        }\n      })));\n    }\n  }]);\n\n  return PageList;\n}(PureComponent);\n\nPageList.propTypes = _objectSpread({}, View.propTypes, {\n  initialPage: PropTypes.number,\n  initialNumToRender: PropTypes.number,\n  pageMargin: PropTypes.number,\n  scrollViewStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  scrollEnabled: PropTypes.bool,\n  renderItem: PropTypes.func,\n  data: PropTypes.array,\n  renderPage: PropTypes.func,\n  pageDataArray: PropTypes.array,\n  removeClippedSubviews: PropTypes.bool,\n  sensitiveScroll: PropTypes.bool,\n  onPageSelected: PropTypes.func,\n  onPageScrollStateChanged: PropTypes.func,\n  onPageScroll: PropTypes.func,\n  flatListProps: PropTypes.object\n});\nPageList.defaultProps = {\n  initialPage: 0,\n  initialNumToRender: 7,\n  pageMargin: 0,\n  scrollEnabled: true,\n  data: [],\n  pageDataArray: [],\n  sensitiveScroll: true,\n  removeClippedSubviews: true,\n  flatListProps: {}\n};\nexport { PageList as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-page-list/src/index.js"],"names":["React","PureComponent","PropTypes","Scrolling","createResponder","MIN_FLING_VELOCITY","Dimensions","get","width","height","PageList","props","currentPage","undefined","layoutChanged","activeGesture","gestureResponder","state","onLayout","bind","renderRow","onResponderGrant","onResponderMove","onResponderRelease","getItemLayout","scroller","createScrolling","onStartShouldSetResponder","evt","gestureState","onResponderTerminate","dx","dy","isFinished","onPageScrollStateChanged","curX","getCurrX","innerFlatList","scrollToOffset","offset","animated","position","Math","floor","pageMargin","validPage","getScrollOffsetOfPage","fraction","onPageScroll","page","initialPage","onPageChanged","finalX","startScroll","requestAnimationFrame","scrollByOffset","prevProps","pageDataArray","length","data","scrollToPage","e","nativeEvent","layout","sizeChanged","setState","moveX","previousMoveX","disableSettle","settlePage","vx","onPageSelected","sensitiveScroll","flingToPage","progress","min","max","velocityX","fling","immediate","InteractionManager","runAfterInteractions","recordInteraction","index","item","key","toString","renderPage","renderItem","style","newProps","ref","element","createElement","type","alignItems","scrollEnabled","scrollViewStyle","list","flex","flatListProps","component","keyExtractor","removeClippedSubviews","initialNumToRender","x","parseInt","y","propTypes","View","number","ViewPropTypes","bool","func","array","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport {\n    View,\n    FlatList,\n    ViewPropTypes,\n    InteractionManager,\n    Dimensions\n} from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport Scrolling from \"react-native-scrolling\";\nimport { createResponder } from \"react-native-easy-guesture-responder\";\n\nconst MIN_FLING_VELOCITY = 0.5;\n\nconst { width, height } = Dimensions.get(\"window\");\n\nexport default class PageList extends PureComponent {\n    static propTypes = {\n        ...View.propTypes,\n        initialPage: PropTypes.number,\n        initialNumToRender: PropTypes.number,\n        pageMargin: PropTypes.number,\n        scrollViewStyle: ViewPropTypes\n            ? ViewPropTypes.style\n            : View.propTypes.style,\n        scrollEnabled: PropTypes.bool,\n        renderItem: PropTypes.func,\n        data: PropTypes.array,\n        renderPage: PropTypes.func,\n        pageDataArray: PropTypes.array,\n        removeClippedSubviews: PropTypes.bool,\n        sensitiveScroll: PropTypes.bool,\n        onPageSelected: PropTypes.func,\n        onPageScrollStateChanged: PropTypes.func,\n        onPageScroll: PropTypes.func,\n        flatListProps: PropTypes.object\n    };\n\n    static defaultProps = {\n        initialPage: 0,\n        initialNumToRender: 7,\n        pageMargin: 0,\n        scrollEnabled: true,\n        data: [],\n        pageDataArray: [],\n        sensitiveScroll: true,\n        removeClippedSubviews: true,\n        flatListProps: {}\n    };\n\n    // Do not initialize to make onPageSelected(0) be dispatched\n    currentPage = undefined;\n    layoutChanged = false;\n    activeGesture = false;\n    gestureResponder = undefined;\n\n    state = { width, height };\n\n    constructor (props) {\n        super(props);\n\n        this.onLayout = this.onLayout.bind(this);\n        this.renderRow = this.renderRow.bind(this);\n        this.onResponderGrant = this.onResponderGrant.bind(this);\n        this.onResponderMove = this.onResponderMove.bind(this);\n        this.onResponderRelease = this.onResponderRelease.bind(this);\n        this.getItemLayout = this.getItemLayout.bind(this);\n\n        this.scroller = this.createScrolling();\n\n        this.gestureResponder = createResponder({\n            onStartShouldSetResponder: (evt, gestureState) => true,\n            onResponderGrant: this.onResponderGrant,\n            onResponderMove: this.onResponderMove,\n            onResponderRelease: this.onResponderRelease,\n            onResponderTerminate: this.onResponderRelease\n        });\n    }\n\n    createScrolling () {\n        return new Scrolling(true, (dx, dy, scroller) => {\n            if (dx === 0 && dy === 0 && scroller.isFinished()) {\n                if (!this.activeGesture) {\n                    this.onPageScrollStateChanged(\"idle\");\n                }\n            } else {\n                const curX = this.scroller.getCurrX();\n                this.innerFlatList &&\n                    this.innerFlatList.scrollToOffset({\n                        offset: curX,\n                        animated: false\n                    });\n\n                let position = Math.floor(\n                    curX / (this.state.width + this.props.pageMargin)\n                );\n                position = this.validPage(position);\n                let offset = (curX - this.getScrollOffsetOfPage(position)) /\n                    (this.state.width + this.props.pageMargin);\n                let fraction =\n                    (curX - this.getScrollOffsetOfPage(position) - this.props.pageMargin) /\n                    this.state.width;\n                if (fraction < 0) {\n                    fraction = 0;\n                }\n                this.props.onPageScroll && this.props.onPageScroll({\n                    position, offset, fraction\n                });\n            }\n        });\n    }\n\n    componentDidMount () {\n        // FlatList is set to render at initialPage.\n        // The scroller we use is not aware of this.\n        // Let it know by simulating most of what happens in scrollToPage()\n        this.onPageScrollStateChanged(\"settling\");\n\n        const page = this.validPage(this.props.initialPage);\n        this.onPageChanged(page);\n\n        const finalX = this.getScrollOffsetOfPage(page);\n        this.scroller.startScroll(\n            this.scroller.getCurrX(),\n            0,\n            finalX - this.scroller.getCurrX(),\n            0,\n            0\n        );\n\n        requestAnimationFrame(() => {\n            // this is here to work around a bug in FlatList\n            this.scrollByOffset(1);\n            this.scrollByOffset(-1);\n        });\n    }\n\n    componentDidUpdate (prevProps) {\n        const pageDataArray = this.props.pageDataArray.length > 0\n            ? this.props.pageDataArray\n            : this.props.data;\n        if (this.layoutChanged) {\n            this.layoutChanged = false;\n            if (typeof this.currentPage === \"number\") {\n                this.scrollToPage(this.currentPage, true);\n            }\n        } else if (\n            this.currentPage + 1 >= pageDataArray.length &&\n            pageDataArray.length !== prevProps.pageDataArray.length\n        ) {\n            this.scrollToPage(pageDataArray.length, true);\n        }\n    }\n\n    onLayout (e) {\n        // eslint-disable-next-line no-shadow\n        let { width, height } = e.nativeEvent.layout;\n        let sizeChanged = this.state.width !== width ||\n            this.state.height !== height;\n        if (width && height && sizeChanged) {\n            this.layoutChanged = true;\n            this.setState({ width, height });\n        }\n    }\n\n    onResponderGrant (evt, gestureState) {\n        // this.scroller.forceFinished(true);\n        this.activeGesture = true;\n        this.onPageScrollStateChanged(\"dragging\");\n    }\n\n    onResponderMove (evt, gestureState) {\n        let dx = gestureState.moveX - gestureState.previousMoveX;\n        this.scrollByOffset(dx);\n    }\n\n    onResponderRelease (evt, gestureState, disableSettle) {\n        this.activeGesture = false;\n        if (!disableSettle) {\n            this.settlePage(gestureState.vx);\n        }\n    }\n\n    onPageChanged (page) {\n        if (this.currentPage !== page) {\n            this.currentPage = page;\n            this.props.onPageSelected && this.props.onPageSelected(page);\n        }\n    }\n\n    onPageScrollStateChanged (state) {\n        this.props.onPageScrollStateChanged &&\n            this.props.onPageScrollStateChanged(state);\n    }\n\n    settlePage (vx) {\n        const { sensitiveScroll } = this.props;\n        const pageDataArray = this.props.pageDataArray.length > 0\n            ? this.props.pageDataArray\n            : this.props.data;\n\n        if (sensitiveScroll && vx < -MIN_FLING_VELOCITY) {\n            if (this.currentPage < pageDataArray.length - 1) {\n                this.flingToPage(this.currentPage + 1, vx);\n            } else {\n                this.flingToPage(pageDataArray.length - 1, vx);\n            }\n        } else if (sensitiveScroll && vx > MIN_FLING_VELOCITY) {\n            if (this.currentPage > 0) {\n                this.flingToPage(this.currentPage - 1, vx);\n            } else {\n                this.flingToPage(0, vx);\n            }\n        } else {\n            let page = this.currentPage;\n            let progress = (this.scroller.getCurrX() -\n                this.getScrollOffsetOfPage(this.currentPage)) /\n                this.state.width;\n            if (progress > 1 / 3) {\n                page += 1;\n            } else if (progress < -1 / 3) {\n                page -= 1;\n            }\n            page = Math.min(pageDataArray.length - 1, page);\n            page = Math.max(0, page);\n            this.scrollToPage(page);\n        }\n    }\n\n    getScrollOffsetOfPage (page) {\n        const pageDataArray = this.props.pageDataArray.length > 0\n            ? this.props.pageDataArray\n            : this.props.data;\n        return this.getItemLayout(pageDataArray, page).offset;\n    }\n\n    flingToPage (page, velocityX) {\n        this.onPageScrollStateChanged(\"settling\");\n\n        page = this.validPage(page);\n        this.onPageChanged(page);\n\n        velocityX *= -1000; // per sec\n        const finalX = this.getScrollOffsetOfPage(page);\n        this.scroller.fling(\n            this.scroller.getCurrX(),\n            0,\n            velocityX,\n            0,\n            finalX,\n            finalX,\n            0,\n            0\n        );\n    }\n\n    scrollToPage (page, immediate) {\n        this.onPageScrollStateChanged(\"settling\");\n\n        page = this.validPage(page);\n        this.onPageChanged(page);\n\n        const finalX = this.getScrollOffsetOfPage(page);\n        if (immediate) {\n            InteractionManager.runAfterInteractions(() => {\n                this.scroller.startScroll(\n                    this.scroller.getCurrX(),\n                    0,\n                    finalX - this.scroller.getCurrX(),\n                    0,\n                    0\n                );\n                this.innerFlatList &&\n                    this.innerFlatList.scrollToOffset({\n                        offset: finalX,\n                        animated: false\n                    });\n                this.innerFlatList &&\n                    this.innerFlatList.recordInteraction();\n            });\n        } else {\n            this.scroller.startScroll(\n                this.scroller.getCurrX(),\n                0,\n                finalX - this.scroller.getCurrX(),\n                0,\n                400\n            );\n        }\n    }\n\n    scrollByOffset (dx) {\n        this.scroller.startScroll(this.scroller.getCurrX(), 0, -dx, 0, 0);\n    }\n\n    validPage (page) {\n        const pageDataArray = this.props.pageDataArray.length > 0\n            ? this.props.pageDataArray\n            : this.props.data;\n        page = Math.min(\n            pageDataArray.length - 1,\n            page\n        );\n        page = Math.max(0, page);\n        return page;\n    }\n\n    getScrollOffsetFromCurrentPage () {\n        return this.scroller.getCurrX() -\n            this.getScrollOffsetOfPage(this.currentPage);\n    }\n\n    getItemLayout (data, index) {\n        // this method is called \"getItemLayout\", but it is not actually used\n        // as the \"getItemLayout\" function for the FlatList. We use it within\n        // the code on this page though. The reason for this is that working\n        // with \"getItemLayout\" for FlatList is buggy. You might end up with\n        // unrendered / missing content. Therefore we work around it, as\n        // described here\n        return {\n            length: this.state.width + this.props.pageMargin,\n            offset: (this.state.width + this.props.pageMargin) * index,\n            index\n        };\n    }\n\n    keyExtractor (item, index) {\n        if (item.key) {\n            return item.key.toString();\n        }\n        return index.toString();\n    }\n\n    renderRow ({ item, index }) {\n        // eslint-disable-next-line no-shadow\n        const { width, height } = this.state;\n        let page = this.props.renderPage\n            ? this.props.renderPage(item, index)\n            : this.props.renderItem({ item, index });\n\n        const layout = {\n            width,\n            height,\n            position: \"relative\"\n        };\n        const style = page.props.style ? [page.props.style, layout] : layout;\n\n        let newProps = { ...page.props, ref: page.ref, style };\n        const element = React.createElement(page.type, newProps);\n\n        if (this.props.pageMargin > 0 && index > 0) {\n            // Do not using margin style to implement pageMargin.\n            // The ListView seems to calculate a\n            // wrong width for children views with margin.\n            return (\n                <View>\n                    <View style={{\n                        width: width + this.props.pageMargin,\n                        height: height,\n                        alignItems: \"flex-end\"\n                    }}>\n                        { element }\n                    </View>\n                </View>\n            );\n        } else {\n            return element;\n        }\n    }\n\n    render () {\n        // eslint-disable-next-line no-shadow\n        const { width, height } = this.state;\n        const {\n            scrollEnabled,\n            style, scrollViewStyle\n        } = this.props;\n        const pageDataArray = this.props.pageDataArray.length > 0\n            ? this.props.pageDataArray\n            : this.props.data;\n\n        if (width && height) {\n            let list = pageDataArray;\n            if (!list) {\n                list = [];\n            }\n        }\n\n        let gestureResponder = this.gestureResponder;\n        if (!scrollEnabled || pageDataArray.length <= 0) {\n            gestureResponder = {};\n        }\n\n        return (\n            <View\n                {...this.props}\n                style={[style, { flex: 1 }]}\n                {...gestureResponder}>\n                <FlatList\n                    {...this.props.flatListProps}\n                    style={[{ flex: 1 }, scrollViewStyle,\n                        this.props.flatListProps.style\n                    ]}\n                    ref={(component) => (this.innerFlatList = component)}\n                    keyExtractor={this.keyExtractor}\n                    scrollEnabled={false}\n                    horizontal={true}\n                    data={pageDataArray}\n                    renderItem={this.renderRow}\n                    onLayout={this.onLayout}\n                    removeClippedSubviews={this.props.removeClippedSubviews}\n                    initialNumToRender={this.props.initialNumToRender}\n\n                    // use contentOffset instead of\n                    // initialScrollIndex so that we don\"t have\n                    // to use the buggy \"getItemLayout\" prop.\n                    // eslint-disable-next-line radix\n                    contentOffset = {{\n                        x: this.getScrollOffsetOfPage(\n                            // eslint-disable-next-line\n                            parseInt(this.props.initialPage)\n                        ),\n                        y: 0\n                    }}\n                />\n            </View>\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}