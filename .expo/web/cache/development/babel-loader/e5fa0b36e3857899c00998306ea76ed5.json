{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\screens\\\\subscreen\\\\rank\\\\RouteRanking\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport { RouteRanking } from \"@components/templates\";\nimport { readByObjectGroup as readRouteTicket } from \"@redux/routeTicket/action\";\nimport { readFromDatabase as readRewards } from \"@redux/reward/action\";\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var routeId = this.props.navigation.state.params.routeId;\n      this.props.readRewards({\n        routeId: routeId\n      });\n      this.props.readRouteTicket({\n        routeId: routeId\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var routeTickets = this.props.routeTickets;\n      var _this$props$rewardSta = this.props.rewardState,\n          rewards = _this$props$rewardSta.rewards,\n          readLoading = _this$props$rewardSta.readLoading;\n      var uid = this.props.uid;\n      var validRouteTicket = routeTickets.filter(function (routeTicket) {\n        return routeTicket.numberCompletedMissions === routeTicket.route.totalMissions && routeTicket.reward.id !== null;\n      });\n      var ranking = rewards.map(function (reward) {\n        var routeTicketMatch = validRouteTicket.filter(function (routeTicket) {\n          return routeTicket.user.id === reward.user.id;\n        });\n        var completeTime = routeTicketMatch.length !== 0 ? routeTicketMatch[0].completedMissions[routeTicketMatch[0].completedMissions.length - 1].at : reward.obtained.at;\n        return _objectSpread(_objectSpread({}, reward), {}, {\n          completeIn: completeTime\n        });\n      });\n      return React.createElement(RouteRanking, {\n        prizeTitle: \"Prize: \",\n        completeInTitle: \"Complete in\",\n        data: ranking,\n        uid: uid,\n        message: \"Join our LUCKY DRAW by complete any station mission!\",\n        termsAndConditions: \"Term and Condition Apply.\",\n        readLoading: readLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var rewardState = state.Reward;\n  var routeTickets = state.RouteTicket.routeTickets;\n  var uid = state.Auth.user.uid;\n  return {\n    rewardState: rewardState,\n    routeTickets: routeTickets,\n    uid: uid\n  };\n};\n\nexport default connect(mapStateToProps, {\n  readRewards: readRewards,\n  readRouteTicket: readRouteTicket\n})(index);","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/screens/subscreen/rank/RouteRanking/index.js"],"names":["React","Component","connect","Actions","RouteRanking","readByObjectGroup","readRouteTicket","readFromDatabase","readRewards","styles","index","props","state","routeId","navigation","params","routeTickets","rewardState","rewards","readLoading","uid","validRouteTicket","filter","routeTicket","numberCompletedMissions","route","totalMissions","reward","id","ranking","map","routeTicketMatch","user","completeTime","length","completedMissions","at","obtained","completeIn","mapStateToProps","Reward","RouteTicket","Auth"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { RouteRanking } from \"@components/templates\";\r\n\r\nimport { readByObjectGroup as readRouteTicket } from \"@redux/routeTicket/action\";\r\nimport { readFromDatabase as readRewards } from \"@redux/reward/action\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentWillMount() {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    this.props.readRewards({ routeId });\r\n    this.props.readRouteTicket({ routeId });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    \r\n  }\r\n\r\n  render() {\r\n    const routeTickets = this.props.routeTickets;\r\n    const { rewards, readLoading } = this.props.rewardState;\r\n    const { uid } = this.props;\r\n\r\n    const validRouteTicket = routeTickets.filter((routeTicket) => {\r\n      return (\r\n        routeTicket.numberCompletedMissions === routeTicket.route.totalMissions && \r\n        routeTicket.reward.id !== null\r\n        );\r\n    });\r\n\r\n    const ranking = rewards.map((reward) => {\r\n      const routeTicketMatch = validRouteTicket.filter((routeTicket) => {\r\n        return routeTicket.user.id === reward.user.id;\r\n      });\r\n      \r\n      const completeTime = (\r\n        routeTicketMatch.length !== 0 ? \r\n        routeTicketMatch[0].completedMissions[routeTicketMatch[0].completedMissions.length - 1].at\r\n        :\r\n        reward.obtained.at\r\n        );\r\n\r\n      return {\r\n        ...reward,\r\n        completeIn: completeTime,\r\n      };\r\n    });\r\n\r\n    return (\r\n      <RouteRanking\r\n        prizeTitle=\"Prize: \"\r\n        completeInTitle=\"Complete in\"\r\n        data={ranking}\r\n        uid={uid}\r\n        message=\"Join our LUCKY DRAW by complete any station mission!\"\r\n        termsAndConditions=\"Term and Condition Apply.\"\r\n        readLoading={readLoading}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const rewardState = state.Reward;\r\n  const routeTickets = state.RouteTicket.routeTickets;\r\n  const { uid } = state.Auth.user;\r\n\r\n  return {\r\n    rewardState,\r\n    routeTickets,\r\n    uid,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, { readRewards, readRouteTicket })(index);\r\n"]},"metadata":{},"sourceType":"module"}