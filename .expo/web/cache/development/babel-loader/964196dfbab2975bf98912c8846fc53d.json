{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\components\\\\organisms\\\\Memo\\\\index.js\";\nimport React from \"react\";\nimport { Text, View } from \"../../atoms\";\nimport { Button } from \"../../atoms\";\nimport styles from \"./styles\";\n\nvar Memo = function Memo(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? null : _ref$title,\n      _ref$messages = _ref.messages,\n      messages = _ref$messages === void 0 ? null : _ref$messages,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? [] : _ref$options;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textFontFamily,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, title)), React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: styles.textFontFamily,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 17\n    }\n  }, messages)), React.createElement(View, {\n    style: styles.buttonContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }\n  }, options.map(function (option, index) {\n    var text = option.text,\n        onPress = option.onPress;\n    return React.createElement(Button, {\n      key: index,\n      title: text,\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 25\n      }\n    });\n  })));\n};\n\nexport { Memo };","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/components/organisms/Memo/index.js"],"names":["React","Text","View","Button","styles","Memo","title","messages","options","container","textFontFamily","buttonContainer","map","option","index","text","onPress"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,IADJ,EAEIC,IAFJ;AAKA,SACIC,MADJ;AAIA,OAAOC,MAAP;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAqD;AAAA,wBAAlDC,KAAkD;AAAA,MAAlDA,KAAkD,2BAA1C,IAA0C;AAAA,2BAApCC,QAAoC;AAAA,MAApCA,QAAoC,8BAAzB,IAAyB;AAAA,0BAAnBC,OAAmB;AAAA,MAAnBA,OAAmB,6BAAT,EAAS;AAC9D,SACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEL,MAAM,CAACM,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCJ,KAArC,CADJ,CADJ,EAKI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEF,MAAM,CAACM,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCH,QAArC,CADJ,CALJ,EAQI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACO,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,OAAO,CAACI,GAAR,CAAY,UAACC,MAAD,EAASC,KAAT,EAAmB;AAAA,QACpBC,IADoB,GACFF,MADE,CACpBE,IADoB;AAAA,QACdC,OADc,GACFH,MADE,CACdG,OADc;AAE5B,WACI,oBAAC,MAAD;AAAQ,MAAA,GAAG,EAAEF,KAAb;AAAoB,MAAA,KAAK,EAAEC,IAA3B;AAAiC,MAAA,OAAO,EAAEC,OAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ;AAGH,GALA,CADL,CARJ,CADJ;AAmBH,CApBD;;AAsBA,SAASX,IAAT","sourcesContent":["import React from \"react\";\r\n\r\nimport {\r\n    Text, \r\n    View\r\n} from \"../../atoms\";  \r\n\r\nimport {    \r\n    Button \r\n} from \"../../atoms\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nconst Memo = ({ title = null, messages = null, options = [] }) => {\r\n    return (\r\n        <View style={styles.container}>\r\n            <View>\r\n                <Text style={styles.textFontFamily}>{title}</Text>\r\n            </View>\r\n\r\n            <View>\r\n                <Text style={styles.textFontFamily}>{messages}</Text>\r\n            </View>\r\n            <View style={styles.buttonContainer}>\r\n                {options.map((option, index) => {\r\n                    const { text, onPress } = option;\r\n                    return (\r\n                        <Button key={index} title={text} onPress={onPress} />\r\n                    );\r\n                })}\r\n            </View>\r\n        </View>\r\n    );\r\n};\r\n\r\nexport { Memo };\r\n"]},"metadata":{},"sourceType":"module"}