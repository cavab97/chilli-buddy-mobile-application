{"ast":null,"code":"'use strict';\n\nimport _extends from \"@babel/runtime/helpers/extends\";\nimport React from 'react';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction cloneReferencedElement(element, config) {\n  var cloneRef = config.ref;\n  var originalRef = element.ref;\n\n  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  if (originalRef == null || cloneRef == null) {\n    return React.cloneElement.apply(React, [element, config].concat(children));\n  }\n\n  if (typeof originalRef !== 'function') {\n    if (__DEV__) {\n      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);\n    }\n\n    return React.cloneElement.apply(React, [element, config].concat(children));\n  }\n\n  return React.cloneElement.apply(React, [element, _extends({}, config, {\n    ref: function ref(component) {\n      cloneRef(component);\n      originalRef(component);\n    }\n  })].concat(children));\n}\n\nexport default cloneReferencedElement;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/node_modules/react-native-web/dist/vendor/react-native/ListView/cloneReferencedElement.js"],"names":["React","__DEV__","process","env","NODE_ENV","cloneReferencedElement","element","config","cloneRef","ref","originalRef","_len","arguments","length","children","Array","_key","cloneElement","apply","concat","console","warn","component"],"mappings":"AAAA;;;AAEA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,IAAIC,OAAO,GAAGC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAvC;;AAEA,SAASC,sBAAT,CAAgCC,OAAhC,EAAyCC,MAAzC,EAAiD;AAC/C,MAAIC,QAAQ,GAAGD,MAAM,CAACE,GAAtB;AACA,MAAIC,WAAW,GAAGJ,OAAO,CAACG,GAA1B;;AAEA,OAAK,IAAIE,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,QAAQ,GAAGC,KAAK,CAACJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAvB,CAA7C,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,IAAAA,QAAQ,CAACE,IAAI,GAAG,CAAR,CAAR,GAAqBJ,SAAS,CAACI,IAAD,CAA9B;AACD;;AAED,MAAIN,WAAW,IAAI,IAAf,IAAuBF,QAAQ,IAAI,IAAvC,EAA6C;AAC3C,WAAOR,KAAK,CAACiB,YAAN,CAAmBC,KAAnB,CAAyBlB,KAAzB,EAAgC,CAACM,OAAD,EAAUC,MAAV,EAAkBY,MAAlB,CAAyBL,QAAzB,CAAhC,CAAP;AACD;;AAED,MAAI,OAAOJ,WAAP,KAAuB,UAA3B,EAAuC;AACrC,QAAIT,OAAJ,EAAa;AACXmB,MAAAA,OAAO,CAACC,IAAR,CAAa,uEAAuE,kEAAvE,GAA4I,gBAA5I,GAA+JX,WAA5K;AACD;;AACD,WAAOV,KAAK,CAACiB,YAAN,CAAmBC,KAAnB,CAAyBlB,KAAzB,EAAgC,CAACM,OAAD,EAAUC,MAAV,EAAkBY,MAAlB,CAAyBL,QAAzB,CAAhC,CAAP;AACD;;AAED,SAAOd,KAAK,CAACiB,YAAN,CAAmBC,KAAnB,CAAyBlB,KAAzB,EAAgC,CAACM,OAAD,EAAU,SAAc,EAAd,EAAkBC,MAAlB,EAA0B;AACzEE,IAAAA,GAAG,EAAE,SAASA,GAAT,CAAaa,SAAb,EAAwB;AAC3Bd,MAAAA,QAAQ,CAACc,SAAD,CAAR;AACAZ,MAAAA,WAAW,CAACY,SAAD,CAAX;AACD;AAJwE,GAA1B,CAAV,EAKnCH,MALmC,CAK5BL,QAL4B,CAAhC,CAAP;AAMD;;AAED,eAAeT,sBAAf","sourcesContent":["'use strict';\n\nimport React from 'react';\n\nvar __DEV__ = process.env.NODE_ENV !== 'production';\n\nfunction cloneReferencedElement(element, config) {\n  var cloneRef = config.ref;\n  var originalRef = element.ref;\n\n  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  if (originalRef == null || cloneRef == null) {\n    return React.cloneElement.apply(React, [element, config].concat(children));\n  }\n\n  if (typeof originalRef !== 'function') {\n    if (__DEV__) {\n      console.warn('Cloning an element with a ref that will be overwritten because it ' + 'is not a function. Use a composable callback-style ref instead. ' + 'Ignoring ref: ' + originalRef);\n    }\n    return React.cloneElement.apply(React, [element, config].concat(children));\n  }\n\n  return React.cloneElement.apply(React, [element, Object.assign({}, config, {\n    ref: function ref(component) {\n      cloneRef(component);\n      originalRef(component);\n    }\n  })].concat(children));\n}\n\nexport default cloneReferencedElement;"]},"metadata":{},"sourceType":"module"}