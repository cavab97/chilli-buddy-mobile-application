{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport firebase from \"firebase\";\nimport { GeoCollectionReference, GeoFirestore, GeoQuery, GeoQuerySnapshot, encodeGeohash } from \"geofirestore\";\nimport { permissionsRegistration, LOCATION } from \"../../marslab-library-react-native/utils/system\";\nvar type = \"shop\";\nvar actions = {\n  PERMISSION_VERIFICATION: type + \"PERMISSION_VERIFICATION\",\n  PERMISSION_VERIFICATION_SUCCESS: type + \"PERMISSION_VERIFICATIONSUCCESS\",\n  PERMISSION_VERIFICATION_ERROR: type + \"PERMISSION_VERIFICATION_ERROR\",\n  READ_FROM_DATABASE: type + \"READ_FROM_DATABASE\",\n  READ_FROM_DATABASE_SUCCESS: type + \"READ_FROM_DATABASE_SUCCESS\",\n  READ_FROM_DATABASE_ERROR: type + \"READ_FROM_DATABASE_ERROR\"\n};\nvar firestore = firebase.firestore;\nexport var COLLECTION = \"shopPackaging0\";\nvar geoFirestore = new GeoFirestore(firestore());\nvar geoCollectionReference = geoFirestore.collection(COLLECTION);\nexport function verifyPermission() {\n  return function (dispatch) {\n    dispatch({\n      type: actions.PERMISSION_VERIFICATION\n    });\n    return new Promise(function _callee(resolve, reject) {\n      var _await$permissionsReg, _await$permissionsReg2, locationPermission, permissions;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(permissionsRegistration([LOCATION]));\n\n            case 3:\n              _await$permissionsReg = _context.sent;\n              _await$permissionsReg2 = _slicedToArray(_await$permissionsReg, 1);\n              locationPermission = _await$permissionsReg2[0];\n              permissions = {\n                location: locationPermission\n              };\n              resolve(permissions);\n              dispatch({\n                type: actions.PERMISSION_VERIFICATION,\n                payload: {\n                  data: {\n                    permissions: permissions\n                  }\n                }\n              });\n              _context.next = 16;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              reject(_context.t0);\n              console.log(_context.t0);\n              dispatch({\n                type: actions.PERMISSION_VERIFICATION_ERROR,\n                payload: {\n                  error: _context.t0\n                }\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 11]], Promise);\n    });\n  };\n}\nexport function loadShops(_ref) {\n  var radius = _ref.radius,\n      latitude = _ref.latitude,\n      longtitude = _ref.longtitude,\n      selectedCategory = _ref.selectedCategory;\n  var limit = 0;\n  return function (dispatch) {\n    dispatch({\n      type: actions.READ_FROM_DATABASE\n    });\n    return new Promise(function (resolve, reject) {\n      radius < 15 ? limit = 0 : limit = 100;\n      selectedCategory !== null && geoCollectionReference.where(\"categories\", \"array-contains-any\", [selectedCategory]).limit(limit).near({\n        center: new firebase.firestore.GeoPoint(latitude, longtitude),\n        radius: radius\n      }).get().then(function (snapshot) {\n        var Data = [];\n        snapshot.forEach(function (doc) {\n          {\n            Data.push(_objectSpread({}, doc, {\n              id: doc.id\n            }));\n          }\n        });\n        Data.sort(function (a, b) {\n          return a.distance - b.distance;\n        });\n        Data = Data.map(function (item) {\n          return _objectSpread({}, item.data(), {\n            distance: item.distance,\n            id: item.id\n          });\n        });\n        dispatch({\n          type: actions.READ_FROM_DATABASE_SUCCESS\n        });\n        resolve(Data);\n      }).catch(function (error) {\n        console.log(error);\n        dispatch({\n          type: actions.READ_FROM_DATABASE_ERROR\n        });\n        reject(error);\n      });\n      selectedCategory === null && geoCollectionReference.limit(limit).near({\n        center: new firebase.firestore.GeoPoint(latitude, longtitude),\n        radius: radius\n      }).get().then(function (snapshot) {\n        var Data = [];\n        snapshot.forEach(function (doc) {\n          Data.push(_objectSpread({}, doc, {\n            id: doc.id\n          }));\n        });\n        Data.sort(function (a, b) {\n          return a.distance - b.distance;\n        });\n        Data = Data.map(function (item) {\n          return _objectSpread({}, item.data(), {\n            distance: item.distance,\n            id: item.id\n          });\n        });\n        dispatch({\n          type: actions.READ_FROM_DATABASE_SUCCESS\n        });\n        resolve(Data);\n      }).catch(function (error) {\n        console.log(error);\n        dispatch({\n          type: actions.READ_FROM_DATABASE_ERROR\n        });\n        reject(error);\n      });\n    });\n  };\n}\nexport default actions;","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/redux/shops/action.js"],"names":["firebase","GeoCollectionReference","GeoFirestore","GeoQuery","GeoQuerySnapshot","encodeGeohash","permissionsRegistration","LOCATION","type","actions","PERMISSION_VERIFICATION","PERMISSION_VERIFICATION_SUCCESS","PERMISSION_VERIFICATION_ERROR","READ_FROM_DATABASE","READ_FROM_DATABASE_SUCCESS","READ_FROM_DATABASE_ERROR","firestore","COLLECTION","geoFirestore","geoCollectionReference","collection","verifyPermission","dispatch","Promise","resolve","reject","locationPermission","permissions","location","payload","data","console","log","error","loadShops","radius","latitude","longtitude","selectedCategory","limit","where","near","center","GeoPoint","get","then","snapshot","Data","forEach","doc","push","id","sort","a","b","distance","map","item","catch"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\r\nimport {\r\n  GeoCollectionReference,\r\n  GeoFirestore,\r\n  GeoQuery,\r\n  GeoQuerySnapshot,\r\n  encodeGeohash,\r\n} from \"geofirestore\";\r\n\r\nimport {\r\n  permissionsRegistration,\r\n  LOCATION,\r\n} from \"../../marslab-library-react-native/utils/system\";\r\n\r\nconst type = \"shop\";\r\n\r\nconst actions = {\r\n  PERMISSION_VERIFICATION: type + \"PERMISSION_VERIFICATION\",\r\n  PERMISSION_VERIFICATION_SUCCESS: type + \"PERMISSION_VERIFICATIONSUCCESS\",\r\n  PERMISSION_VERIFICATION_ERROR: type + \"PERMISSION_VERIFICATION_ERROR\",\r\n\r\n  READ_FROM_DATABASE: type + \"READ_FROM_DATABASE\",\r\n  READ_FROM_DATABASE_SUCCESS: type + \"READ_FROM_DATABASE_SUCCESS\",\r\n  READ_FROM_DATABASE_ERROR: type + \"READ_FROM_DATABASE_ERROR\",\r\n};\r\n\r\nconst { firestore } = firebase;\r\n\r\nexport const COLLECTION = \"shopPackaging0\";\r\n// Create a GeoFirestore reference\r\nconst geoFirestore = new GeoFirestore(firestore());\r\n\r\n// Create a GeoCollection reference\r\nconst geoCollectionReference = geoFirestore.collection(COLLECTION);\r\n\r\nexport function verifyPermission() {\r\n  return (dispatch) => {\r\n    dispatch({ type: actions.PERMISSION_VERIFICATION });\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        const [locationPermission] = await permissionsRegistration([LOCATION]);\r\n        const permissions = { location: locationPermission };\r\n        resolve(permissions);\r\n        dispatch({\r\n          type: actions.PERMISSION_VERIFICATION,\r\n          payload: { data: { permissions } },\r\n        });\r\n      } catch (error) {\r\n        reject(error);\r\n        console.log(error);\r\n        dispatch({\r\n          type: actions.PERMISSION_VERIFICATION_ERROR,\r\n          payload: { error },\r\n        });\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function loadShops({ radius, latitude, longtitude, selectedCategory }) {\r\n  let limit = 0;\r\n  return (dispatch) => {\r\n    dispatch({ type: actions.READ_FROM_DATABASE });\r\n    return new Promise((resolve, reject) => {\r\n      radius < 15 ? (limit = 0) : (limit = 100);\r\n      selectedCategory !== null &&\r\n        geoCollectionReference\r\n          .where(\"categories\", \"array-contains-any\", [selectedCategory])\r\n          .limit(limit)\r\n          .near({\r\n            center: new firebase.firestore.GeoPoint(latitude, longtitude),\r\n            radius: radius,\r\n          })\r\n        //   .where(\"deleted.at\", \"==\", null)\r\n          .get()\r\n          .then((snapshot) => {\r\n            let Data = [];\r\n            snapshot.forEach(function (doc) {\r\n              // if(doc.data().deleted.at === null)\r\n              {\r\n                Data.push({ ...doc, id: doc.id });\r\n              }\r\n            });\r\n\r\n            Data.sort((a, b) => a.distance - b.distance);\r\n\r\n            Data = Data.map((item) => {\r\n              return { ...item.data(), distance: item.distance, id: item.id };\r\n            });\r\n            dispatch({ type: actions.READ_FROM_DATABASE_SUCCESS });\r\n            resolve(Data);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            dispatch({ type: actions.READ_FROM_DATABASE_ERROR });\r\n\r\n            reject(error);\r\n          });\r\n\r\n      selectedCategory === null &&\r\n        geoCollectionReference\r\n          .limit(limit)\r\n          .near({\r\n            center: new firebase.firestore.GeoPoint(latitude, longtitude),\r\n            radius: radius,\r\n          })\r\n          .get()\r\n          .then((snapshot) => {\r\n            var Data = [];\r\n\r\n            snapshot.forEach(function (doc) {\r\n              //console.log(doc.data().displayName, doc.data().deleted_at)\r\n            //   if (doc.data().deleted.at === null) {\r\n                Data.push({ ...doc, id: doc.id });\r\n            //   }\r\n            });\r\n\r\n            Data.sort((a, b) => a.distance - b.distance);\r\n\r\n            Data = Data.map((item) => {\r\n              return { ...item.data(), distance: item.distance, id: item.id };\r\n            });\r\n            dispatch({ type: actions.READ_FROM_DATABASE_SUCCESS });\r\n            resolve(Data);\r\n          })\r\n          .catch((error) => {\r\n            console.log(error);\r\n            dispatch({ type: actions.READ_FROM_DATABASE_ERROR });\r\n\r\n            reject(error);\r\n          });\r\n    });\r\n  };\r\n}\r\n\r\nexport default actions;\r\n"]},"metadata":{},"sourceType":"module"}