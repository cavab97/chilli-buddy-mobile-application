{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\components\\\\molecules\\\\ImageInfo.js\";\nimport React from 'react';\nimport { Image, View, Text } from \"../atoms\";\n\nvar ImageInfo = function ImageInfo(_ref) {\n  var banner = _ref.banner,\n      imageContainer = _ref.imageContainer,\n      imageStyle = _ref.imageStyle,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      title2 = _ref.title2,\n      subtitle2Part2 = _ref.subtitle2Part2,\n      textStyle = _ref.textStyle,\n      textStyle2 = _ref.textStyle2,\n      subtitle2Part1 = _ref.subtitle2Part1,\n      subtitle2Part3 = _ref.subtitle2Part3,\n      onPress = _ref.onPress;\n\n  if (banner && typeof banner !== \"number\") {\n    banner = {\n      uri: banner\n    };\n  }\n\n  return React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }\n  }, React.createElement(View, {\n    style: imageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }\n  }, React.createElement(Image, {\n    style: imageStyle,\n    source: banner,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 17\n    }\n  })), title && React.createElement(View, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: textStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, title, subtitle), React.createElement(Text, {\n    style: textStyle2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 21\n    }\n  }, title2, subtitle2Part1, \" \", subtitle2Part2, subtitle2Part3)));\n};\n\nvar styles = {};\nexport { ImageInfo };","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/components/molecules/ImageInfo.js"],"names":["React","Image","View","Text","ImageInfo","banner","imageContainer","imageStyle","title","subtitle","title2","subtitle2Part2","textStyle","textStyle2","subtitle2Part1","subtitle2Part3","onPress","uri","styles"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SACIC,KADJ,EAEIC,IAFJ,EAGIC,IAHJ;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,OAaZ;AAAA,MAZFC,MAYE,QAZFA,MAYE;AAAA,MAXFC,cAWE,QAXFA,cAWE;AAAA,MAVFC,UAUE,QAVFA,UAUE;AAAA,MATFC,KASE,QATFA,KASE;AAAA,MARFC,QAQE,QARFA,QAQE;AAAA,MAPFC,MAOE,QAPFA,MAOE;AAAA,MANFC,cAME,QANFA,cAME;AAAA,MALFC,SAKE,QALFA,SAKE;AAAA,MAJFC,UAIE,QAJFA,UAIE;AAAA,MAHFC,cAGE,QAHFA,cAGE;AAAA,MAFFC,cAEE,QAFFA,cAEE;AAAA,MADFC,OACE,QADFA,OACE;;AACF,MAAGX,MAAM,IAAI,OAAOA,MAAP,KAAkB,QAA/B,EAAwC;AACpCA,IAAAA,MAAM,GAAG;AAAEY,MAAAA,GAAG,EAAEZ;AAAP,KAAT;AACH;;AACD,SACI,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,cAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AACI,IAAA,KAAK,EAAGC,UADZ;AAEI,IAAA,MAAM,EAAEF,MAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAOKG,KAAK,IACF,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,KADL,EACYC,QADZ,CADJ,EAII,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKH,MADL,EACaI,cADb,OAC8BH,cAD9B,EAC8CI,cAD9C,CAJJ,CARR,CADJ;AAoBH,CArCD;;AAuCA,IAAMG,MAAM,GAAG,EAAf;AAIA,SAASd,SAAT","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    Image,\r\n    View,\r\n    Text\r\n} from \"../atoms\";\r\n\r\nconst ImageInfo = ({\r\n    banner,\r\n    imageContainer,\r\n    imageStyle,\r\n    title,\r\n    subtitle,\r\n    title2,\r\n    subtitle2Part2,\r\n    textStyle,\r\n    textStyle2,\r\n    subtitle2Part1,\r\n    subtitle2Part3,\r\n    onPress\r\n}) => {\r\n    if(banner && typeof banner !== \"number\"){\r\n        banner = { uri: banner }\r\n    }\r\n    return (\r\n        <View>\r\n            <View style={imageContainer}>\r\n                <Image\r\n                    style= {imageStyle}\r\n                    source={banner} \r\n                />\r\n            </View>\r\n            {title &&\r\n                <View>\r\n                    <Text style={textStyle}>\r\n                        {title}{subtitle}\r\n                    </Text>\r\n                    <Text style={textStyle2}>\r\n                        {title2}{subtitle2Part1} {subtitle2Part2}{subtitle2Part3}\r\n                    </Text>\r\n                </View>\r\n            }\r\n        </View>\r\n    );\r\n};\r\n\r\nconst styles = {\r\n\r\n};\r\n\r\nexport { ImageInfo };"]},"metadata":{},"sourceType":"module"}