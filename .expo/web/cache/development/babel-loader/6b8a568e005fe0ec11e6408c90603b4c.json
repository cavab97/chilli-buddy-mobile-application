{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\screens\\\\subscreen\\\\CameraProfile\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport { CameraProfile } from \"@components/templates\";\nimport { Camera } from 'expo-camera';\nimport * as ImagePicker from 'expo-image-picker';\nimport * as Permissions from 'expo-permissions';\nimport { uploadToStorage, update } from \"../../../marslab-library-react-native/redux/user/action\";\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this.handleCameraType = function () {\n      var cameraType = _this.state.cameraType;\n\n      _this.setState({\n        cameraType: cameraType === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back\n      });\n    };\n\n    _this.takePicture = function _callee() {\n      var photo;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.camera) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(_this.camera.takePictureAsync());\n\n            case 3:\n              photo = _context.sent;\n\n              _this.setState({\n                uri: photo.uri,\n                progressVisible: true\n              });\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.pickImage = function _callee2() {\n      var result;\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return _regeneratorRuntime.awrap(ImagePicker.launchImageLibraryAsync({\n                mediaTypes: ImagePicker.MediaTypeOptions.All,\n                allowsEditing: true,\n                aspect: [4, 3],\n                quality: 1\n              }));\n\n            case 3:\n              result = _context2.sent;\n\n              if (!result.cancelled) {\n                _this.setState({\n                  uri: result.uri,\n                  progressVisible: true\n                });\n              }\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 7]], Promise);\n    };\n\n    _this.handleRef = function (ref) {\n      _this.camera = ref;\n    };\n\n    _this.state = {\n      hasPermission: null,\n      type: Camera.Constants.Type.back,\n      uri: null,\n      progressVisible: false,\n      triggerLoading: false,\n      errorVisible: false,\n      successVisible: false,\n      error: null,\n      message: null\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context3.sent;\n              status = _await$Permissions$as.status;\n              this.setState({\n                hasPermission: status === 'granted'\n              });\n\n            case 5:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      if (this.props.uploadImageError !== prevProps.uploadImageError && this.props.uploadImageError) {\n        this.setState({\n          error: this.props.uploadImageError,\n          errorVisible: true\n        });\n        setTimeout(function () {\n          _this2.setState({\n            errorVisible: false,\n            progressVisible: false\n          });\n\n          Actions.popTo(\"EditProfile\");\n        }, 2000);\n      }\n\n      if (this.props.uploadImageResult.url !== prevProps.uploadImageResult.url && this.props.uploadImageResult.url) {\n        this.setState({\n          message: \"Upload successful!\",\n          successVisible: true\n        });\n        var user = this.props.user.user;\n        this.setState({\n          user: user\n        });\n        user[\"photoURL\"] = this.props.uploadImageResult.url;\n        this.props.update(user);\n        setTimeout(function () {\n          _this2.setState({\n            progressVisible: false,\n            successVisible: false\n          });\n\n          Actions.pop();\n          Actions.refresh(\"EditProfile\");\n        }, 2000);\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"uploadImage\",\n    value: function uploadImage() {\n      this.setState({\n        progressVisible: false,\n        triggerLoading: true\n      });\n      var filename = this.state.uri.split('/').pop();\n      var data = {\n        id: this.props.user.user.id,\n        file: this.state.uri,\n        name: filename\n      };\n      this.props.uploadToStorage(data);\n    }\n  }, {\n    key: \"onRetakePress\",\n    value: function onRetakePress() {\n      this.setState({\n        progressVisible: false,\n        uri: null\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hasPermission = this.state.hasPermission;\n      return React.createElement(CameraProfile, {\n        hasPermission: hasPermission,\n        cameraType: this.state.cameraType,\n        cameraConfig: this.handleRef.bind(this),\n        onPress: this.takePicture.bind(this),\n        error: this.state.error,\n        uri: this.state.uri,\n        uploadProgress: this.props.uploadImageProgress,\n        onRetakePress: this.onRetakePress.bind(this),\n        onUploadPress: this.uploadImage.bind(this),\n        errorHeader: \"Error\",\n        errorRedirectMessage: \"Please try again later.\",\n        successHeader: \"Success\",\n        successMessage: this.state.message,\n        uploadLoading: this.props.uploadImageLoading,\n        loadingMessage: \"Image is uploading\",\n        successVisible: this.state.successVisible,\n        errorVisible: this.state.errorVisible,\n        message: this.state.message,\n        triggerLoading: this.state.triggerLoading,\n        selectImage: this.pickImage.bind(this),\n        progressVisible: this.state.progressVisible,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var user = state.User;\n  var uploadImageError = state.User.uploadError;\n  var uploadImageProgress = state.User.uploadProgress;\n  var uploadImageResult = state.User.uploadResult;\n  var uploadImageLoading = state.User.uploadLoading;\n  return {\n    user: user,\n    uploadImageError: uploadImageError,\n    uploadImageProgress: uploadImageProgress,\n    uploadImageResult: uploadImageResult,\n    uploadImageLoading: uploadImageLoading\n  };\n};\n\nexport default connect(mapStateToProps, {\n  uploadToStorage: uploadToStorage,\n  update: update\n})(index);","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/screens/subscreen/CameraProfile/index.js"],"names":["React","Component","connect","Actions","CameraProfile","Camera","ImagePicker","Permissions","uploadToStorage","update","styles","index","props","handleCameraType","cameraType","state","setState","Constants","Type","back","front","takePicture","camera","takePictureAsync","photo","uri","progressVisible","pickImage","launchImageLibraryAsync","mediaTypes","MediaTypeOptions","All","allowsEditing","aspect","quality","result","cancelled","console","log","handleRef","ref","hasPermission","type","triggerLoading","errorVisible","successVisible","error","message","askAsync","CAMERA","status","prevProps","prevState","uploadImageError","setTimeout","popTo","uploadImageResult","url","user","pop","refresh","filename","split","data","id","file","name","bind","uploadImageProgress","onRetakePress","uploadImage","uploadImageLoading","mapStateToProps","User","uploadError","uploadProgress","uploadResult","uploadLoading"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AACA,SAASC,MAAT,QAAuB,aAAvB;AACA,OAAO,KAAKC,WAAZ,MAA6B,mBAA7B;AACA,OAAO,KAAKC,WAAZ,MAA6B,kBAA7B;AACA,SAASC,eAAT,EAA0BC,MAA1B;AAGA,OAAOC,MAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAqEnBC,gBArEmB,GAqEA,YAAM;AAAA,UACbC,UADa,GACE,MAAKC,KADP,CACbD,UADa;;AAGrB,YAAKE,QAAL,CAAc;AAACF,QAAAA,UAAU,EACrBA,UAAU,KAAKT,MAAM,CAACY,SAAP,CAAiBC,IAAjB,CAAsBC,IAArC,GACEd,MAAM,CAACY,SAAP,CAAiBC,IAAjB,CAAsBE,KADxB,GAEEf,MAAM,CAACY,SAAP,CAAiBC,IAAjB,CAAsBC;AAHd,OAAd;AAKH,KA7EkB;;AAAA,UA+EnBE,WA/EmB,GA+EL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACN,MAAKC,MADC;AAAA;AAAA;AAAA;;AAAA;AAAA,+CAGY,MAAKA,MAAL,CAAYC,gBAAZ,EAHZ;;AAAA;AAGFC,cAAAA,KAHE;;AAaN,oBAAKR,QAAL,CAAc;AACVS,gBAAAA,GAAG,EAAED,KAAK,CAACC,GADD;AAEVC,gBAAAA,eAAe,EAAE;AAFP,eAAd;;AAbM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KA/EK;;AAAA,UAsHnBC,SAtHmB,GAsHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAEarB,WAAW,CAACsB,uBAAZ,CAAoC;AACrDC,gBAAAA,UAAU,EAAEvB,WAAW,CAACwB,gBAAZ,CAA6BC,GADY;AAErDC,gBAAAA,aAAa,EAAE,IAFsC;AAGrDC,gBAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,CAAJ,CAH6C;AAIrDC,gBAAAA,OAAO,EAAE;AAJ4C,eAApC,CAFb;;AAAA;AAEFC,cAAAA,MAFE;;AAQN,kBAAI,CAACA,MAAM,CAACC,SAAZ,EAAuB;AACrB,sBAAKpB,QAAL,CAAc;AACVS,kBAAAA,GAAG,EAAEU,MAAM,CAACV,GADF;AAEVC,kBAAAA,eAAe,EAAE;AAFP,iBAAd;AAID;;AAbK;AAAA;;AAAA;AAAA;AAAA;AAiBNW,cAAAA,OAAO,CAACC,GAAR;;AAjBM;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAtHO;;AAAA,UAkJnBC,SAlJmB,GAkJP,UAACC,GAAD,EAAS;AACjB,YAAKlB,MAAL,GAAckB,GAAd;AACH,KApJkB;;AAEf,UAAKzB,KAAL,GAAa;AACT0B,MAAAA,aAAa,EAAE,IADN;AAETC,MAAAA,IAAI,EAAErC,MAAM,CAACY,SAAP,CAAiBC,IAAjB,CAAsBC,IAFnB;AAGTM,MAAAA,GAAG,EAAE,IAHI;AAITC,MAAAA,eAAe,EAAE,KAJR;AAKTiB,MAAAA,cAAc,EAAE,KALP;AAMTC,MAAAA,YAAY,EAAE,KANL;AAOTC,MAAAA,cAAc,EAAE,KAPP;AAQTC,MAAAA,KAAK,EAAE,IARE;AASTC,MAAAA,OAAO,EAAE;AATA,KAAb;AAFe;AAalB;;;;;;;;;;;;+CAG4BxC,WAAW,CAACyC,QAAZ,CAAqBzC,WAAW,CAAC0C,MAAjC,C;;;;AAAjBC,cAAAA,M,yBAAAA,M;AACR,mBAAKlC,QAAL,CAAc;AAAEyB,gBAAAA,aAAa,EAAES,MAAM,KAAK;AAA5B,eAAd;;;;;;;;;;;uCAGeC,S,EAAWC,S,EAAW;AAAA;;AACrC,UACI,KAAKxC,KAAL,CAAWyC,gBAAX,KACAF,SAAS,CAACE,gBADV,IAEA,KAAKzC,KAAL,CAAWyC,gBAHf,EAIE;AACE,aAAKrC,QAAL,CAAc;AACV8B,UAAAA,KAAK,EAAE,KAAKlC,KAAL,CAAWyC,gBADR;AAEVT,UAAAA,YAAY,EAAE;AAFJ,SAAd;AAIAU,QAAAA,UAAU,CAAC,YAAM;AACb,UAAA,MAAI,CAACtC,QAAL,CAAc;AACV4B,YAAAA,YAAY,EAAE,KADJ;AAEVlB,YAAAA,eAAe,EAAE;AAFP,WAAd;;AAIAvB,UAAAA,OAAO,CAACoD,KAAR,CAAc,aAAd;AACH,SANS,EAMR,IANQ,CAAV;AAOH;;AAED,UACI,KAAK3C,KAAL,CAAW4C,iBAAX,CAA6BC,GAA7B,KACEN,SAAS,CAACK,iBAAV,CAA4BC,GAD9B,IAEA,KAAK7C,KAAL,CAAW4C,iBAAX,CAA6BC,GAHjC,EAIE;AACE,aAAKzC,QAAL,CAAc;AACV+B,UAAAA,OAAO,EAAE,oBADC;AAEVF,UAAAA,cAAc,EAAE;AAFN,SAAd;AADF,YAMQa,IANR,GAMiB,KAAK9C,KAAL,CAAW8C,IAN5B,CAMQA,IANR;AAOE,aAAK1C,QAAL,CAAc;AAAE0C,UAAAA,IAAI,EAAJA;AAAF,SAAd;AACAA,QAAAA,IAAI,CAAC,UAAD,CAAJ,GAAmB,KAAK9C,KAAL,CAAW4C,iBAAX,CAA6BC,GAAhD;AACA,aAAK7C,KAAL,CAAWH,MAAX,CAAkBiD,IAAlB;AAEAJ,QAAAA,UAAU,CAAC,YAAM;AACb,UAAA,MAAI,CAACtC,QAAL,CAAc;AACVU,YAAAA,eAAe,EAAE,KADP;AAEVmB,YAAAA,cAAc,EAAE;AAFN,WAAd;;AAIA1C,UAAAA,OAAO,CAACwD,GAAR;AACAxD,UAAAA,OAAO,CAACyD,OAAR,CAAgB,aAAhB;AACH,SAPS,EAOR,IAPQ,CAAV;AAQH;AACJ;;;2CAEqB,CAErB;;;kCAmCY;AACT,WAAK5C,QAAL,CAAc;AACVU,QAAAA,eAAe,EAAE,KADP;AAEViB,QAAAA,cAAc,EAAE;AAFN,OAAd;AAIA,UAAIkB,QAAQ,GAAG,KAAK9C,KAAL,CAAWU,GAAX,CAAeqC,KAAf,CAAqB,GAArB,EAA0BH,GAA1B,EAAf;AAGA,UAAMI,IAAI,GAAG;AACTC,QAAAA,EAAE,EAAE,KAAKpD,KAAL,CAAW8C,IAAX,CAAgBA,IAAhB,CAAqBM,EADhB;AAETC,QAAAA,IAAI,EAAE,KAAKlD,KAAL,CAAWU,GAFR;AAGTyC,QAAAA,IAAI,EAAEL;AAHG,OAAb;AAKA,WAAKjD,KAAL,CAAWJ,eAAX,CAA2BuD,IAA3B;AACH;;;oCAuBe;AACZ,WAAK/C,QAAL,CAAc;AACVU,QAAAA,eAAe,EAAE,KADP;AAEVD,QAAAA,GAAG,EAAE;AAFK,OAAd;AAIH;;;6BAMQ;AAAA,UACGgB,aADH,GACqB,KAAK1B,KAD1B,CACG0B,aADH;AAGL,aACI,oBAAC,aAAD;AACI,QAAA,aAAa,EAAEA,aADnB;AAEI,QAAA,UAAU,EAAE,KAAK1B,KAAL,CAAWD,UAF3B;AAGI,QAAA,YAAY,EAAE,KAAKyB,SAAL,CAAe4B,IAAf,CAAoB,IAApB,CAHlB;AAII,QAAA,OAAO,EAAE,KAAK9C,WAAL,CAAiB8C,IAAjB,CAAsB,IAAtB,CAJb;AAKI,QAAA,KAAK,EAAE,KAAKpD,KAAL,CAAW+B,KALtB;AAMI,QAAA,GAAG,EAAE,KAAK/B,KAAL,CAAWU,GANpB;AAOI,QAAA,cAAc,EAAE,KAAKb,KAAL,CAAWwD,mBAP/B;AAQI,QAAA,aAAa,EAAE,KAAKC,aAAL,CAAmBF,IAAnB,CAAwB,IAAxB,CARnB;AASI,QAAA,aAAa,EAAE,KAAKG,WAAL,CAAiBH,IAAjB,CAAsB,IAAtB,CATnB;AAUI,QAAA,WAAW,EAAC,OAVhB;AAWI,QAAA,oBAAoB,EAAC,yBAXzB;AAYI,QAAA,aAAa,EAAC,SAZlB;AAaI,QAAA,cAAc,EAAE,KAAKpD,KAAL,CAAWgC,OAb/B;AAcI,QAAA,aAAa,EAAE,KAAKnC,KAAL,CAAW2D,kBAd9B;AAeI,QAAA,cAAc,EAAC,oBAfnB;AAgBI,QAAA,cAAc,EAAE,KAAKxD,KAAL,CAAW8B,cAhB/B;AAiBI,QAAA,YAAY,EAAE,KAAK9B,KAAL,CAAW6B,YAjB7B;AAkBI,QAAA,OAAO,EAAE,KAAK7B,KAAL,CAAWgC,OAlBxB;AAmBI,QAAA,cAAc,EAAE,KAAKhC,KAAL,CAAW4B,cAnB/B;AAoBI,QAAA,WAAW,EAAE,KAAKhB,SAAL,CAAewC,IAAf,CAAoB,IAApB,CApBjB;AAqBI,QAAA,eAAe,EAAE,KAAKpD,KAAL,CAAWW,eArBhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAyBH;;;;EAnLezB,S;;AAsLpB,IAAMuE,eAAe,GAAG,SAAlBA,eAAkB,CAACzD,KAAD,EAAW;AAC/B,MAAM2C,IAAI,GAAG3C,KAAK,CAAC0D,IAAnB;AACA,MAAMpB,gBAAgB,GAAGtC,KAAK,CAAC0D,IAAN,CAAWC,WAApC;AACA,MAAMN,mBAAmB,GAAGrD,KAAK,CAAC0D,IAAN,CAAWE,cAAvC;AACA,MAAMnB,iBAAiB,GAAGzC,KAAK,CAAC0D,IAAN,CAAWG,YAArC;AACA,MAAML,kBAAkB,GAAGxD,KAAK,CAAC0D,IAAN,CAAWI,aAAtC;AAEA,SAAO;AACLnB,IAAAA,IAAI,EAAJA,IADK;AAELL,IAAAA,gBAAgB,EAAhBA,gBAFK;AAGLe,IAAAA,mBAAmB,EAAnBA,mBAHK;AAILZ,IAAAA,iBAAiB,EAAjBA,iBAJK;AAKLe,IAAAA,kBAAkB,EAAlBA;AALK,GAAP;AAOH,CAdD;;AAgBA,eAAerE,OAAO,CAACsE,eAAD,EAAkB;AACpChE,EAAAA,eAAe,EAAfA,eADoC;AAEpCC,EAAAA,MAAM,EAANA;AAFoC,CAAlB,CAAP,CAGZE,KAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { CameraProfile } from \"@components/templates\";\r\nimport { Camera } from 'expo-camera';\r\nimport * as ImagePicker from 'expo-image-picker';\r\nimport * as Permissions from 'expo-permissions';\r\nimport { uploadToStorage, update } from '../../../marslab-library-react-native/redux/user/action';\r\n//import * as FileSystem from 'expo-file-system';\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasPermission: null,\r\n            type: Camera.Constants.Type.back,\r\n            uri: null,\r\n            progressVisible: false,\r\n            triggerLoading: false,\r\n            errorVisible: false,\r\n            successVisible: false,\r\n            error: null,\r\n            message: null,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n        this.setState({ hasPermission: status === 'granted' });\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            this.props.uploadImageError !==\r\n            prevProps.uploadImageError &&\r\n            this.props.uploadImageError\r\n        ) {       \r\n            this.setState({ \r\n                error: this.props.uploadImageError,\r\n                errorVisible: true\r\n            });\r\n            setTimeout(() => {\r\n                this.setState({ \r\n                    errorVisible: false,\r\n                    progressVisible: false\r\n                })\r\n                Actions.popTo(\"EditProfile\")\r\n            },2000); \r\n        } \r\n\r\n        if (\r\n            this.props.uploadImageResult.url !==\r\n              prevProps.uploadImageResult.url &&\r\n            this.props.uploadImageResult.url\r\n        ) {\r\n            this.setState({ \r\n                message: \"Upload successful!\",\r\n                successVisible: true,        \r\n            });\r\n\r\n            let { user } = this.props.user;\r\n            this.setState({ user });\r\n            user[\"photoURL\"] = this.props.uploadImageResult.url\r\n            this.props.update(user);\r\n\r\n            setTimeout(() => {\r\n                this.setState({ \r\n                    progressVisible: false,\r\n                    successVisible: false\r\n                })\r\n                Actions.pop();\r\n                Actions.refresh(\"EditProfile\");\r\n            },2000); \r\n        }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    handleCameraType = () => { \r\n        const { cameraType } = this.state\r\n    \r\n        this.setState({cameraType:\r\n            cameraType === Camera.Constants.Type.back\r\n            ? Camera.Constants.Type.front\r\n            : Camera.Constants.Type.back\r\n        })\r\n    }\r\n\r\n    takePicture = async () => {\r\n        if (this.camera) {\r\n            //const options = { base64: true };\r\n            let photo = await this.camera.takePictureAsync();\r\n\r\n            /* FileSystem.makeDirectoryAsync({\r\n                from: photo.uri,\r\n                to: `${FileSystem.documentDirectory}photos/Photo_test.jpg`\r\n            });  */\r\n\r\n            //let newPhoto = FileSystem.documentDirectory + 'photos/Photo_test.jpg';\r\n\r\n           // console.log(photo.uri)\r\n            this.setState({\r\n                uri: photo.uri,\r\n                progressVisible: true,\r\n            });\r\n            /* Actions.EditProfile({ \r\n                uri: photo.uri,\r\n            }); */\r\n        }\r\n    }\r\n\r\n    uploadImage(){\r\n        this.setState({\r\n            progressVisible: false,\r\n            triggerLoading: true\r\n        })\r\n        let filename = this.state.uri.split('/').pop();\r\n\r\n\r\n        const data = {\r\n            id: this.props.user.user.id,\r\n            file: this.state.uri,\r\n            name: filename\r\n        }\r\n        this.props.uploadToStorage(data);    \r\n    }\r\n\r\n    pickImage = async () => {\r\n        try {\r\n          let result = await ImagePicker.launchImageLibraryAsync({\r\n            mediaTypes: ImagePicker.MediaTypeOptions.All,\r\n            allowsEditing: true,\r\n            aspect: [4, 3],\r\n            quality: 1,\r\n          });\r\n          if (!result.cancelled) {\r\n            this.setState({ \r\n                uri: result.uri,\r\n                progressVisible: true\r\n            });\r\n          }\r\n    \r\n          //console.log(result);\r\n        } catch (e) {\r\n          console.log(e);\r\n        }\r\n    };\r\n\r\n    onRetakePress() {\r\n        this.setState({\r\n            progressVisible: false,\r\n            uri: null\r\n        })\r\n    }\r\n\r\n    handleRef = (ref) => {\r\n        this.camera = ref\r\n    }\r\n\r\n    render() {\r\n        const { hasPermission } = this.state;\r\n\r\n        return (\r\n            <CameraProfile\r\n                hasPermission={hasPermission}\r\n                cameraType={this.state.cameraType}\r\n                cameraConfig={this.handleRef.bind(this)}\r\n                onPress={this.takePicture.bind(this)}\r\n                error={this.state.error}\r\n                uri={this.state.uri}\r\n                uploadProgress={this.props.uploadImageProgress}\r\n                onRetakePress={this.onRetakePress.bind(this)}\r\n                onUploadPress={this.uploadImage.bind(this)}\r\n                errorHeader=\"Error\"\r\n                errorRedirectMessage=\"Please try again later.\"\r\n                successHeader=\"Success\"\r\n                successMessage={this.state.message}\r\n                uploadLoading={this.props.uploadImageLoading}\r\n                loadingMessage=\"Image is uploading\"\r\n                successVisible={this.state.successVisible}\r\n                errorVisible={this.state.errorVisible}\r\n                message={this.state.message}\r\n                triggerLoading={this.state.triggerLoading}\r\n                selectImage={this.pickImage.bind(this)}\r\n                progressVisible={this.state.progressVisible}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const user = state.User\r\n    const uploadImageError = state.User.uploadError\r\n    const uploadImageProgress = state.User.uploadProgress\r\n    const uploadImageResult = state.User.uploadResult\r\n    const uploadImageLoading = state.User.uploadLoading\r\n\r\n    return {\r\n      user,\r\n      uploadImageError,\r\n      uploadImageProgress,\r\n      uploadImageResult,\r\n      uploadImageLoading\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, { \r\n    uploadToStorage,\r\n    update\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}