{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\screens\\\\subscreen\\\\payment\\\\Amount\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport { PaymentAmount } from \"@components/templates\";\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this.onChangeValue = function (text) {\n      _this.setState({\n        value: text\n      });\n    };\n\n    _this.onUnlockPress = function () {\n      Actions.pop();\n    };\n\n    _this.state = {\n      isVisible: true,\n      value: ''\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"onNext\",\n    value: function onNext() {\n      var amount = this.state.value.replace(\"RM\", \"\");\n      amount = amount.replace(\",\", \"\");\n\n      if (parseFloat(amount) >= parseFloat(this.props.mission.minSpend)) {\n        Actions.PaymentDetail({\n          mission: this.props.mission,\n          value: this.state.value,\n          routeId: this.props.routeId\n        });\n      } else {\n        Alert.alert(\"GoGoGain\", \"Your amount spend should be more than minimum spend\", [{\n          text: \"OK\"\n        }], {\n          cancelable: true\n        });\n        this.setState({\n          value: ''\n        });\n      }\n    }\n  }, {\n    key: \"onClose\",\n    value: function onClose() {\n      Actions.pop();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var minSpend = this.props.mission.minSpend;\n      return React.createElement(PaymentAmount, {\n        payTitle: \"Pay\",\n        descriptionTitle: \"Mission can't be completed if the amount less than \",\n        buttonTitle: \"Next\",\n        currency: \"RM\",\n        value: this.state.value,\n        minimumSpend: minSpend,\n        onChange: this.onChangeValue.bind(this),\n        onNext: this.onNext.bind(this),\n        onUnlockPress: this.onUnlockPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport default connect(null, {})(index);","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/screens/subscreen/payment/Amount/index.js"],"names":["React","Component","connect","Actions","PaymentAmount","styles","index","props","onChangeValue","text","setState","value","onUnlockPress","pop","state","isVisible","amount","replace","parseFloat","mission","minSpend","PaymentDetail","routeId","Alert","alert","cancelable","bind","onNext"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,0BAAxB;;AAEA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,MAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;;AADe,UAgBnBC,aAhBmB,GAgBH,UAACC,IAAD,EAAU;AACtB,YAAKC,QAAL,CAAc;AACVC,QAAAA,KAAK,EAAEF;AADG,OAAd;AAGH,KApBkB;;AAAA,UAsBnBG,aAtBmB,GAsBH,YAAM;AAClBT,MAAAA,OAAO,CAACU,GAAR;AACH,KAxBkB;;AAEf,UAAKC,KAAL,GAAa;AACTC,MAAAA,SAAS,EAAE,IADF;AAETJ,MAAAA,KAAK,EAAE;AAFE,KAAb;AAFe;AAMlB;;;;wCAEmB,CAEnB;;;2CAEqB,CAErB;;;6BAYQ;AACL,UAAIK,MAAM,GAAG,KAAKF,KAAL,CAAWH,KAAX,CAAiBM,OAAjB,CAAyB,IAAzB,EAA+B,EAA/B,CAAb;AACAD,MAAAA,MAAM,GAAGA,MAAM,CAACC,OAAP,CAAe,GAAf,EAAoB,EAApB,CAAT;;AAEA,UAAIC,UAAU,CAACF,MAAD,CAAV,IAAsBE,UAAU,CAAC,KAAKX,KAAL,CAAWY,OAAX,CAAmBC,QAApB,CAApC,EAAkE;AAC9DjB,QAAAA,OAAO,CAACkB,aAAR,CAAsB;AAClBF,UAAAA,OAAO,EAAE,KAAKZ,KAAL,CAAWY,OADF;AAElBR,UAAAA,KAAK,EAAE,KAAKG,KAAL,CAAWH,KAFA;AAGlBW,UAAAA,OAAO,EAAE,KAAKf,KAAL,CAAWe;AAHF,SAAtB;AAKH,OAND,MAMO;AACHC,QAAAA,KAAK,CAACC,KAAN,CACI,UADJ,EAEI,qDAFJ,EAGI,CACI;AAAEf,UAAAA,IAAI,EAAE;AAAR,SADJ,CAHJ,EAMI;AACIgB,UAAAA,UAAU,EAAE;AADhB,SANJ;AAUA,aAAKf,QAAL,CAAc;AACVC,UAAAA,KAAK,EAAE;AADG,SAAd;AAGH;AACJ;;;8BAES;AACNR,MAAAA,OAAO,CAACU,GAAR;AACH;;;6BAEQ;AAAA,UACGO,QADH,GACgB,KAAKb,KAAL,CAAWY,OAD3B,CACGC,QADH;AAGL,aACI,oBAAC,aAAD;AACI,QAAA,QAAQ,EAAC,KADb;AAEI,QAAA,gBAAgB,EAAC,qDAFrB;AAGI,QAAA,WAAW,EAAC,MAHhB;AAII,QAAA,QAAQ,EAAC,IAJb;AAKI,QAAA,KAAK,EAAE,KAAKN,KAAL,CAAWH,KALtB;AAMI,QAAA,YAAY,EAAES,QANlB;AAOI,QAAA,QAAQ,EAAE,KAAKZ,aAAL,CAAmBkB,IAAnB,CAAwB,IAAxB,CAPd;AAQI,QAAA,MAAM,EAAE,KAAKC,MAAL,CAAYD,IAAZ,CAAiB,IAAjB,CARZ;AASI,QAAA,aAAa,EAAE,KAAKd,aAAL,CAAmBc,IAAnB,CAAwB,IAAxB,CATnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAaH;;;;EA1EezB,S;;AA8EpB,eAAeC,OAAO,CAAC,IAAD,EAAO,EAAP,CAAP,CAAmBI,KAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { Alert } from \"react-native\";\r\nimport { PaymentAmount } from \"@components/templates\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isVisible: true,\r\n            value: '',\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    onChangeValue = (text) => {\r\n        this.setState({\r\n            value: text,\r\n        });\r\n    }\r\n\r\n    onUnlockPress = () => {\r\n        Actions.pop();\r\n    }\r\n\r\n    onNext() {\r\n        let amount = this.state.value.replace(\"RM\", \"\")\r\n        amount = amount.replace(\",\", \"\")\r\n\r\n        if (parseFloat(amount) >= parseFloat(this.props.mission.minSpend)){\r\n            Actions.PaymentDetail({\r\n                mission: this.props.mission,\r\n                value: this.state.value,\r\n                routeId: this.props.routeId\r\n            });\r\n        } else {\r\n            Alert.alert(\r\n                \"GoGoGain\",\r\n                \"Your amount spend should be more than minimum spend\",\r\n                [\r\n                    { text: \"OK\" }\r\n                ],\r\n                { \r\n                    cancelable: true \r\n                }\r\n            );\r\n            this.setState({\r\n                value: ''\r\n            })\r\n        }\r\n    }\r\n\r\n    onClose() {\r\n        Actions.pop();\r\n    }\r\n\r\n    render() {\r\n        const { minSpend } = this.props.mission;\r\n\r\n        return (\r\n            <PaymentAmount\r\n                payTitle=\"Pay\"\r\n                descriptionTitle=\"Mission can't be completed if the amount less than \"\r\n                buttonTitle=\"Next\"\r\n                currency=\"RM\"\r\n                value={this.state.value}\r\n                minimumSpend={minSpend}\r\n                onChange={this.onChangeValue.bind(this)}\r\n                onNext={this.onNext.bind(this)}\r\n                onUnlockPress={this.onUnlockPress.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default connect(null, { })(index);\r\n"]},"metadata":{},"sourceType":"module"}