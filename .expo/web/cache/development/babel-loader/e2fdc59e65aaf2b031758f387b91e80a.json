{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\limwe\\\\Documents\\\\application\\\\gogogain-app\\\\gogogain-user\\\\src\\\\screens\\\\main\\\\MainScreen\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MainTemplete from \"../../../components/templates/Main\";\nimport styles from \"./styles\";\nimport { Actions } from \"react-native-router-flux\";\nimport { readAllFromDatabase as readAllRoute } from \"../../../redux/route/action\";\nimport { readFromDatabase as readAdvertisements } from \"../../../redux/advertisement/action\";\nimport { readInfo as readSettingInfo } from \"../../../redux/settings/action\";\nimport { listenFromDatabase as listenToRouteTickets, removeListenerFromDatabase as removeListenerFromRouteTickets } from \"../../../redux/routeTicket/action\";\nimport { ActivityIndicator, View } from \"../../../marslab-library-react-native/components/atoms\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    _classCallCheck(this, index);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.listenToRouteTickets();\n      this.props.readAllRoute();\n      this.props.readAdvertisements();\n      this.props.readSettingInfo();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeListenerFromRouteTickets();\n    }\n  }, {\n    key: \"onPressCardChallenge\",\n    value: function onPressCardChallenge(id) {\n      Actions.Route({\n        routeId: id\n      });\n    }\n  }, {\n    key: \"onPressAdvertisement\",\n    value: function onPressAdvertisement(id) {\n      Actions.Advertisement({\n        AdvertisementId: id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          routeTickets = _this$props.routeTickets,\n          routes = _this$props.routes,\n          advertisements = _this$props.advertisements,\n          readLoadingRouteTicket = _this$props.readLoadingRouteTicket,\n          readLoadingRoute = _this$props.readLoadingRoute,\n          readLoadingAdvertisement = _this$props.readLoadingAdvertisement,\n          headerImages = _this$props.headerImages,\n          readLoadingHeaderImages = _this$props.readLoadingHeaderImages;\n      var dataSource = [];\n\n      if (routeTickets.length > 0) {\n        var key = 0;\n        dataSource = routeTickets.map(function (_ref) {\n          var route = _ref.route;\n          return {\n            key: key++,\n            id: route.id,\n            type: route.type,\n            title: route.title,\n            image: require(\"../../../assets/gogogain/main_map.jpg\")\n          };\n        });\n      } else {\n        var size = 5;\n        dataSource = routes.slice(0, size).map(function (route) {\n          var seatLeft = null;\n\n          if (route.minimumUser - route.currentUser <= 0) {\n            seatLeft = \"0\";\n          } else {\n            seatLeft = route.minimumUser - route.currentUser;\n          }\n\n          return {\n            id: route.id,\n            totalMission: route.totalMissions,\n            title: route.title,\n            type: route.type,\n            seatLeft: seatLeft,\n            startTime: route.startTime,\n            endTime: route.endTime,\n            image: require(\"../../../assets/gogogain/main_map.jpg\")\n          };\n        });\n      }\n\n      var noImageHeaderSlider = require(\"../../../assets/gogogain/top_image.jpg\");\n\n      var noImageAdvertisement = require(\"../../../assets/gogogain/icons8-camera-100.png\");\n\n      return React.createElement(View, {\n        style: styles.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 7\n        }\n      }, readLoadingRouteTicket || readLoadingRoute || readLoadingAdvertisement || readLoadingHeaderImages ? React.createElement(ActivityIndicator, {\n        size: \"large\",\n        style: styles.activityIndicatorStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }\n      }) : React.createElement(MainTemplete, {\n        slider: headerImages,\n        dataSource: dataSource,\n        routeTickets: routeTickets,\n        sectionTitle1: \"Challenges\",\n        sectionTitle2: \"Latest News\",\n        sectionTitle3: \"Your Challenges\",\n        label1: \"Total Mission : \",\n        label2: \"Seat Left : \",\n        label3: \"Period : \",\n        unit: \" pax\",\n        onPressCard: this.onPressCardChallenge.bind(this),\n        advertisements: advertisements,\n        onPressAdvertisement: this.onPressAdvertisement.bind(this),\n        noImageAdvertisement: noImageAdvertisement,\n        noImageHeaderSlider: noImageHeaderSlider,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var routeTickets = state.RouteTicket.routeTickets;\n  var routes = state.Route.routes;\n  var advertisements = state.Advertisement.advertisements;\n  var headerImages = state.Settings.info.headerImages;\n  var readLoadingRouteTicket = state.RouteTicket.readLoading;\n  var readLoadingRoute = state.Route.readLoading;\n  var readLoadingAdvertisement = state.Advertisement.readLoading;\n  var readLoadingHeaderImages = state.Settings.readInfoLoading;\n  return {\n    routeTickets: routeTickets,\n    routes: routes,\n    advertisements: advertisements,\n    headerImages: headerImages,\n    readLoadingHeaderImages: readLoadingHeaderImages,\n    readLoadingRouteTicket: readLoadingRouteTicket,\n    readLoadingRoute: readLoadingRoute,\n    readLoadingAdvertisement: readLoadingAdvertisement\n  };\n};\n\nexport default connect(mapStateToProps, {\n  listenToRouteTickets: listenToRouteTickets,\n  removeListenerFromRouteTickets: removeListenerFromRouteTickets,\n  readAllRoute: readAllRoute,\n  readAdvertisements: readAdvertisements,\n  readSettingInfo: readSettingInfo\n})(index);","map":{"version":3,"sources":["C:/Users/limwe/Documents/application/gogogain-app/gogogain-user/src/screens/main/MainScreen/index.js"],"names":["React","Component","connect","MainTemplete","styles","Actions","readAllFromDatabase","readAllRoute","readFromDatabase","readAdvertisements","readInfo","readSettingInfo","listenFromDatabase","listenToRouteTickets","removeListenerFromDatabase","removeListenerFromRouteTickets","ActivityIndicator","View","index","props","id","Route","routeId","Advertisement","AdvertisementId","routeTickets","routes","advertisements","readLoadingRouteTicket","readLoadingRoute","readLoadingAdvertisement","headerImages","readLoadingHeaderImages","dataSource","length","key","map","route","type","title","image","require","size","slice","seatLeft","minimumUser","currentUser","totalMission","totalMissions","startTime","endTime","noImageHeaderSlider","noImageAdvertisement","container","activityIndicatorStyle","onPressCardChallenge","bind","onPressAdvertisement","mapStateToProps","state","RouteTicket","Settings","info","readLoading","readInfoLoading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MainTemplete from \"../../../components/templates/Main\";\r\nimport styles from \"./styles\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { readAllFromDatabase as readAllRoute } from \"../../../redux/route/action\";\r\nimport { readFromDatabase as readAdvertisements } from \"../../../redux/advertisement/action\";\r\nimport { readInfo as readSettingInfo } from \"../../../redux/settings/action\";\r\nimport {\r\n  listenFromDatabase as listenToRouteTickets,\r\n  removeListenerFromDatabase as removeListenerFromRouteTickets,\r\n} from \"../../../redux/routeTicket/action\";\r\nimport {\r\n  ActivityIndicator,\r\n  View,\r\n} from \"../../../marslab-library-react-native/components/atoms\";\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.listenToRouteTickets();\r\n    this.props.readAllRoute();\r\n    this.props.readAdvertisements();\r\n    this.props.readSettingInfo();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeListenerFromRouteTickets();\r\n  }\r\n\r\n  onPressCardChallenge(id) {\r\n    Actions.Route({ routeId: id });\r\n  }\r\n\r\n  onPressAdvertisement(id) {\r\n    Actions.Advertisement({ AdvertisementId: id })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      routeTickets,\r\n      routes,\r\n      advertisements,\r\n      readLoadingRouteTicket,\r\n      readLoadingRoute,\r\n      readLoadingAdvertisement,\r\n      headerImages,\r\n      readLoadingHeaderImages\r\n    } = this.props;\r\n    let dataSource = [];\r\n\r\n    if (routeTickets.length > 0) {\r\n      let key = 0;\r\n      dataSource = routeTickets.map(({ route }) => {\r\n        \r\n        return {\r\n          key: key++,\r\n          id: route.id,\r\n          type: route.type,\r\n          title: route.title,\r\n          image: require(\"../../../assets/gogogain/main_map.jpg\"),\r\n        };\r\n      });\r\n    } else {\r\n      let size = 5;\r\n      dataSource = routes.slice(0, size).map((route) => {\r\n        let seatLeft = null;\r\n        if (route.minimumUser - route.currentUser <= 0) {\r\n          seatLeft = \"0\";\r\n        } else {\r\n          seatLeft = route.minimumUser - route.currentUser;\r\n        }\r\n\r\n        return {\r\n          id: route.id,\r\n          totalMission: route.totalMissions,\r\n          title: route.title,\r\n          type: route.type,\r\n          seatLeft: seatLeft,\r\n          startTime: route.startTime,\r\n          endTime: route.endTime,\r\n          image: require(\"../../../assets/gogogain/main_map.jpg\"),\r\n        };\r\n      });\r\n    }\r\n\r\n    const noImageHeaderSlider = require(\"../../../assets/gogogain/top_image.jpg\")\r\n\r\n    const noImageAdvertisement = require(\"../../../assets/gogogain/icons8-camera-100.png\")\r\n\r\n    return (\r\n      <View style={styles.container}>\r\n        {readLoadingRouteTicket || readLoadingRoute || readLoadingAdvertisement || readLoadingHeaderImages ? \r\n          <ActivityIndicator\r\n            size=\"large\"\r\n            style={styles.activityIndicatorStyle}\r\n          />\r\n        : \r\n          <MainTemplete\r\n            slider={headerImages}\r\n            dataSource={dataSource}\r\n            routeTickets={routeTickets}\r\n            sectionTitle1=\"Challenges\"\r\n            sectionTitle2=\"Latest News\"\r\n            sectionTitle3=\"Your Challenges\"\r\n            label1=\"Total Mission : \"\r\n            label2=\"Seat Left : \"\r\n            label3=\"Period : \"\r\n            unit=\" pax\"\r\n            onPressCard={this.onPressCardChallenge.bind(this)}\r\n            advertisements = {advertisements}\r\n            onPressAdvertisement = {this.onPressAdvertisement.bind(this)}\r\n            noImageAdvertisement= {noImageAdvertisement}\r\n            noImageHeaderSlider = {noImageHeaderSlider}\r\n          />\r\n        }\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { routeTickets } = state.RouteTicket;\r\n  const { routes } = state.Route;\r\n  const { advertisements } = state.Advertisement;\r\n  const { headerImages } = state.Settings.info\r\n\r\n  const readLoadingRouteTicket = state.RouteTicket.readLoading;\r\n  const readLoadingRoute = state.Route.readLoading;\r\n  const readLoadingAdvertisement = state.Advertisement.readLoading;\r\n  const readLoadingHeaderImages = state.Settings.readInfoLoading;\r\n\r\n\r\n\r\n  return {\r\n    routeTickets,\r\n    routes,\r\n    advertisements,\r\n    headerImages,\r\n    readLoadingHeaderImages,\r\n    readLoadingRouteTicket,\r\n    readLoadingRoute,\r\n    readLoadingAdvertisement,\r\n};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  listenToRouteTickets,\r\n  removeListenerFromRouteTickets,\r\n  readAllRoute,\r\n  readAdvertisements,\r\n  readSettingInfo\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}