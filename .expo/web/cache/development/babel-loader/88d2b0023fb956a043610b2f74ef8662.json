{"ast":null,"code":"import Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PixelRatio from \"react-native-web/dist/exports/PixelRatio\";\nexport var WINDOW_WIDTH = Dimensions.get(\"window\").width;\nexport var WINDOW_HEIGHT = Dimensions.get(\"window\").height;\nvar guidelineBaseWidth = 375;\nexport var scaleSize = function scaleSize(size) {\n  return WINDOW_WIDTH / guidelineBaseWidth * size;\n};\nexport var scaleFont = function scaleFont(size) {\n  return size * PixelRatio.getFontScale();\n};\n\nfunction dimensions(top) {\n  var right = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : top;\n  var bottom = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : top;\n  var left = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : right;\n  var property = arguments.length > 4 ? arguments[4] : undefined;\n  var styles = {};\n  styles[property + \"Top\"] = top;\n  styles[property + \"Right\"] = right;\n  styles[property + \"Bottom\"] = bottom;\n  styles[property + \"Left\"] = left;\n  return styles;\n}\n\nexport function margin(top, right, bottom, left) {\n  return dimensions(top, right, bottom, left, \"margin\");\n}\nexport function padding(top, right, bottom, left) {\n  return dimensions(top, right, bottom, left, \"padding\");\n}\nexport function boxShadow(color) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    height: 2,\n    width: 2\n  };\n  var radius = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 8;\n  var opacity = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0.2;\n  return {\n    shadowColor: color,\n    shadowOffset: offset,\n    shadowOpacity: opacity,\n    shadowRadius: radius,\n    elevation: radius\n  };\n}","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/settings/styles/theme/mixins.js"],"names":["WINDOW_WIDTH","Dimensions","get","width","WINDOW_HEIGHT","height","guidelineBaseWidth","scaleSize","size","scaleFont","PixelRatio","getFontScale","dimensions","top","right","bottom","left","property","styles","margin","padding","boxShadow","color","offset","radius","opacity","shadowColor","shadowOffset","shadowOpacity","shadowRadius","elevation"],"mappings":";;AACA,OAAO,IAAMA,YAAY,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,KAA9C;AACP,OAAO,IAAMC,aAAa,GAAGH,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBG,MAA/C;AACP,IAAMC,kBAAkB,GAAG,GAA3B;AAEA,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAC,IAAI;AAAA,SAAKR,YAAY,GAAGM,kBAAhB,GAAsCE,IAA1C;AAAA,CAAtB;AAEP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CAAAD,IAAI;AAAA,SAAIA,IAAI,GAAGE,UAAU,CAACC,YAAX,EAAX;AAAA,CAAtB;;AAEP,SAASC,UAAT,CAAoBC,GAApB,EAA4E;AAAA,MAAnDC,KAAmD,uEAA3CD,GAA2C;AAAA,MAAtCE,MAAsC,uEAA7BF,GAA6B;AAAA,MAAxBG,IAAwB,uEAAjBF,KAAiB;AAAA,MAAVG,QAAU;AACxE,MAAIC,MAAM,GAAG,EAAb;AAEAA,EAAAA,MAAM,CAAID,QAAJ,SAAN,GAA2BJ,GAA3B;AACAK,EAAAA,MAAM,CAAID,QAAJ,WAAN,GAA6BH,KAA7B;AACAI,EAAAA,MAAM,CAAID,QAAJ,YAAN,GAA8BF,MAA9B;AACAG,EAAAA,MAAM,CAAID,QAAJ,UAAN,GAA4BD,IAA5B;AAEA,SAAOE,MAAP;AACH;;AAED,OAAO,SAASC,MAAT,CAAgBN,GAAhB,EAAqBC,KAArB,EAA4BC,MAA5B,EAAoCC,IAApC,EAA0C;AAC7C,SAAOJ,UAAU,CAACC,GAAD,EAAMC,KAAN,EAAaC,MAAb,EAAqBC,IAArB,EAA2B,QAA3B,CAAjB;AACH;AAED,OAAO,SAASI,OAAT,CAAiBP,GAAjB,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqCC,IAArC,EAA2C;AAC9C,SAAOJ,UAAU,CAACC,GAAD,EAAMC,KAAN,EAAaC,MAAb,EAAqBC,IAArB,EAA2B,SAA3B,CAAjB;AACH;AAED,OAAO,SAASK,SAAT,CACHC,KADG,EAKL;AAAA,MAHEC,MAGF,uEAHW;AAAElB,IAAAA,MAAM,EAAE,CAAV;AAAaF,IAAAA,KAAK,EAAE;AAApB,GAGX;AAAA,MAFEqB,MAEF,uEAFW,CAEX;AAAA,MADEC,OACF,uEADY,GACZ;AACE,SAAO;AACHC,IAAAA,WAAW,EAAEJ,KADV;AAEHK,IAAAA,YAAY,EAAEJ,MAFX;AAGHK,IAAAA,aAAa,EAAEH,OAHZ;AAIHI,IAAAA,YAAY,EAAEL,MAJX;AAKHM,IAAAA,SAAS,EAAEN;AALR,GAAP;AAOH","sourcesContent":["import { Dimensions, PixelRatio } from \"react-native\";\r\nexport const WINDOW_WIDTH = Dimensions.get(\"window\").width;\r\nexport const WINDOW_HEIGHT = Dimensions.get(\"window\").height;\r\nconst guidelineBaseWidth = 375;\r\n\r\nexport const scaleSize = size => (WINDOW_WIDTH / guidelineBaseWidth) * size;\r\n\r\nexport const scaleFont = size => size * PixelRatio.getFontScale();\r\n\r\nfunction dimensions(top, right = top, bottom = top, left = right, property) {\r\n    let styles = {};\r\n\r\n    styles[`${property}Top`] = top;\r\n    styles[`${property}Right`] = right;\r\n    styles[`${property}Bottom`] = bottom;\r\n    styles[`${property}Left`] = left;\r\n\r\n    return styles;\r\n}\r\n\r\nexport function margin(top, right, bottom, left) {\r\n    return dimensions(top, right, bottom, left, \"margin\");\r\n}\r\n\r\nexport function padding(top, right, bottom, left) {\r\n    return dimensions(top, right, bottom, left, \"padding\");\r\n}\r\n\r\nexport function boxShadow(\r\n    color,\r\n    offset = { height: 2, width: 2 },\r\n    radius = 8,\r\n    opacity = 0.2\r\n) {\r\n    return {\r\n        shadowColor: color,\r\n        shadowOffset: offset,\r\n        shadowOpacity: opacity,\r\n        shadowRadius: radius,\r\n        elevation: radius\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}