{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\components\\\\templates\\\\UserProfile\\\\MyLuckyDraw\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { FlatList, Text, TouchableOpacity, View, VirtualizedList } from \"../../../atoms\";\nimport styles from \"./styles\";\nimport ContentLoader, { Rect } from 'react-content-loader/native';\nvar DATA = [];\n\nvar LoadingListItem = function LoadingListItem() {\n  return React.createElement(View, {\n    style: styles.listSectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, React.createElement(View, {\n    style: styles.routeSectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }\n  }, React.createElement(ContentLoader, {\n    speed: 1,\n    width: \"100%\",\n    height: 40,\n    backgroundColor: \"#d9d9d9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 9\n    }\n  }, React.createElement(Rect, {\n    x: \"0\",\n    y: \"4%\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"40%\",\n    height: \"16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }), React.createElement(Rect, {\n    x: \"0\",\n    y: \"56%\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"50%\",\n    height: \"18\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 11\n    }\n  }))), React.createElement(View, {\n    style: [styles.innerSectionStyle, styles.priceSectionStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.titleColumnStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, \"PRIZE\"), React.createElement(ContentLoader, {\n    speed: 1,\n    width: \"100%\",\n    height: 30,\n    backgroundColor: \"#d9d9d9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, React.createElement(Rect, {\n    x: \"15%\",\n    y: \"20%\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"80%\",\n    height: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }))));\n};\n\nvar RewardListItem = function RewardListItem(_ref) {\n  var item = _ref.item,\n      _ref$onPress = _ref.onPress,\n      _onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress;\n\n  var obtained = item.obtained,\n      title = item.title,\n      event = item.event;\n  var obtainedDate = obtained.at.format(\"DD MMM YYYY\");\n  var eventTitle = \"Lucky Draw\";\n\n  if (event && event.title) {\n    eventTitle = event.title;\n  }\n\n  return React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress(item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 3\n    }\n  }, React.createElement(View, {\n    style: styles.listSectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.routeSectionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titleRouteStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, eventTitle), React.createElement(Text, {\n    style: styles.dateRouteStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, obtainedDate)), React.createElement(View, {\n    style: [styles.innerSectionStyle, styles.priceSectionStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titleColumnStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"PRIZE\"), React.createElement(Text, {\n    style: styles.priceTextStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, title))));\n};\n\nexport var MyLuckyDraw = function (_Component) {\n  _inherits(MyLuckyDraw, _Component);\n\n  var _super = _createSuper(MyLuckyDraw);\n\n  function MyLuckyDraw() {\n    var _this;\n\n    _classCallCheck(this, MyLuckyDraw);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.getItem = function (data, index) {\n      return {\n        key: \"luckyDrawLoading\" + index\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(MyLuckyDraw, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          readLoading = _this$props.readLoading,\n          dataSource = _this$props.dataSource,\n          _this$props$onPress = _this$props.onPress,\n          _onPress2 = _this$props$onPress === void 0 ? function () {} : _this$props$onPress;\n\n      if (readLoading) {\n        return React.createElement(VirtualizedList, {\n          data: DATA,\n          renderItem: function renderItem() {\n            return React.createElement(LoadingListItem, {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 15\n              }\n            });\n          },\n          initialNumToRender: 1,\n          keyExtractor: function keyExtractor(item) {\n            return item.key;\n          },\n          getItemCount: function getItemCount() {\n            return 1;\n          },\n          getItem: this.getItem.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 9\n          }\n        });\n      } else {\n        return React.createElement(FlatList, {\n          data: dataSource,\n          renderItem: function renderItem(_ref2) {\n            var item = _ref2.item;\n            return React.createElement(RewardListItem, {\n              item: item,\n              onPress: function onPress() {\n                return _onPress2(item);\n              },\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 13\n              }\n            });\n          },\n          keyExtractor: function keyExtractor(item) {\n            return item.id;\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 9\n          }\n        });\n      }\n    }\n  }]);\n\n  return MyLuckyDraw;\n}(Component);\nexport default MyLuckyDraw;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/components/templates/UserProfile/MyLuckyDraw/index.js"],"names":["React","Component","FlatList","Text","TouchableOpacity","View","VirtualizedList","styles","ContentLoader","Rect","DATA","LoadingListItem","listSectionStyle","routeSectionStyle","innerSectionStyle","priceSectionStyle","titleColumnStyle","RewardListItem","item","onPress","obtained","title","event","obtainedDate","at","format","eventTitle","titleRouteStyle","dateRouteStyle","priceTextStyle","MyLuckyDraw","getItem","data","index","key","props","readLoading","dataSource","bind","id"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nimport {\r\n  FlatList,\r\n  Text,\r\n  TouchableOpacity,\r\n  View,\r\n  VirtualizedList\r\n} from \"../../../atoms\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nimport ContentLoader, { Rect } from 'react-content-loader/native';\r\n\r\nconst DATA = [];\r\n\r\nconst LoadingListItem = () => {\r\n  return (\r\n    <View style={styles.listSectionStyle}>\r\n      <View style={styles.routeSectionStyle}>\r\n        <ContentLoader\r\n          speed={1}\r\n          width={\"100%\"}\r\n          height={40}\r\n          backgroundColor= \"#d9d9d9\"\r\n        >\r\n          <Rect x=\"0\" y=\"4%\" rx=\"4\" ry=\"4\" width=\"40%\" height=\"16\"/>\r\n          <Rect x=\"0\" y=\"56%\" rx=\"4\" ry=\"4\" width=\"50%\" height=\"18\"/>\r\n        </ContentLoader>\r\n      </View>\r\n      <View style={[styles.innerSectionStyle, styles.priceSectionStyle]}>\r\n        <Text style={styles.titleColumnStyle}>PRIZE</Text>\r\n        <ContentLoader\r\n          speed={1}\r\n          width={\"100%\"}\r\n          height={30}\r\n          backgroundColor= \"#d9d9d9\"\r\n        >\r\n          <Rect x=\"15%\" y=\"20%\" rx=\"4\" ry=\"4\" width=\"80%\" height=\"20\"/>\r\n        </ContentLoader>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nconst RewardListItem = ({ item, onPress = () => {} }) => {\r\n  const { obtained, title, event } = item;\r\n  const obtainedDate = obtained.at.format(\"DD MMM YYYY\");\r\n\r\n  let eventTitle = \"Lucky Draw\"\r\n  if(event && event.title){\r\n    eventTitle = event.title\r\n  }\r\n\r\nreturn (\r\n  <TouchableOpacity onPress={() => onPress(item)}>\r\n      <View style={styles.listSectionStyle}>\r\n        <View style={styles.routeSectionStyle}>\r\n          <Text style={styles.titleRouteStyle}>{eventTitle}</Text>\r\n          <Text style={styles.dateRouteStyle}>{obtainedDate}</Text>\r\n        </View>\r\n        <View style={[styles.innerSectionStyle, styles.priceSectionStyle]}>\r\n          <Text style={styles.titleColumnStyle}>PRIZE</Text>\r\n          <Text style={styles.priceTextStyle}>{title}</Text>\r\n        </View>\r\n      </View>\r\n  </TouchableOpacity>\r\n);\r\n};\r\n\r\nexport class MyLuckyDraw extends Component {\r\n  getItem = (data, index) => {\r\n    return {\r\n      key: \"luckyDrawLoading\" + index,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { readLoading, dataSource, onPress = () => {} } = this.props;\r\n\r\n    if(readLoading){\r\n      return(\r\n        <VirtualizedList\r\n          data={DATA}\r\n          renderItem={() => {\r\n            return (\r\n              <LoadingListItem />\r\n            );\r\n          }}\r\n          initialNumToRender={1}\r\n          keyExtractor={item => item.key}\r\n          getItemCount={() => {return 1}}\r\n          getItem={this.getItem.bind(this)}\r\n        />\r\n      );\r\n    }else{\r\n      return (\r\n        <FlatList\r\n          data={dataSource}\r\n          renderItem={({ item }) => (\r\n            <RewardListItem item={item} onPress={()=>onPress(item)} />\r\n          )}\r\n          keyExtractor={(item) => item.id}\r\n        />\r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default MyLuckyDraw;\r\n"]},"metadata":{},"sourceType":"module"}