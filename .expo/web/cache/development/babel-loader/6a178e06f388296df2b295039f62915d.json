{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\screens\\\\subscreen\\\\payment\\\\Method\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport { PaymentMethod } from \"@components/templates\";\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {}\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"onPayByCash\",\n    value: function onPayByCash() {\n      Actions.CameraReceipt({\n        mission: this.props.mission,\n        value: this.props.value,\n        routeId: this.props.routeId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var value = this.props.value;\n      var displayTitle = this.props.mission.shop.displayTitle;\n      var minSpend = this.props.mission.minSpend;\n      return React.createElement(PaymentMethod, {\n        payingToTitle: \"Paying to\",\n        minimumSpendTitle: \"Min. Pay\",\n        yourAmountTitle: \"Your Amount\",\n        paymentMethodTitle: \"Payment Method\",\n        payByCashTitle: \"Pay and Upload Receipt\",\n        currency: \"RM\",\n        comingSoonTitle: \"Coming Soon\",\n        payByOnlineTitle: \"Pay By Online\",\n        payByEWalletTitle: \"Pay By E-Wallet\",\n        shopName: displayTitle,\n        minimumSpend: minSpend,\n        amountPaid: value,\n        onPayByCash: this.onPayByCash.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport default connect(null, {})(index);","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/screens/subscreen/payment/Method/index.js"],"names":["React","Component","connect","Actions","PaymentMethod","styles","index","props","state","CameraReceipt","mission","value","routeId","displayTitle","shop","minSpend","onPayByCash","bind"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,aAAT,QAA8B,uBAA9B;AAEA,OAAOC,MAAP;;IAEMC,K;;;;;AACF,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFe;AAIlB;;;;wCAEmB,CAEnB;;;2CAEqB,CAErB;;;kCAEa;AACVL,MAAAA,OAAO,CAACM,aAAR,CAAsB;AAClBC,QAAAA,OAAO,EAAE,KAAKH,KAAL,CAAWG,OADF;AAElBC,QAAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWI,KAFA;AAGlBC,QAAAA,OAAO,EAAE,KAAKL,KAAL,CAAWK;AAHF,OAAtB;AAKH;;;6BAEQ;AAAA,UACGD,KADH,GACa,KAAKJ,KADlB,CACGI,KADH;AAAA,UAEGE,YAFH,GAEoB,KAAKN,KAAL,CAAWG,OAAX,CAAmBI,IAFvC,CAEGD,YAFH;AAAA,UAGGE,QAHH,GAGgB,KAAKR,KAAL,CAAWG,OAH3B,CAGGK,QAHH;AAKL,aACI,oBAAC,aAAD;AACI,QAAA,aAAa,EAAC,WADlB;AAEI,QAAA,iBAAiB,EAAC,UAFtB;AAGI,QAAA,eAAe,EAAC,aAHpB;AAII,QAAA,kBAAkB,EAAC,gBAJvB;AAKI,QAAA,cAAc,EAAC,wBALnB;AAMI,QAAA,QAAQ,EAAC,IANb;AAOI,QAAA,eAAe,EAAC,aAPpB;AAQI,QAAA,gBAAgB,EAAC,eARrB;AASI,QAAA,iBAAiB,EAAC,iBATtB;AAUI,QAAA,QAAQ,EAAEF,YAVd;AAWI,QAAA,YAAY,EAAEE,QAXlB;AAYI,QAAA,UAAU,EAAEJ,KAZhB;AAaI,QAAA,WAAW,EAAE,KAAKK,WAAL,CAAiBC,IAAjB,CAAsB,IAAtB,CAbjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ;AAiBH;;;;EA7CehB,S;;AAgDpB,eAAeC,OAAO,CAAC,IAAD,EAAO,EAAP,CAAP,CAAmBI,KAAnB,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { PaymentMethod } from \"@components/templates\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    onPayByCash() {\r\n        Actions.CameraReceipt({\r\n            mission: this.props.mission,\r\n            value: this.props.value,\r\n            routeId: this.props.routeId\r\n        });\r\n    }\r\n\r\n    render() {\r\n        const { value } = this.props\r\n        const { displayTitle } = this.props.mission.shop\r\n        const { minSpend } = this.props.mission\r\n\r\n        return (\r\n            <PaymentMethod\r\n                payingToTitle=\"Paying to\"\r\n                minimumSpendTitle=\"Min. Pay\"\r\n                yourAmountTitle=\"Your Amount\"\r\n                paymentMethodTitle=\"Payment Method\"\r\n                payByCashTitle=\"Pay and Upload Receipt\"\r\n                currency=\"RM\"\r\n                comingSoonTitle=\"Coming Soon\"\r\n                payByOnlineTitle=\"Pay By Online\"\r\n                payByEWalletTitle=\"Pay By E-Wallet\"\r\n                shopName={displayTitle}\r\n                minimumSpend={minSpend}\r\n                amountPaid={value}\r\n                onPayByCash={this.onPayByCash.bind(this)}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { })(index);\r\n"]},"metadata":{},"sourceType":"module"}