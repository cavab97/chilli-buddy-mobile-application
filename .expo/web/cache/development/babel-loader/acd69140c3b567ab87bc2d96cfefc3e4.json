{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\limwe\\\\Documents\\\\application\\\\gogogain-app\\\\gogogain-user\\\\src\\\\screens\\\\main\\\\RouteGroups\\\\Routes\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport { AreaRouteGroupList } from \"../../../../components/templates\";\nimport { listenFromDatabase, removeListenerFromDatabase } from \"../../../../redux/route/action\";\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var routeGroupId = this.props.navigation.state.params.routeGroupId;\n      this.props.listenFromDatabase({\n        routeGroupId: routeGroupId\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeListenerFromDatabase();\n    }\n  }, {\n    key: \"onSingleRouteMapPress\",\n    value: function onSingleRouteMapPress(route) {\n      var id = route.id;\n      Actions.Route({\n        routeId: id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var routes = this.props.routes;\n      return React.createElement(AreaRouteGroupList, {\n        data: routes,\n        totalMissionTitle: \"Total Mission : \",\n        periodTitle: \"Period : \",\n        seatLeftTitle: \"Seat Left : \",\n        completeTitle: \"Complete : \",\n        winnerTitle: \"Winner : \",\n        periodEndTitle: \"Period End : \",\n        prizeTitle: \"Prize : \",\n        completeInTitle: \"Complete in : \",\n        routeTitle: \"Route \",\n        onSingleRouteMapPress: this.onSingleRouteMapPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return _objectSpread({}, state.Route);\n};\n\nexport default connect(mapStateToProps, {\n  listenFromDatabase: listenFromDatabase,\n  removeListenerFromDatabase: removeListenerFromDatabase\n})(index);","map":{"version":3,"sources":["C:/Users/limwe/Documents/application/gogogain-app/gogogain-user/src/screens/main/RouteGroups/Routes/index.js"],"names":["React","Component","connect","Actions","AreaRouteGroupList","listenFromDatabase","removeListenerFromDatabase","styles","index","props","state","routeGroupId","navigation","params","route","id","Route","routeId","routes","onSingleRouteMapPress","bind","mapStateToProps"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,OAAT,QAAwB,0BAAxB;AACA,SAASC,kBAAT;AAEA,SACEC,kBADF,EAEEC,0BAFF;AAKA,OAAOC,MAAP;;IAEMC,K;;;;;AACJ,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAa,EAAb;AAFiB;AAGlB;;;;wCAEmB;AAAA,UACVC,YADU,GACO,KAAKF,KAAL,CAAWG,UAAX,CAAsBF,KAAtB,CAA4BG,MADnC,CACVF,YADU;AAElB,WAAKF,KAAL,CAAWJ,kBAAX,CAA8B;AAAEM,QAAAA,YAAY,EAAZA;AAAF,OAA9B;AACD;;;2CAEsB;AACrB,WAAKF,KAAL,CAAWH,0BAAX;AACD;;;0CAEqBQ,K,EAAO;AAAA,UACnBC,EADmB,GACZD,KADY,CACnBC,EADmB;AAE3BZ,MAAAA,OAAO,CAACa,KAAR,CAAc;AAAEC,QAAAA,OAAO,EAAEF;AAAX,OAAd;AACD;;;6BAEQ;AAAA,UACCG,MADD,GACY,KAAKT,KADjB,CACCS,MADD;AAIP,aACE,oBAAC,kBAAD;AACE,QAAA,IAAI,EAAEA,MADR;AAEE,QAAA,iBAAiB,EAAC,kBAFpB;AAGE,QAAA,WAAW,EAAC,WAHd;AAIE,QAAA,aAAa,EAAC,cAJhB;AAKE,QAAA,aAAa,EAAC,aALhB;AAME,QAAA,WAAW,EAAC,WANd;AAOE,QAAA,cAAc,EAAC,eAPjB;AAQE,QAAA,UAAU,EAAC,UARb;AASE,QAAA,eAAe,EAAC,gBATlB;AAUE,QAAA,UAAU,EAAC,QAVb;AAWE,QAAA,qBAAqB,EAAE,KAAKC,qBAAL,CAA2BC,IAA3B,CAAgC,IAAhC,CAXzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAeD;;;;EAvCiBnB,S;;AA0CpB,IAAMoB,eAAe,GAAG,SAAlBA,eAAkB,CAACX,KAAD,EAAW;AACjC,2BAAYA,KAAK,CAACM,KAAlB;AACD,CAFD;;AAIA,eAAed,OAAO,CAACmB,eAAD,EAAkB;AACtChB,EAAAA,kBAAkB,EAAlBA,kBADsC;AAEtCC,EAAAA,0BAA0B,EAA1BA;AAFsC,CAAlB,CAAP,CAGZE,KAHY,CAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { AreaRouteGroupList } from \"../../../../components/templates\";\r\n\r\nimport {\r\n  listenFromDatabase,\r\n  removeListenerFromDatabase,\r\n} from \"../../../../redux/route/action\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { routeGroupId } = this.props.navigation.state.params;\r\n    this.props.listenFromDatabase({ routeGroupId });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeListenerFromDatabase();\r\n  }\r\n\r\n  onSingleRouteMapPress(route) {\r\n    const { id } = route;\r\n    Actions.Route({ routeId: id });\r\n  }\r\n\r\n  render() {\r\n    const { routes } = this.props;\r\n\r\n\r\n    return (\r\n      <AreaRouteGroupList\r\n        data={routes}\r\n        totalMissionTitle=\"Total Mission : \"\r\n        periodTitle=\"Period : \"\r\n        seatLeftTitle=\"Seat Left : \"\r\n        completeTitle=\"Complete : \"\r\n        winnerTitle=\"Winner : \"\r\n        periodEndTitle=\"Period End : \"\r\n        prizeTitle=\"Prize : \"\r\n        completeInTitle=\"Complete in : \"\r\n        routeTitle=\"Route \"\r\n        onSingleRouteMapPress={this.onSingleRouteMapPress.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { ...state.Route };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  listenFromDatabase,\r\n  removeListenerFromDatabase,\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}