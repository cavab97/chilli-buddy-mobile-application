{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\components\\\\templates\\\\rank\\\\EventRanking\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./styles\";\nimport { FlatList, Icon, Text, TouchableOpacity, View } from \"../../../atoms\";\nimport ContentLoader, { Rect } from 'react-content-loader/native';\nimport { Colors } from \"../../../../settings/styles/theme\";\n\nvar EventRanking = function EventRanking(_ref) {\n  var data = _ref.data,\n      routeTitle = _ref.routeTitle,\n      routeEndedTitle = _ref.routeEndedTitle,\n      eventTitle = _ref.eventTitle,\n      luckyTitle = _ref.luckyTitle,\n      drawTitle = _ref.drawTitle,\n      onEventPress = _ref.onEventPress,\n      _ref$onRoutePress = _ref.onRoutePress,\n      onRoutePress = _ref$onRoutePress === void 0 ? function () {} : _ref$onRoutePress,\n      readLoading = _ref.readLoading;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, readLoading ? React.createElement(View, {\n    style: styles.loadingStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 17\n    }\n  }, React.createElement(ContentLoader, {\n    speed: 1,\n    width: \"100%\",\n    height: 81,\n    backgroundColor: \"#d9d9d9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }\n  }, React.createElement(Rect, {\n    x: \"5%\",\n    y: \"30\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"20\",\n    height: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 25\n    }\n  }), React.createElement(Rect, {\n    x: \"15%\",\n    y: \"20\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"30%\",\n    height: \"16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 25\n    }\n  }), React.createElement(Rect, {\n    x: \"75%\",\n    y: \"20\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"20%\",\n    height: \"16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }), React.createElement(Rect, {\n    x: \"15%\",\n    y: \"45\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"15%\",\n    height: \"16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 25\n    }\n  }), React.createElement(Rect, {\n    x: \"75%\",\n    y: \"45\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"20%\",\n    height: \"16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 25\n    }\n  })), React.createElement(View, {\n    style: styles.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 21\n    }\n  })) : React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return onRoutePress(item);\n        },\n        style: styles.row,\n        key: item.key,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 29\n        }\n      }, React.createElement(Text, {\n        style: styles.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 33\n        }\n      }, index + 1), React.createElement(View, {\n        style: styles.imageContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 33\n        }\n      }), React.createElement(View, {\n        style: styles.titleContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 37\n        }\n      }, item.title), React.createElement(Text, {\n        style: styles.textFontFamily,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 37\n        }\n      }, item.type)), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: styles.subtitle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 37\n        }\n      }, routeEndedTitle), React.createElement(Text, {\n        style: styles.index,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 37\n        }\n      }, item.ended.at ? item.ended.at.format(\"DD MMM YYYY\") : item.endTime.format(\"DD MMM YYYY\")))), React.createElement(View, {\n        style: styles.line,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 29\n        }\n      }));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    style: styles.flatListStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }), React.createElement(TouchableOpacity, {\n    style: [styles.eventButtonStyle, styles.eventButtonPosition, {\n      backgroundColor: Colors.PRIMARY\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"calendar-check-o\",\n    type: \"font-awesome\",\n    color: Colors.WHITE,\n    size: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: [styles.eventTextStyle, {\n      color: Colors.WHITE\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 17\n    }\n  }, eventTitle)), React.createElement(TouchableOpacity, {\n    style: [styles.eventButtonStyle, styles.luckyButtonPosition, {\n      backgroundColor: Colors.WHITE\n    }],\n    onPress: onEventPress,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }\n  }, React.createElement(Icon, {\n    name: \"calendar-check-o\",\n    type: \"font-awesome\",\n    color: Colors.GRAY_MEDIUM,\n    size: 18,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 17\n    }\n  }), React.createElement(Text, {\n    style: [styles.eventTextStyle, {\n      color: Colors.GRAY_MEDIUM\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 17\n    }\n  }, luckyTitle, \" \", drawTitle)));\n};\n\nexport { EventRanking };","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/components/templates/rank/EventRanking/index.js"],"names":["React","styles","FlatList","Icon","Text","TouchableOpacity","View","ContentLoader","Rect","Colors","EventRanking","data","routeTitle","routeEndedTitle","eventTitle","luckyTitle","drawTitle","onEventPress","onRoutePress","readLoading","container","loadingStyle","line","item","index","row","key","imageContainer","titleContainer","title","textFontFamily","type","subtitle","ended","at","format","endTime","id","flatListStyle","eventButtonStyle","eventButtonPosition","backgroundColor","PRIMARY","WHITE","eventTextStyle","color","luckyButtonPosition","GRAY_MEDIUM"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport styles from \"./styles\";\r\n\r\nimport {\r\n    FlatList,\r\n    Icon,\r\n    Text,\r\n    TouchableOpacity,\r\n    View\r\n} from \"../../../atoms\";\r\n\r\nimport ContentLoader, { Rect } from 'react-content-loader/native'\r\n\r\nimport { Colors } from \"../../../../settings/styles/theme\";\r\n\r\nconst EventRanking = ({\r\n   data,\r\n   routeTitle,\r\n   routeEndedTitle,\r\n   eventTitle,\r\n   luckyTitle,\r\n   drawTitle,\r\n   onEventPress,\r\n   onRoutePress = () =>{},\r\n   readLoading\r\n})=> {            \r\n\r\n    return(\r\n        <View style={styles.container}>\r\n            {readLoading?\r\n                <View style={styles.loadingStyle}>\r\n                    <ContentLoader\r\n                        speed={1}\r\n                        width={\"100%\"}\r\n                        height={81}\r\n                        backgroundColor= \"#d9d9d9\"\r\n                    >\r\n                        <Rect x=\"5%\" y=\"30\" rx=\"4\" ry=\"4\" width=\"20\" height=\"20\" />\r\n                        <Rect x=\"15%\" y=\"20\" rx=\"4\" ry=\"4\" width=\"30%\" height=\"16\" />\r\n                        <Rect x=\"75%\" y=\"20\" rx=\"4\" ry=\"4\" width=\"20%\" height=\"16\" />\r\n                        <Rect x=\"15%\" y=\"45\" rx=\"4\" ry=\"4\" width=\"15%\" height=\"16\" />\r\n                        <Rect x=\"75%\" y=\"45\" rx=\"4\" ry=\"4\" width=\"20%\" height=\"16\" />\r\n                    </ContentLoader>\r\n                    <View style={styles.line} />\r\n                </View>\r\n                    \r\n            :\r\n                <FlatList\r\n                    data={data}\r\n                    renderItem={({ item, index }) => (\r\n                        <View>\r\n                            <TouchableOpacity \r\n                                onPress={()=> onRoutePress(item)}\r\n                                style={styles.row}\r\n                                key={item.key}\r\n                            >\r\n                                <Text style={styles.index}>\r\n                                    {index + 1}\r\n                                </Text>\r\n                                <View style={styles.imageContainer}>\r\n                                    {/* <ImageInfo\r\n                                        banner={item.images[0]}\r\n                                        imageContainer={styles.image}\r\n                                        imageStyle={styles.imageFrame}\r\n                                    /> */}\r\n                                </View>\r\n                                <View style={styles.titleContainer}>\r\n                                    <Text style={styles.title}>\r\n                                        {item.title}\r\n                                    </Text>\r\n                                    <Text style={styles.textFontFamily}>\r\n                                        {item.type}\r\n                                    </Text>\r\n                                </View>\r\n                                <View>\r\n                                    <Text style={styles.subtitle}>\r\n                                        {routeEndedTitle}\r\n                                    </Text>\r\n                                    <Text style={styles.index}>\r\n                                        {item.ended.at? item.ended.at.format(\"DD MMM YYYY\"): item.endTime.format(\"DD MMM YYYY\") }\r\n                                    </Text>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                            <View style={styles.line} />\r\n                        </View>\r\n                    )}\r\n                    keyExtractor={(item) => item.id}\r\n                    style={styles.flatListStyle}\r\n                />\r\n            }\r\n                            \r\n\r\n            \r\n            <TouchableOpacity\r\n                style={[\r\n                styles.eventButtonStyle,\r\n                styles.eventButtonPosition,\r\n                {\r\n                    backgroundColor: Colors.PRIMARY\r\n                },\r\n                ]}\r\n            >\r\n                <Icon\r\n                    name=\"calendar-check-o\"\r\n                    type=\"font-awesome\"\r\n                    color={Colors.WHITE}\r\n                    size={18}\r\n                />\r\n                <Text style={[styles.eventTextStyle, {color: Colors.WHITE},]}>\r\n                    {eventTitle}\r\n                </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n                style={[\r\n                styles.eventButtonStyle,\r\n                styles.luckyButtonPosition,\r\n                {\r\n                    backgroundColor: Colors.WHITE\r\n                },\r\n                ]}\r\n                onPress={onEventPress}\r\n            >\r\n                <Icon\r\n                    name=\"calendar-check-o\"\r\n                    type=\"font-awesome\"\r\n                    color={Colors.GRAY_MEDIUM}\r\n                    size={18}\r\n                />\r\n                <Text style={[styles.eventTextStyle, {color: Colors.GRAY_MEDIUM},]}>\r\n                    {luckyTitle} {drawTitle}\r\n                </Text>\r\n            </TouchableOpacity>\r\n            {/* <View style={styles.buttonContainer}> */}\r\n               {/*  <IconButton\r\n                    iconName=\"ios-calendar\"\r\n                    iconSize={25}\r\n                    iconColor=\"white\"\r\n                    iconContainer={styles.iconActiveButtonContainer}\r\n                    title={eventTitle}\r\n                    titleStyle={styles.iconActiveText}\r\n                /> */}\r\n                {/* <IconButton\r\n                    iconName=\"ios-calendar\"\r\n                    iconSize={25}\r\n                    iconColor=\"#ccc\"\r\n                    iconContainer={styles.iconButtonContainer}\r\n                    title={luckyTitle}\r\n                    subtitle={drawTitle}\r\n                    titleStyle={styles.iconText}\r\n                    onPress={onEventPress}\r\n                />\r\n            </View> */}\r\n        </View>\r\n    );\r\n};\r\n\r\nexport { EventRanking };"]},"metadata":{},"sourceType":"module"}