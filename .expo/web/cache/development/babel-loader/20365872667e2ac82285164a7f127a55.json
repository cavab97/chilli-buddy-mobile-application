{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\screens\\\\main\\\\RouteGroups\\\\Route\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport { SingleRoutes } from \"@components/templates\";\nimport { listenToRecord as listenToRoute, removeListenerToRecord as removeListenerFromRoute } from \"@redux/route/action\";\nimport { listenToRecord as listenToRouteTicket, removeListenerToRecord as removeListenerFromRouteTicket, submitToBackend as submitRouteTicket } from \"@redux/routeTicket/action\";\nimport { readFromDatabase as readMissions, modalControl as missionModalControl } from \"@redux/mission/action\";\nimport { listenByRouteTicket as listenTransactions, removeListenByRouteTicket as removeListenTransactions } from \"@redux/transaction/action\";\nimport { readFromDatabase as readRewards } from \"@redux/reward/action\";\nimport { submitToBackend as submitTransaction } from \"@redux/transaction/action\";\nimport styles from \"./styles\";\nimport { Linking } from \"expo\";\nimport clone from \"clone\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this.handleModal = function (mission) {\n      _this.props.missionModalControl(mission);\n    };\n\n    _this.onPay = function (mission) {\n      var routeId = _this.props.navigation.state.params.routeId;\n\n      var routeTicketId = _this.lookingForTicket({\n        routeId: routeId\n      });\n\n      var shopId = mission.shop.id;\n      var missionId = mission.id;\n      var payment = {\n        amount: 50,\n        paymentId: null,\n        paymentType: \"cash\",\n        receiptId: null,\n        receiptPhotoUrl: \"https://image.freepik.com/free-vector/realistic-receipt-template_23-2147938550.jpg\",\n        receiptUrl: null\n      };\n      var data = {\n        routeId: routeId,\n        shopId: shopId,\n        routeTicketId: routeTicketId,\n        missionId: missionId,\n        payment: payment\n      };\n\n      _this.props.submitTransaction(data, \"create\");\n    };\n\n    _this.onPayAmount = function (mission) {\n      _this.props.missionModalControl(mission);\n\n      Actions.Amount({\n        mission: mission,\n        routeId: _this.props.navigation.state.params.routeId\n      });\n    };\n\n    _this.onRulesPress = function (rules, terms) {\n      Actions.Rules({\n        rules: rules,\n        terms: terms\n      });\n    };\n\n    _this.state = {\n      isVisible: false,\n      shared: false,\n      invited: false,\n      showModalVisible: true,\n      routeTicketId: null,\n      error: null,\n      showErrorModalVisible: false\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var routeId = this.props.navigation.state.params.routeId;\n      var routeTicketId = this.lookingForTicket({\n        routeId: routeId\n      });\n      this.props.listenToRoute({\n        routeId: routeId\n      });\n      this.props.readMissions({\n        routeId: routeId\n      });\n      this.props.readRewards({\n        routeId: routeId\n      });\n\n      if (routeTicketId) {\n        console.log(\"Hava route ticket id\");\n        this.props.listenToRouteTicket({\n          routeTicketId: routeTicketId\n        });\n        this.props.listenTransactions({\n          routeTicketId: routeTicketId\n        });\n        this.setState({\n          routeTicketId: routeTicketId\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeListenerFromRoute();\n      this.props.removeListenerFromRouteTicket();\n      this.props.removeListenTransactions();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var _this2 = this;\n\n      var routeId = this.props.navigation.state.params.routeId;\n      var route = this.props.routeState.route;\n\n      if ((this.state.shared !== prevState.shared || this.state.invited !== prevState.invited) && route.type === \"Luxury\" && this.state.invited && this.state.shared && !this.state.routeTicketId) {\n        this.props.submitRouteTicket({\n          routeId: routeId\n        }, \"create\");\n      }\n\n      if (this.state.shared !== prevState.shared && route.type === \"Casual\" && this.state.shared && !this.state.routeTicketId) {\n        this.props.submitRouteTicket({\n          routeId: routeId\n        }, \"create\");\n      }\n\n      if (this.props.submitRouteTicketError.message !== prevProps.submitRouteTicketError.message && this.props.submitRouteTicketError.message) {\n        this.setState({\n          error: this.props.submitRouteTicketError.message,\n          showErrorModalVisible: true\n        });\n        setTimeout(function () {\n          _this2.setState({\n            showErrorModalVisible: false\n          });\n        }, 3000);\n      }\n\n      if (this.props.submitRouteTicketResult.message !== prevProps.submitRouteTicketResult.message && this.props.submitRouteTicketResult.message) {\n        this.props.listenToRouteTicket({\n          routeTicketId: this.props.submitRouteTicketResult.ids[0]\n        });\n        this.props.listenTransactions({\n          routeTicketId: this.props.submitRouteTicketResult.ids[0]\n        });\n        this.setState({\n          routeTicketId: this.props.submitRouteTicketResult.ids[0]\n        });\n      }\n    }\n  }, {\n    key: \"lookingForTicket\",\n    value: function lookingForTicket(_ref) {\n      var _ref$routeId = _ref.routeId,\n          routeId = _ref$routeId === void 0 ? null : _ref$routeId;\n      var _this$props$routeTick = this.props.routeTicketState.userRouteTickets,\n          userRouteTickets = _this$props$routeTick === void 0 ? [] : _this$props$routeTick;\n      var routeTicketId = null;\n      userRouteTickets.forEach(function (routeTicket) {\n        if (routeTicket.routeIds[0] === routeId) {\n          routeTicketId = routeTicket.id;\n        }\n      });\n      return routeTicketId;\n    }\n  }, {\n    key: \"toolTipPress\",\n    value: function toolTipPress() {\n      this.setState(function (state) {\n        return {\n          toolTipVisible: !state.toolTipVisible\n        };\n      });\n    }\n  }, {\n    key: \"onUnlockPress\",\n    value: function onUnlockPress() {\n      this.setState(function (state) {\n        return {\n          isVisible: !state.isVisible\n        };\n      });\n    }\n  }, {\n    key: \"onShare\",\n    value: function onShare() {\n      var _this3 = this;\n\n      var settingInfo = this.props.settingInfo;\n      var fbPost = settingInfo.share.fbPost;\n      Linking.openURL(\"https://www.facebook.com/sharer/sharer.php?u=\" + fbPost);\n      setTimeout(function () {\n        _this3.setState({\n          shared: true\n        });\n\n        console.log(\"Share successful\");\n      }, 3000);\n    }\n  }, {\n    key: \"onInvite\",\n    value: function onInvite() {\n      var _this4 = this;\n\n      var settingInfo = this.props.settingInfo;\n      var _settingInfo$share = settingInfo.share,\n          fbPost = _settingInfo$share.fbPost,\n          title = _settingInfo$share.title,\n          message = _settingInfo$share.message;\n      var shareOptions = {\n        title: title,\n        message: message + \" \" + fbPost,\n        url: fbPost,\n        subject: title\n      };\n      Share.share(shareOptions).then(function (_ref2) {\n        var action = _ref2.action,\n            activityType = _ref2.activityType;\n\n        if (action === Share.dismissedAction) {\n          console.log(\"Share dismissed\");\n        } else {\n          setTimeout(function () {\n            _this4.setState({\n              invited: true\n            });\n\n            console.log(\"Share successfuld\");\n          }, 3000);\n        }\n      }).catch(function (error) {\n        return _this4.setState({\n          result: \"error: \" + error.message\n        });\n      });\n    }\n  }, {\n    key: \"mapPress\",\n    value: function mapPress() {\n      console.log('I am clicked');\n    }\n  }, {\n    key: \"onPrizesPress\",\n    value: function onPrizesPress() {\n      var routeId = this.props.navigation.state.params.routeId;\n      Actions.Prizes({\n        routeId: routeId\n      });\n    }\n  }, {\n    key: \"onCompletedPress\",\n    value: function onCompletedPress() {\n      var routeId = this.props.navigation.state.params.routeId;\n      Actions.CompletedUser({\n        routeId: routeId\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var transactions = this.props.transactions;\n      var routeTicket = this.props.routeTicketState.routeTicket;\n      var route = this.props.routeState.route;\n      var _this$props$missionSt = this.props.missionState,\n          mission = _this$props$missionSt.mission,\n          modalActive = _this$props$missionSt.modalActive;\n      var rewards = this.props.rewardState.rewards;\n      var _this$props = this.props,\n          submitRouteTicketLoading = _this$props.submitRouteTicketLoading,\n          readLoadingRouteTicket = _this$props.readLoadingRouteTicket,\n          readLoadingRoute = _this$props.readLoadingRoute,\n          readLoadingMission = _this$props.readLoadingMission,\n          readLoadingReward = _this$props.readLoadingReward;\n\n      var _clone = clone(this.props.missionState),\n          missions = _clone.missions;\n\n      var banner = route.images[0] ? route.images[0] : require(\"../../../../assets/banner.jpg\");\n      var map = route.station === 9 ? require(\"../../../../assets/gogogain/RouteMap_FA_Ver2_Yellow.png\") : require(\"../../../../assets/gogogain/RouteMap_FA_Ver2_Blue.png\");\n      var uncompleteMissions = [];\n      var completedMissions = [];\n      var processedMissions = [];\n      missions.sort(function (a, b) {\n        return a.minSpend - b.minSpend;\n      });\n      missions.forEach(function (mission) {\n        var completedMission = routeTicket.completedMissions.filter(function (completedMission) {\n          return completedMission.id === mission.id;\n        });\n\n        if (completedMission.length > 0) {\n          mission = _objectSpread(_objectSpread({}, mission), {}, {\n            completed: true\n          });\n          processedMissions.push(mission);\n        } else {\n          mission = _objectSpread(_objectSpread({}, mission), {}, {\n            completed: false\n          });\n          processedMissions.push(mission);\n        }\n      });\n      var pendingTransaction = processedMissions.filter(function (mission) {\n        return mission.transactionStatus === \"pending\";\n      });\n      return React.createElement(SingleRoutes, {\n        currency: \"RM\",\n        routeData: route,\n        isJoined: this.state.routeTicketId ? true : false,\n        routeTicketData: routeTicket,\n        banner: banner,\n        map: map,\n        isVisible: this.state.isVisible,\n        onUnlockPress: this.onUnlockPress.bind(this),\n        isUnlockLoading: submitRouteTicketLoading,\n        facebookButtonTitle: \"Share our Facebook\",\n        inviteButtonTitle: \"Invite Friends\",\n        facebookSharePress: this.onShare.bind(this),\n        invitePress: this.onInvite.bind(this),\n        missionData: processedMissions,\n        mission: mission,\n        missionPress: this.handleModal.bind(this),\n        showModal: modalActive,\n        descriptionTitle: \"Description\",\n        payTitle: \"Pay\",\n        pendingTransaction: pendingTransaction,\n        onPay: this.onPay,\n        onPayAmount: this.onPayAmount,\n        onRulesPress: this.onRulesPress.bind(this),\n        onPrizesPress: this.onPrizesPress.bind(this),\n        onCompletedPress: this.onCompletedPress.bind(this),\n        readLoadingRouteTicket: readLoadingRouteTicket,\n        readLoadingRoute: readLoadingRoute,\n        readLoadingMission: readLoadingMission,\n        readLoadingReward: readLoadingReward,\n        errorSubmit: this.state.error,\n        errorModal: this.state.showErrorModalVisible,\n        errorHeader: \"Error\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var routeTicketState = state.RouteTicket;\n  var submitRouteTicketLoading = state.RouteTicket.submitLoading;\n  var submitRouteTicketResult = state.RouteTicket.submitResult;\n  var submitRouteTicketError = state.RouteTicket.submitError;\n  var routeState = state.Route;\n  var missionState = state.Mission;\n  var rewardState = state.Reward;\n  var settingInfo = state.Settings.info;\n  var readLoadingRouteTicket = state.RouteTicket.readLoading;\n  var readLoadingRoute = state.Route.readLoading;\n  var readLoadingMission = state.Mission.readLoading;\n  var readLoadingReward = state.Reward.readLoading;\n  var transactions = state.Transaction.transactions;\n  return {\n    routeState: routeState,\n    routeTicketState: routeTicketState,\n    missionState: missionState,\n    rewardState: rewardState,\n    settingInfo: settingInfo,\n    submitRouteTicketLoading: submitRouteTicketLoading,\n    submitRouteTicketResult: submitRouteTicketResult,\n    submitRouteTicketError: submitRouteTicketError,\n    readLoadingRouteTicket: readLoadingRouteTicket,\n    readLoadingRoute: readLoadingRoute,\n    readLoadingMission: readLoadingMission,\n    readLoadingReward: readLoadingReward,\n    transactions: transactions\n  };\n};\n\nexport default connect(mapStateToProps, {\n  submitRouteTicket: submitRouteTicket,\n  listenToRoute: listenToRoute,\n  removeListenerFromRoute: removeListenerFromRoute,\n  listenToRouteTicket: listenToRouteTicket,\n  removeListenerFromRouteTicket: removeListenerFromRouteTicket,\n  readMissions: readMissions,\n  missionModalControl: missionModalControl,\n  readRewards: readRewards,\n  submitTransaction: submitTransaction,\n  listenTransactions: listenTransactions,\n  removeListenTransactions: removeListenTransactions\n})(index);","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/screens/main/RouteGroups/Route/index.js"],"names":["React","Component","connect","Actions","SingleRoutes","listenToRecord","listenToRoute","removeListenerToRecord","removeListenerFromRoute","listenToRouteTicket","removeListenerFromRouteTicket","submitToBackend","submitRouteTicket","readFromDatabase","readMissions","modalControl","missionModalControl","listenByRouteTicket","listenTransactions","removeListenByRouteTicket","removeListenTransactions","readRewards","submitTransaction","styles","Linking","clone","index","props","handleModal","mission","onPay","routeId","navigation","state","params","routeTicketId","lookingForTicket","shopId","shop","id","missionId","payment","amount","paymentId","paymentType","receiptId","receiptPhotoUrl","receiptUrl","data","onPayAmount","Amount","onRulesPress","rules","terms","Rules","isVisible","shared","invited","showModalVisible","error","showErrorModalVisible","console","log","setState","prevProps","prevState","route","routeState","type","submitRouteTicketError","message","setTimeout","submitRouteTicketResult","ids","routeTicketState","userRouteTickets","forEach","routeTicket","routeIds","toolTipVisible","settingInfo","fbPost","share","openURL","title","shareOptions","url","subject","Share","then","action","activityType","dismissedAction","catch","result","Prizes","CompletedUser","transactions","missionState","modalActive","rewards","rewardState","submitRouteTicketLoading","readLoadingRouteTicket","readLoadingRoute","readLoadingMission","readLoadingReward","missions","banner","images","require","map","station","uncompleteMissions","completedMissions","processedMissions","sort","a","b","minSpend","completedMission","filter","length","completed","push","pendingTransaction","transactionStatus","onUnlockPress","bind","onShare","onInvite","onPrizesPress","onCompletedPress","mapStateToProps","RouteTicket","submitLoading","submitResult","submitError","Route","Mission","Reward","Settings","info","readLoading","Transaction"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Share, Platform } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\n\r\nimport { SingleRoutes } from \"@components/templates\";\r\n\r\nimport {\r\n  listenToRecord as listenToRoute,\r\n  removeListenerToRecord as removeListenerFromRoute,\r\n} from \"@redux/route/action\";\r\n\r\nimport {\r\n  listenToRecord as listenToRouteTicket,\r\n  removeListenerToRecord as removeListenerFromRouteTicket,\r\n  submitToBackend as submitRouteTicket,\r\n} from \"@redux/routeTicket/action\";\r\n\r\nimport {\r\n  readFromDatabase as readMissions,\r\n  modalControl as missionModalControl,\r\n} from \"@redux/mission/action\";\r\n\r\nimport {\r\n  listenByRouteTicket as listenTransactions,\r\n  removeListenByRouteTicket as removeListenTransactions\r\n} from \"@redux/transaction/action\";\r\n\r\nimport { readFromDatabase as readRewards } from \"@redux/reward/action\";\r\n\r\nimport { submitToBackend as submitTransaction } from \"@redux/transaction/action\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nimport { Linking } from \"expo\";\r\nimport clone from \"clone\"\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isVisible: false,\r\n      shared: false,\r\n      invited: false,\r\n      showModalVisible: true,\r\n      routeTicketId: null,\r\n      error: null,\r\n      showErrorModalVisible: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    const routeTicketId = this.lookingForTicket({ routeId });\r\n\r\n    this.props.listenToRoute({ routeId });\r\n    this.props.readMissions({ routeId });\r\n    this.props.readRewards({ routeId });\r\n\r\n    if (routeTicketId) {console.log(\"Hava route ticket id\");\r\n      this.props.listenToRouteTicket({ routeTicketId });\r\n      this.props.listenTransactions({routeTicketId});\r\n      this.setState({ routeTicketId: routeTicketId });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeListenerFromRoute();\r\n    this.props.removeListenerFromRouteTicket();\r\n    this.props.removeListenTransactions();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    // Typical usage (don't forget to compare props):\r\n    const { route } = this.props.routeState;\r\n\r\n    if (\r\n      (this.state.shared !== prevState.shared ||\r\n        this.state.invited !== prevState.invited) &&\r\n      route.type === \"Luxury\" &&\r\n      this.state.invited &&\r\n      this.state.shared &&\r\n      !this.state.routeTicketId\r\n    ) {\r\n      this.props.submitRouteTicket({ routeId }, \"create\");\r\n    }\r\n\r\n    if (\r\n      this.state.shared !== prevState.shared &&\r\n      route.type === \"Casual\" &&\r\n      this.state.shared &&\r\n      !this.state.routeTicketId\r\n    ) {\r\n      this.props.submitRouteTicket({ routeId }, \"create\");\r\n    }\r\n\r\n    if (\r\n      this.props.submitRouteTicketError.message !==\r\n        prevProps.submitRouteTicketError.message &&\r\n      this.props.submitRouteTicketError.message\r\n    ) {\r\n      this.setState({\r\n        error: this.props.submitRouteTicketError.message,\r\n        showErrorModalVisible: true,\r\n      });\r\n      setTimeout(() => {\r\n        this.setState({ showErrorModalVisible: false });\r\n      }, 3000);\r\n    }\r\n\r\n    if (\r\n      this.props.submitRouteTicketResult.message !==\r\n        prevProps.submitRouteTicketResult.message &&\r\n      this.props.submitRouteTicketResult.message\r\n    ) {\r\n      this.props.listenToRouteTicket({\r\n        routeTicketId: this.props.submitRouteTicketResult.ids[0],\r\n      });\r\n\r\n      this.props.listenTransactions({\r\n        routeTicketId: this.props.submitRouteTicketResult.ids[0]\r\n      });\r\n\r\n      this.setState({\r\n        routeTicketId: this.props.submitRouteTicketResult.ids[0],\r\n      });\r\n    }\r\n  }\r\n\r\n  lookingForTicket({ routeId = null }) {\r\n    const { userRouteTickets = [] } = this.props.routeTicketState;\r\n    let routeTicketId = null;\r\n    userRouteTickets.forEach((routeTicket) => {\r\n      if (routeTicket.routeIds[0] === routeId) {\r\n        routeTicketId = routeTicket.id;\r\n      }\r\n    });\r\n    return routeTicketId;\r\n  }\r\n\r\n  toolTipPress() {\r\n    this.setState((state) => ({\r\n      toolTipVisible: !state.toolTipVisible,\r\n    }));\r\n  }\r\n\r\n  onUnlockPress() {\r\n    this.setState((state) => ({\r\n      isVisible: !state.isVisible,\r\n    }));\r\n  }\r\n\r\n  onShare() {\r\n    const { settingInfo } = this.props;\r\n    const { fbPost } = settingInfo.share;\r\n    Linking.openURL(`https://www.facebook.com/sharer/sharer.php?u=${fbPost}`);\r\n\r\n    setTimeout(() => {\r\n      this.setState({ shared: true });\r\n      console.log(\"Share successful\");\r\n    }, 3000);\r\n  }\r\n\r\n  onInvite() {\r\n    const { settingInfo } = this.props;\r\n    const { fbPost, title, message } = settingInfo.share;\r\n\r\n    const shareOptions = {\r\n      title,\r\n      message: `${message} ${fbPost}`,\r\n      url: fbPost,\r\n      subject: title,\r\n    };\r\n\r\n    Share.share(shareOptions)\r\n      .then(({ action, activityType }) => {\r\n        if (action === Share.dismissedAction) {\r\n          console.log(\"Share dismissed\");\r\n        } else {\r\n          setTimeout(() => {\r\n            this.setState({ invited: true });\r\n            console.log(\"Share successfuld\");\r\n          }, 3000);\r\n        }\r\n      })\r\n      .catch((error) => this.setState({ result: \"error: \" + error.message }));\r\n  }\r\n\r\n  handleModal = (mission) => {\r\n    this.props.missionModalControl(mission);\r\n  };\r\n\r\n  onPay = (mission) => {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    const routeTicketId = this.lookingForTicket({ routeId });\r\n    const shopId = mission.shop.id;\r\n    const missionId = mission.id;\r\n    const payment = {\r\n      amount: 50,\r\n      paymentId: null,\r\n      paymentType: \"cash\",\r\n      receiptId: null,\r\n      receiptPhotoUrl:\r\n        \"https://image.freepik.com/free-vector/realistic-receipt-template_23-2147938550.jpg\",\r\n      receiptUrl: null,\r\n    };\r\n    const data = { routeId, shopId, routeTicketId, missionId, payment };\r\n    this.props.submitTransaction(data, \"create\");\r\n  };\r\n\r\n  onPayAmount = (mission) => {\r\n    this.props.missionModalControl(mission);\r\n    Actions.Amount({\r\n      mission: mission,\r\n      routeId: this.props.navigation.state.params.routeId,\r\n    });\r\n  };\r\n\r\n  mapPress() {\r\n    //console.log(data)\r\n    console.log('I am clicked')\r\n  }\r\n\r\n  onRulesPress = (rules, terms) => {\r\n    Actions.Rules({ rules, terms });\r\n  };\r\n\r\n  onPrizesPress() {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    Actions.Prizes({ routeId });\r\n  };\r\n\r\n  onCompletedPress() {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    Actions.CompletedUser({ routeId });\r\n  }\r\n\r\n  render() {\r\n    const transactions = this.props.transactions;\r\n    const { routeTicket } = this.props.routeTicketState;\r\n    const { route } = this.props.routeState;\r\n    const { mission, modalActive } = this.props.missionState;\r\n    const { rewards } = this.props.rewardState;\r\n    const {\r\n      submitRouteTicketLoading,\r\n      readLoadingRouteTicket,\r\n      readLoadingRoute,\r\n      readLoadingMission,\r\n      readLoadingReward,\r\n    } = this.props;\r\n\r\n    let { missions } = clone(this.props.missionState)\r\n\r\n    const banner = route.images[0]\r\n      ? route.images[0]\r\n      : require(\"../../../../assets/banner.jpg\");\r\n\r\n    const map = route.station === 9 ? \r\n      require(\"../../../../assets/gogogain/RouteMap_FA_Ver2_Yellow.png\") \r\n      : require(\"../../../../assets/gogogain/RouteMap_FA_Ver2_Blue.png\") \r\n\r\n    const uncompleteMissions = [];\r\n    const completedMissions = [];\r\n    const processedMissions = [];\r\n\r\n    missions.sort((a,b)=>{\r\n      return a.minSpend - b.minSpend\r\n    })\r\n\r\n    missions.forEach((mission) => {\r\n      const completedMission = routeTicket.completedMissions.filter((completedMission)=>{\r\n        return completedMission.id === mission.id\r\n      })\r\n\r\n      if (completedMission.length > 0) {\r\n        mission = {...mission, completed: true}\r\n\r\n        // > for pending chop <\r\n        /* if(transactions.length > 0){\r\n          const transaction = transactions.filter((transaction) => {\r\n            return transaction.mission.id === mission.id\r\n          })\r\n\r\n          if(transaction.length > 0){\r\n            if(transaction[0].approved.by !== null){\r\n              mission[\"transactionStatus\"] = \"approved\"\r\n            }else{\r\n              mission[\"transactionStatus\"] = \"pending\"\r\n            }\r\n          }\r\n        } */\r\n\r\n        processedMissions.push(mission)\r\n        // completedMissions.push(mission)\r\n      } else {\r\n        mission = {...mission, completed: false}\r\n        processedMissions.push(mission)\r\n        // uncompleteMissions.push(mission);\r\n      }\r\n    });\r\n\r\n    // missions = [...uncompleteMissions, ...completedMissions]\r\n\r\n    const pendingTransaction = processedMissions.filter((mission) => {\r\n      return mission.transactionStatus === \"pending\";\r\n    });\r\n\r\n    return (\r\n      <SingleRoutes\r\n        currency=\"RM\"\r\n        routeData={route}\r\n        isJoined={this.state.routeTicketId ? true : false}\r\n        routeTicketData={routeTicket}\r\n        banner={banner}\r\n        map={map}\r\n        isVisible={this.state.isVisible}\r\n        onUnlockPress={this.onUnlockPress.bind(this)}\r\n        isUnlockLoading={submitRouteTicketLoading}\r\n        facebookButtonTitle=\"Share our Facebook\"\r\n        inviteButtonTitle=\"Invite Friends\"\r\n        facebookSharePress={this.onShare.bind(this)}\r\n        invitePress={this.onInvite.bind(this)}\r\n        missionData={processedMissions}\r\n        mission={mission}\r\n        missionPress={this.handleModal.bind(this)}\r\n        showModal={modalActive}\r\n        descriptionTitle=\"Description\"\r\n        payTitle=\"Pay\"\r\n        pendingTransaction={pendingTransaction}\r\n        onPay={this.onPay}\r\n        onPayAmount={this.onPayAmount}\r\n        onRulesPress={this.onRulesPress.bind(this)}\r\n        onPrizesPress={this.onPrizesPress.bind(this)}\r\n        onCompletedPress={this.onCompletedPress.bind(this)}\r\n        readLoadingRouteTicket={readLoadingRouteTicket}\r\n        readLoadingRoute={readLoadingRoute}\r\n        readLoadingMission={readLoadingMission}\r\n        readLoadingReward={readLoadingReward}\r\n        errorSubmit={this.state.error}\r\n        errorModal={this.state.showErrorModalVisible}\r\n        errorHeader=\"Error\"\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const routeTicketState = state.RouteTicket;\r\n  const submitRouteTicketLoading = state.RouteTicket.submitLoading;\r\n  const submitRouteTicketResult = state.RouteTicket.submitResult;\r\n  const submitRouteTicketError = state.RouteTicket.submitError;\r\n  const routeState = state.Route;\r\n  const missionState = state.Mission;\r\n  const rewardState = state.Reward;\r\n  const settingInfo = state.Settings.info;\r\n\r\n  const readLoadingRouteTicket = state.RouteTicket.readLoading;\r\n  const readLoadingRoute = state.Route.readLoading;\r\n  const readLoadingMission = state.Mission.readLoading;\r\n  const readLoadingReward = state.Reward.readLoading;\r\n\r\n  const transactions = state.Transaction.transactions;\r\n\r\n  return {\r\n    routeState,\r\n    routeTicketState,\r\n    missionState,\r\n    rewardState,\r\n    settingInfo,\r\n    submitRouteTicketLoading,\r\n    submitRouteTicketResult,\r\n    submitRouteTicketError,\r\n    readLoadingRouteTicket,\r\n    readLoadingRoute,\r\n    readLoadingMission,\r\n    readLoadingReward,\r\n    transactions\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitRouteTicket,\r\n  listenToRoute,\r\n  removeListenerFromRoute,\r\n  listenToRouteTicket,\r\n  removeListenerFromRouteTicket,\r\n  readMissions,\r\n  missionModalControl,\r\n  readRewards,\r\n  submitTransaction,\r\n  listenTransactions,\r\n  removeListenTransactions\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}