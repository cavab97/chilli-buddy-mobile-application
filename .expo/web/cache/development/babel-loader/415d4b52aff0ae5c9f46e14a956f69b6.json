{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\src\\\\components\\\\templates\\\\CameraProfile\\\\index.js\";\nimport React from \"react\";\nimport ProgressCircle from 'react-native-progress-circle';\nimport Icon from \"@expo/vector-icons/Ionicons\";\nimport styles from \"./styles\";\nimport { View, Text, Overlay, Button } from \"../../../marslab-library-react-native/components/atoms\";\nimport { IconButton, ImageInfo } from \"../../../marslab-library-react-native/components/molecules\";\nimport { Colors } from \"../../../settings/styles\";\nimport { Camera } from 'expo-camera';\n\nvar CameraProfile = function CameraProfile(_ref) {\n  var hasPermission = _ref.hasPermission,\n      cameraType = _ref.cameraType,\n      cameraConfig = _ref.cameraConfig,\n      onPress = _ref.onPress,\n      uri = _ref.uri,\n      progressVisible = _ref.progressVisible,\n      onRetakePress = _ref.onRetakePress,\n      uploadLoading = _ref.uploadLoading,\n      uploadProgress = _ref.uploadProgress,\n      loadingMessage = _ref.loadingMessage,\n      errorHeader = _ref.errorHeader,\n      errorRedirectMessage = _ref.errorRedirectMessage,\n      successHeader = _ref.successHeader,\n      successMessage = _ref.successMessage,\n      successVisible = _ref.successVisible,\n      errorVisible = _ref.errorVisible,\n      error = _ref.error,\n      message = _ref.message,\n      onUploadPress = _ref.onUploadPress,\n      triggerLoading = _ref.triggerLoading,\n      selectImage = _ref.selectImage;\n\n  if (hasPermission === null) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 16\n      }\n    });\n  } else if (hasPermission === false) {\n    return React.createElement(Text, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }\n    }, \"No access to camera\");\n  } else if (uploadLoading === true) {\n    return React.createElement(Overlay, {\n      isVisible: uploadLoading,\n      width: \"100%\",\n      height: \"100%\",\n      overlayBackgroundColor: Colors.PRIMARY,\n      overlayStyle: styles.containerOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }\n    }, React.createElement(ProgressCircle, {\n      percent: uploadProgress,\n      radius: 50,\n      borderWidth: 8,\n      color: \"#fff\",\n      shadowColor: \"#fff1de\",\n      bgColor: \"#f18a22\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 21\n      }\n    }, React.createElement(Text, {\n      style: styles.percentText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 25\n      }\n    }, uploadProgress, \"%\")), React.createElement(Text, {\n      style: styles.messageText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 21\n      }\n    }, loadingMessage)));\n  } else if (error === true) {\n    return React.createElement(Overlay, {\n      isVisible: errorVisible,\n      width: \"100%\",\n      height: \"100%\",\n      overlayBackgroundColor: Colors.PRIMARY,\n      overlayStyle: styles.containerOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: \"ios-close-circle-outline\",\n      color: \"white\",\n      size: 70,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.subjectText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 21\n      }\n    }, errorHeader), React.createElement(Text, {\n      style: styles.messageText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 21\n      }\n    }, errorRedirectMessage)));\n  } else if (message !== null) {\n    return React.createElement(Overlay, {\n      isVisible: successVisible,\n      width: \"100%\",\n      height: \"100%\",\n      overlayBackgroundColor: Colors.PRIMARY,\n      overlayStyle: styles.containerOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      style: styles.contentContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }\n    }, React.createElement(Icon, {\n      name: \"ios-checkmark-circle-outline\",\n      color: \"white\",\n      size: 70,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 21\n      }\n    }), React.createElement(Text, {\n      style: styles.subjectText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 21\n      }\n    }, successHeader), React.createElement(Text, {\n      style: styles.messageText,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 21\n      }\n    }, successMessage)));\n  } else if (uri !== null) {\n    return React.createElement(Overlay, {\n      isVisible: progressVisible,\n      width: \"100%\",\n      height: \"100%\",\n      overlayStyle: styles.containerOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 13\n      }\n    }, React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }\n    }, React.createElement(ImageInfo, {\n      banner: uri,\n      imageContainer: styles.overlayImage,\n      imageStyle: styles.imageOverlay,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 21\n      }\n    }), React.createElement(Button, {\n      title: \"Retake\",\n      buttonStyle: styles.button,\n      titleStyle: styles.buttonText,\n      onPress: onRetakePress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 21\n      }\n    }), React.createElement(Button, {\n      title: \"Upload Profile Image\",\n      buttonStyle: styles.completeButton,\n      titleStyle: styles.completeButtonText,\n      onPress: onUploadPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 21\n      }\n    })));\n  } else {\n    return React.createElement(View, {\n      style: styles.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 13\n      }\n    }, React.createElement(Camera, {\n      style: styles.container,\n      type: cameraType,\n      ref: cameraConfig,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: styles.cameraContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 21\n      }\n    }, React.createElement(View, {\n      styles: {\n        flexDirection: 'row',\n        justifyContent: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 25\n      }\n    }, React.createElement(IconButton, {\n      iconContainer: styles.iconContainer,\n      iconName: \"ios-camera\",\n      iconSize: 48,\n      iconColor: \"white\",\n      onPress: onPress,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 29\n      }\n    }), React.createElement(View, {\n      style: styles.imagePickerIcon,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 29\n      }\n    }, React.createElement(IconButton, {\n      iconContainer: styles.iconContainer,\n      iconName: \"ios-folder-open\",\n      iconSize: 38,\n      iconColor: \"white\",\n      onPress: selectImage,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 33\n      }\n    }))))));\n  }\n};\n\nexport { CameraProfile };","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/components/templates/CameraProfile/index.js"],"names":["React","ProgressCircle","Icon","styles","View","Text","Overlay","Button","IconButton","ImageInfo","Colors","Camera","CameraProfile","hasPermission","cameraType","cameraConfig","onPress","uri","progressVisible","onRetakePress","uploadLoading","uploadProgress","loadingMessage","errorHeader","errorRedirectMessage","successHeader","successMessage","successVisible","errorVisible","error","message","onUploadPress","triggerLoading","selectImage","PRIMARY","containerOverlay","contentContainer","percentText","messageText","subjectText","overlayImage","imageOverlay","button","buttonText","completeButton","completeButtonText","container","cameraContainer","flexDirection","justifyContent","iconContainer","imagePickerIcon"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport ProgressCircle from 'react-native-progress-circle';\r\nimport Icon from \"react-native-vector-icons/Ionicons\";\r\nimport styles from \"./styles\";\r\n\r\nimport { \r\n    View, \r\n    Text,\r\n    Overlay, \r\n    Button\r\n} from \"../../../marslab-library-react-native/components/atoms\";\r\n\r\nimport { \r\n    IconButton,\r\n    ImageInfo\r\n} from \"../../../marslab-library-react-native/components/molecules\";\r\n\r\nimport { Colors } from \"../../../settings/styles\";\r\n\r\nimport { Camera } from 'expo-camera';\r\n\r\nconst CameraProfile = ({\r\n    hasPermission,\r\n    cameraType,\r\n    cameraConfig,\r\n    onPress,\r\n    uri,\r\n    progressVisible,\r\n    onRetakePress,\r\n    uploadLoading,\r\n    uploadProgress,\r\n    loadingMessage,\r\n    errorHeader,\r\n    errorRedirectMessage,\r\n    successHeader,\r\n    successMessage,\r\n    successVisible,\r\n    errorVisible,\r\n    error,\r\n    message,\r\n    onUploadPress,\r\n    triggerLoading,\r\n    selectImage\r\n})=> {\r\n \r\n    if (hasPermission === null) {\r\n        return <View />;\r\n    } else if (hasPermission === false) {\r\n        return <Text>No access to camera</Text>;\r\n    } else if (uploadLoading === true) {\r\n        return (\r\n            <Overlay\r\n                isVisible={uploadLoading}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                overlayBackgroundColor={Colors.PRIMARY}\r\n                overlayStyle={styles.containerOverlay}\r\n            >\r\n                <View style={styles.contentContainer}>\r\n                    <ProgressCircle\r\n                        percent={uploadProgress}\r\n                        radius={50}\r\n                        borderWidth={8}\r\n                        color=\"#fff\"\r\n                        shadowColor=\"#fff1de\"\r\n                        bgColor=\"#f18a22\"\r\n                    >\r\n                        <Text style={styles.percentText}>\r\n                            {uploadProgress}%\r\n                        </Text>\r\n                    </ProgressCircle>\r\n                    <Text style={styles.messageText}>\r\n                        {loadingMessage} \r\n                    </Text>\r\n                </View>\r\n            </Overlay>\r\n        )\r\n    } else if (error === true) {\r\n        return (\r\n            <Overlay\r\n                isVisible={errorVisible}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                overlayBackgroundColor={Colors.PRIMARY}\r\n                overlayStyle={styles.containerOverlay}\r\n            >\r\n                <View style={styles.contentContainer}>\r\n                    <Icon \r\n                        name=\"ios-close-circle-outline\" \r\n                        color=\"white\" \r\n                        size={70} \r\n                    />\r\n                    <Text style={styles.subjectText}>\r\n                        {errorHeader}\r\n                    </Text>\r\n                    <Text style={styles.messageText}>\r\n                        {errorRedirectMessage}\r\n                    </Text>\r\n                </View>\r\n            </Overlay>\r\n        )\r\n    } else if (message !== null) {\r\n        return (\r\n            <Overlay\r\n                isVisible={successVisible}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                overlayBackgroundColor={Colors.PRIMARY}\r\n                overlayStyle={styles.containerOverlay}\r\n            >\r\n                <View style={styles.contentContainer}>\r\n                    <Icon \r\n                        name=\"ios-checkmark-circle-outline\" \r\n                        color=\"white\" \r\n                        size={70} \r\n                    />\r\n                    <Text style={styles.subjectText}>\r\n                        {successHeader}\r\n                    </Text>\r\n                    <Text style={styles.messageText}>\r\n                        {successMessage}\r\n                    </Text>\r\n                </View>\r\n            </Overlay>\r\n        )\r\n    } else if (uri !== null) {\r\n        return (\r\n            <Overlay\r\n                isVisible={progressVisible}\r\n                width=\"100%\"\r\n                height=\"100%\"\r\n                overlayStyle={styles.containerOverlay}\r\n            >\r\n                <View>\r\n                    <ImageInfo\r\n                        banner={uri}\r\n                        imageContainer={styles.overlayImage}\r\n                        imageStyle={styles.imageOverlay}\r\n                    />\r\n                    <Button\r\n                        title=\"Retake\"\r\n                        buttonStyle={styles.button}\r\n                        titleStyle={styles.buttonText}\r\n                        onPress={onRetakePress}\r\n                    />\r\n                    <Button\r\n                        title=\"Upload Profile Image\"\r\n                        buttonStyle={styles.completeButton}\r\n                        titleStyle={styles.completeButtonText}\r\n                        onPress={onUploadPress}\r\n                    />\r\n                </View>\r\n            </Overlay>\r\n        )\r\n    } else {\r\n        return (\r\n            <View style={styles.container}>\r\n                <Camera style={styles.container} type={cameraType} ref={cameraConfig}>\r\n                    <View style={styles.cameraContainer}>\r\n                        <View styles={{flexDirection: 'row',justifyContent: 'center',}}>\r\n                            <IconButton\r\n                                iconContainer={styles.iconContainer}\r\n                                iconName='ios-camera'\r\n                                iconSize={48}\r\n                                iconColor='white'\r\n                                onPress={onPress}\r\n                            />\r\n                            <View style={styles.imagePickerIcon}>\r\n                                <IconButton\r\n                                    iconContainer={styles.iconContainer}\r\n                                    iconName='ios-folder-open'\r\n                                    iconSize={38}\r\n                                    iconColor='white'\r\n                                    onPress={selectImage}\r\n                                />\r\n                            </View>\r\n                        </View>\r\n                    </View>   \r\n                </Camera>\r\n            </View>\r\n    );\r\n    }\r\n};\r\n\r\nexport { CameraProfile };"]},"metadata":{},"sourceType":"module"}