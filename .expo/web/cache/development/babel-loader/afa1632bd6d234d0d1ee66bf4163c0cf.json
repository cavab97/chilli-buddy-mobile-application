{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport firebase from \"firebase\";\nimport \"firebase/firestore\";\nimport * as auth from \"../../services/auth\";\nvar type = \"auth\";\nvar actions = {\n  CHECK_AUTHORIZATION: type + \"CHECK_AUTHORIZATION\",\n  LOGIN_REQUEST: type + \"LOGIN_REQUEST\",\n  LOGIN_VERIFICATION_SUCCESS: type + \"LOGIN_VERIFICATION_SUCCESS\",\n  LOGIN_TAC_CONFIRMATION: type + \"LOGIN_TAC_CONFIRMATION\",\n  LOGIN_SUCCESS: type + \"LOGIN_SUCCESS\",\n  LOGIN_ERROR: type + \"LOGIN_ERROR\",\n  SIGNUP_REQUEST: type + \"SIGNUP_REQUEST\",\n  SIGNUP_SUCCESS: type + \"SIGNUP_SUCCESS\",\n  SIGNUP_ERROR: type + \"SIGNUP_ERROR\",\n  LOGOUT: type + \"LOGOUT\",\n  FORGOT_PASSWORD_REQUEST: type + \"FORGOT_PASSWORD_REQUEST\",\n  FORGOT_PASSWORD_SUCCESS: type + \"FORGOT_PASSWORD_SUCCESS\",\n  FORGOT_PASSWORD_ERROR: type + \"FORGOT_PASSWORD_ERROR\",\n  MODAL_CONTROL: type + \"MODAL_CONTROL\",\n  UPDATE: type + \"UPDATE\",\n  BASIC_INFO_UPDATA: type + \"BASIC_INFO_UPDATA\"\n};\nexport var COLLECTION_USERS = \"users\";\nexport var modalControl = function modalControl() {\n  return {\n    type: actions.MODAL_CONTROL\n  };\n};\nexport var update = function update(data) {\n  return {\n    type: actions.UPDATE,\n    payload: {\n      data: data\n    }\n  };\n};\nexport var loginWithPhoneNumber = function loginWithPhoneNumber(_ref) {\n  var phoneNumber = _ref.phoneNumber,\n      recaptchaToken = _ref.recaptchaToken;\n  return function (dispatch) {\n    dispatch({\n      type: actions.LOGIN_REQUEST\n    });\n    return new Promise(function (resolve, reject) {\n      auth.login(auth.providers.PHONE, {\n        phoneNumber: phoneNumber,\n        recaptchaToken: recaptchaToken\n      }).then(function (confirmationResult) {\n        resolve(confirmationResult);\n        dispatch(loginVerificationSuccess({\n          confirmationResult: confirmationResult\n        }));\n      }).catch(function (error) {\n        console.log(error);\n        reject(error);\n        dispatch(loginError({\n          error: error\n        }));\n      });\n    });\n  };\n};\nexport var loginVerificationSuccess = function loginVerificationSuccess(_ref2) {\n  var confirmationResult = _ref2.confirmationResult;\n  return function (dispatch) {\n    dispatch({\n      type: actions.LOGIN_VERIFICATION_SUCCESS,\n      payload: {\n        data: confirmationResult\n      }\n    });\n  };\n};\nexport var loginWithEmail = function loginWithEmail(_ref3) {\n  var email = _ref3.email,\n      password = _ref3.password;\n  return function (dispatch) {\n    dispatch({\n      type: actions.LOGIN_REQUEST\n    });\n    return new Promise(function _callee(resolve, reject) {\n      var _await$auth$login, user;\n\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(auth.login(auth.providers.EMAIL, {\n                email: email,\n                password: password\n              }));\n\n            case 3:\n              _await$auth$login = _context.sent;\n              user = _await$auth$login.user;\n              resolve(user);\n              dispatch(loginSuccess({\n                user: user\n              }));\n              _context.next = 14;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n              reject(_context.t0);\n              dispatch(loginError({\n                error: _context.t0\n              }));\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    });\n  };\n};\nexport var loginTACConfirmation = function loginTACConfirmation(_ref4) {\n  var tac = _ref4.tac;\n  return function (dispatch, getState) {\n    dispatch({\n      type: actions.LOGIN_TAC_CONFIRMATION\n    });\n    return new Promise(function _callee2(resolve, reject) {\n      var confirmationResult, _await$confirmationRe, user;\n\n      return _regeneratorRuntime.async(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              confirmationResult = getState().Auth.loginDetails.confirmationResult;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(confirmationResult.confirm(tac));\n\n            case 4:\n              _await$confirmationRe = _context2.sent;\n              user = _await$confirmationRe.user;\n              resolve(user);\n              dispatch(loginSuccess({\n                user: user\n              }));\n              _context2.next = 15;\n              break;\n\n            case 10:\n              _context2.prev = 10;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n              reject(_context2.t0);\n              dispatch(loginError({\n                error: _context2.t0\n              }));\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, [[0, 10]], Promise);\n    });\n  };\n};\nexport function loginSuccess(_ref5) {\n  var user = _ref5.user;\n  return function (dispatch) {\n    auth.storeUserToLocal(user).catch(function (error) {\n      console.log(error);\n    });\n    dispatch({\n      type: actions.LOGIN_SUCCESS,\n      payload: {\n        user: user\n      }\n    });\n  };\n}\nexport function loginError(_ref6) {\n  var error = _ref6.error;\n  return function (dispatch) {\n    dispatch({\n      type: actions.LOGIN_ERROR,\n      payload: {\n        error: error\n      }\n    });\n  };\n}\nexport var logout = function logout() {\n  return function (dispatch) {\n    auth.removeUserFromLocal().catch(function (error) {\n      console.log(error);\n    });\n    auth.logout();\n    dispatch({\n      type: actions.LOGOUT\n    });\n  };\n};\nexport function checkAuthorization() {\n  return function (dispatch) {\n    dispatch({\n      type: actions.CHECK_AUTHORIZATION\n    });\n    return new Promise(function _callee3(resolve, reject) {\n      var user;\n      return _regeneratorRuntime.async(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(auth.getUserFromLocal());\n\n            case 3:\n              user = _context3.sent;\n\n              if (user) {\n                dispatch(loginSuccess({\n                  user: user\n                }));\n              } else {\n                dispatch(logout());\n              }\n\n              resolve(user);\n              auth.isAuthenticated(function (user) {\n                var isLoggedIn = user !== null;\n\n                if (isLoggedIn) {\n                  dispatch(loginSuccess({\n                    user: user\n                  }));\n                } else {\n                  dispatch(logout());\n                }\n              });\n              _context3.next = 14;\n              break;\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t0 = _context3[\"catch\"](0);\n              dispatch(loginError({\n                error: _context3.t0\n              }));\n              console.log(_context3.t0);\n              reject(_context3.t0);\n\n            case 14:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, null, [[0, 9]], Promise);\n    });\n  };\n}\nexport default actions;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/marslab-library-react-native/redux/auth/actions.js"],"names":["firebase","auth","type","actions","CHECK_AUTHORIZATION","LOGIN_REQUEST","LOGIN_VERIFICATION_SUCCESS","LOGIN_TAC_CONFIRMATION","LOGIN_SUCCESS","LOGIN_ERROR","SIGNUP_REQUEST","SIGNUP_SUCCESS","SIGNUP_ERROR","LOGOUT","FORGOT_PASSWORD_REQUEST","FORGOT_PASSWORD_SUCCESS","FORGOT_PASSWORD_ERROR","MODAL_CONTROL","UPDATE","BASIC_INFO_UPDATA","COLLECTION_USERS","modalControl","update","data","payload","loginWithPhoneNumber","phoneNumber","recaptchaToken","dispatch","Promise","resolve","reject","login","providers","PHONE","then","confirmationResult","loginVerificationSuccess","catch","error","console","log","loginError","loginWithEmail","email","password","EMAIL","user","loginSuccess","loginTACConfirmation","tac","getState","Auth","loginDetails","confirm","storeUserToLocal","logout","removeUserFromLocal","checkAuthorization","getUserFromLocal","isAuthenticated","isLoggedIn"],"mappings":"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","sourcesContent":["import firebase from \"firebase\";\r\nimport \"firebase/firestore\";\r\n\r\nimport * as auth from \"../../services/auth\";\r\n\r\nconst type = \"auth\";\r\n\r\nconst actions = {\r\n  CHECK_AUTHORIZATION: type + \"CHECK_AUTHORIZATION\",\r\n\r\n  LOGIN_REQUEST: type + \"LOGIN_REQUEST\",\r\n  LOGIN_VERIFICATION_SUCCESS: type + \"LOGIN_VERIFICATION_SUCCESS\",\r\n  LOGIN_TAC_CONFIRMATION : type + \"LOGIN_TAC_CONFIRMATION\",\r\n  LOGIN_SUCCESS: type + \"LOGIN_SUCCESS\",\r\n  LOGIN_ERROR: type + \"LOGIN_ERROR\",\r\n\r\n  SIGNUP_REQUEST: type + \"SIGNUP_REQUEST\",\r\n  SIGNUP_SUCCESS: type + \"SIGNUP_SUCCESS\",\r\n  SIGNUP_ERROR: type + \"SIGNUP_ERROR\",\r\n\r\n  LOGOUT: type + \"LOGOUT\",\r\n\r\n  FORGOT_PASSWORD_REQUEST: type + \"FORGOT_PASSWORD_REQUEST\",\r\n  FORGOT_PASSWORD_SUCCESS: type + \"FORGOT_PASSWORD_SUCCESS\",\r\n  FORGOT_PASSWORD_ERROR: type + \"FORGOT_PASSWORD_ERROR\",\r\n\r\n  MODAL_CONTROL: type + \"MODAL_CONTROL\",\r\n  UPDATE: type + \"UPDATE\",\r\n  BASIC_INFO_UPDATA : type + \"BASIC_INFO_UPDATA\",\r\n};\r\n\r\nexport const COLLECTION_USERS = \"users\";\r\n\r\nexport const modalControl = () => {\r\n  return { \r\n    type: actions.MODAL_CONTROL \r\n  };\r\n};\r\n\r\nexport const update = data => {\r\n  return {\r\n    type: actions.UPDATE,\r\n    payload: { data }\r\n  };\r\n};\r\n\r\nexport const loginWithPhoneNumber = ({ phoneNumber, recaptchaToken }) => {\r\n  return dispatch => {\r\n    dispatch({ type: actions.LOGIN_REQUEST });\r\n    return new Promise((resolve, reject) => {\r\n      auth\r\n        .login(auth.providers.PHONE, { phoneNumber, recaptchaToken })\r\n        .then(confirmationResult => {\r\n          resolve(confirmationResult);\r\n          dispatch(loginVerificationSuccess({ confirmationResult }));\r\n        })\r\n        .catch(error => {\r\n          console.log(error);\r\n          reject(error);\r\n          dispatch(loginError({error}));\r\n        });\r\n    });\r\n  };\r\n};\r\n\r\nexport const loginVerificationSuccess = ({confirmationResult}) => {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actions.LOGIN_VERIFICATION_SUCCESS,\r\n      payload: { data: confirmationResult }\r\n    });\r\n  };\r\n};\r\n\r\nexport const loginWithEmail = ({ email, password }) => {\r\n  return dispatch => {\r\n    dispatch({ type: actions.LOGIN_REQUEST });\r\n    return new Promise(async (resolve, reject) => {\r\n      try{\r\n        const {user} = await auth.login(auth.providers.EMAIL, { email, password })\r\n        resolve(user)\r\n        dispatch(loginSuccess({ user }));\r\n      }catch(error){\r\n        console.log(error)\r\n        reject(error)\r\n        dispatch(loginError({ error }));\r\n      }\r\n    });\r\n  };\r\n};\r\n\r\nexport const loginTACConfirmation = ({tac})=>{\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: actions.LOGIN_TAC_CONFIRMATION });\r\n    return new Promise(async (resolve, reject) => {\r\n      try{\r\n        const { confirmationResult } = getState().Auth.loginDetails\r\n        const {user} = await confirmationResult.confirm(tac)\r\n        resolve(user)\r\n        dispatch(loginSuccess({ user }));\r\n      }catch(error){\r\n        console.log(error)\r\n        reject(error)\r\n        dispatch(loginError({ error }));\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport function loginSuccess({ user }) {\r\n  return dispatch => {\r\n    auth.storeUserToLocal(user).catch((error)=>{\r\n      console.log(error)\r\n    });\r\n    dispatch({\r\n      type: actions.LOGIN_SUCCESS,\r\n      payload: { user }\r\n    });\r\n  };\r\n}\r\n\r\nexport function loginError({ error }) {\r\n  return dispatch => {\r\n    dispatch({\r\n      type: actions.LOGIN_ERROR,\r\n      payload: { error }\r\n    });\r\n  };\r\n}\r\n\r\nexport const logout = () => {\r\n  return dispatch => {\r\n    auth.removeUserFromLocal().catch((error)=>{\r\n      console.log(error)\r\n    });\r\n    auth.logout();\r\n    dispatch({ type: actions.LOGOUT });\r\n  };\r\n};\r\n\r\nexport function checkAuthorization() {\r\n  return dispatch => {\r\n    dispatch({ type: actions.CHECK_AUTHORIZATION });\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        let user = await auth.getUserFromLocal();\r\n        if (user) {\r\n          dispatch(loginSuccess({user}));\r\n        } else {\r\n          dispatch(logout());\r\n        }\r\n        resolve(user);\r\n        auth.isAuthenticated(user => {\r\n          let isLoggedIn = user !== null;\r\n          if (isLoggedIn) {\r\n            dispatch(loginSuccess({user}));\r\n          } else {\r\n            dispatch(logout());\r\n          }\r\n        });\r\n      } catch (error) {\r\n        dispatch(loginError({error}));\r\n        console.log(error);\r\n        reject(error);\r\n      }\r\n    });\r\n  };\r\n}\r\n\r\nexport default actions;\r\n"]},"metadata":{},"sourceType":"module"}