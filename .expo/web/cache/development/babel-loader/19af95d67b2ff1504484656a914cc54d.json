{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\src\\\\components\\\\templates\\\\UserProfile\\\\notification.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { View, Text, Icon, FlatList, TouchableOpacity, VirtualizedList } from \"../../../marslab-library-react-native/components/atoms\";\nimport { Card, CardSection } from \"../../../marslab-library-react-native/components/molecules\";\nimport { Button } from \"../atoms/\";\nimport styles from \"./styles\";\nimport { Colors } from \"../../../settings/styles/theme\";\nimport ContentLoader, { Rect } from 'react-content-loader/native';\nimport clone from \"clone\";\nvar DATA = [];\n\nvar NotificationListItem = function NotificationListItem(_ref) {\n  var item = _ref.item,\n      _ref$onPress = _ref.onPress,\n      _onPress = _ref$onPress === void 0 ? function () {} : _ref$onPress;\n\n  var title = item.title,\n      body = item.body,\n      timeCount = item.timeCount;\n  return React.createElement(Card, {\n    style: styles.cardContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableOpacity, {\n    onPress: function onPress() {\n      return _onPress(item);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, React.createElement(CardSection, {\n    style: [styles.cardSectionStyle, styles.titleCardSectionStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.titleFont,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 11\n    }\n  }, title), React.createElement(Text, {\n    style: styles.timeCountStyle,\n    numberOfLines: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 11\n    }\n  }, timeCount)), React.createElement(CardSection, {\n    style: [styles.cardSectionStyle, styles.buttonCardSectionStyle],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.descriptionStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 11\n    }\n  }, body), React.createElement(View, {\n    style: styles.iconStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 11\n    }\n  }, React.createElement(Icon, {\n    name: \"check-circle\",\n    type: \"feather\",\n    color: Colors.PRIMARY,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  })))));\n};\n\nexport var Notification = function (_Component) {\n  _inherits(Notification, _Component);\n\n  var _super = _createSuper(Notification);\n\n  function Notification(props) {\n    var _this;\n\n    _classCallCheck(this, Notification);\n\n    _this = _super.call(this, props);\n\n    _this.getItemCount = function (data) {\n      return 1;\n    };\n\n    _this.getItem = function (data, index) {\n      return {\n        key: \"notificationLoading\" + index\n      };\n    };\n\n    return _this;\n  }\n\n  _createClass(Notification, [{\n    key: \"onClaimPress\",\n    value: function onClaimPress() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          readLoading = _this$props.readLoading,\n          _this$props$onPress = _this$props.onPress,\n          onPress = _this$props$onPress === void 0 ? function () {} : _this$props$onPress;\n\n      var _clone = clone(this.props),\n          dataSource = _clone.dataSource;\n\n      dataSource = dataSource.map(function (data) {\n        var timeCount = data.created.at.fromNow();\n        return _objectSpread({}, data, {\n          timeCount: timeCount\n        });\n      });\n\n      if (readLoading) {\n        return React.createElement(VirtualizedList, {\n          data: DATA,\n          renderItem: function renderItem(data) {\n            return React.createElement(Card, {\n              style: styles.cardContainer,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 15\n              }\n            }, React.createElement(ContentLoader, {\n              speed: 1,\n              width: \"100%\",\n              height: 80,\n              backgroundColor: \"#d9d9d9\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 17\n              }\n            }, React.createElement(Rect, {\n              x: \"10\",\n              y: \"10\",\n              rx: \"4\",\n              ry: \"4\",\n              width: \"70%\",\n              height: \"30\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 19\n              }\n            }), React.createElement(Rect, {\n              x: \"80%\",\n              y: \"30\",\n              rx: \"4\",\n              ry: \"4\",\n              width: \"17%\",\n              height: \"12\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }\n            }), React.createElement(Rect, {\n              x: \"10\",\n              y: \"50\",\n              rx: \"4\",\n              ry: \"4\",\n              width: \"50%\",\n              height: \"12\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }\n            }), React.createElement(Rect, {\n              x: \"85%\",\n              y: \"50\",\n              rx: \"4\",\n              ry: \"4\",\n              width: \"25\",\n              height: \"25\",\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 19\n              }\n            })));\n          },\n          initialNumToRender: 1,\n          keyExtractor: function keyExtractor(item) {\n            return item.key;\n          },\n          getItemCount: function getItemCount() {\n            return 1;\n          },\n          getItem: this.getItem.bind(this),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 9\n          }\n        });\n      } else return React.createElement(View, {\n        style: styles.scrollBox,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 7\n        }\n      }, React.createElement(FlatList, {\n        data: dataSource,\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(NotificationListItem, {\n            item: item,\n            onPress: onPress,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 11\n            }\n          });\n        },\n        keyExtractor: function keyExtractor(item) {\n          return item.id;\n        },\n        ListFooterComponentStyle: {\n          flex: 1,\n          paddingBottom: 30,\n          justifyContent: 'flex-end'\n        },\n        ListFooterComponent: React.createElement(View, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 30\n          }\n        }),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 7\n        }\n      }));\n    }\n  }]);\n\n  return Notification;\n}(Component);\nexport default Notification;","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/components/templates/UserProfile/notification.js"],"names":["React","Component","View","Text","Icon","FlatList","TouchableOpacity","VirtualizedList","Card","CardSection","Button","styles","Colors","ContentLoader","Rect","clone","DATA","NotificationListItem","item","onPress","title","body","timeCount","cardContainer","cardSectionStyle","titleCardSectionStyle","titleFont","timeCountStyle","buttonCardSectionStyle","descriptionStyle","iconStyle","PRIMARY","Notification","props","getItemCount","data","getItem","index","key","readLoading","dataSource","map","created","at","fromNow","bind","scrollBox","id","flex","paddingBottom","justifyContent"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Icon,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  VirtualizedList\r\n} from \"../../../marslab-library-react-native/components/atoms\";\r\nimport {\r\n  Card,\r\n  CardSection,\r\n} from \"../../../marslab-library-react-native/components/molecules\";\r\nimport { Button } from \"../atoms/\";\r\nimport styles from \"./styles\";\r\nimport { Colors } from \"../../../settings/styles/theme\";\r\nimport ContentLoader, { Rect } from 'react-content-loader/native';\r\n\r\nimport clone from \"clone\";\r\n\r\nconst DATA = [];\r\n\r\nconst NotificationListItem = ({ item, onPress = () => {} }) => {\r\n  const { title, body, timeCount } = item;\r\n\r\n  return (\r\n    <Card style={styles.cardContainer}>\r\n      <TouchableOpacity onPress={() => onPress(item)}>\r\n        <CardSection\r\n          style={[styles.cardSectionStyle, styles.titleCardSectionStyle]}\r\n        >\r\n          <Text style={styles.titleFont}>{title}</Text>\r\n          <Text style={styles.timeCountStyle} numberOfLines={1}>{timeCount}</Text>\r\n        </CardSection>\r\n        <CardSection\r\n          style={[styles.cardSectionStyle, styles.buttonCardSectionStyle]}\r\n        >\r\n          <Text style={styles.descriptionStyle}>{body}</Text>\r\n          <View style={styles.iconStyle}>\r\n            <Icon name=\"check-circle\" type=\"feather\" color={Colors.PRIMARY} />\r\n          </View>\r\n        </CardSection>\r\n      </TouchableOpacity>\r\n    </Card>\r\n  );\r\n};\r\n\r\n\r\n\r\nexport class Notification extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  onClaimPress() {}\r\n\r\n  //   cardReward = (timeCount, description) => {\r\n  //     return (\r\n  //       <Card style={styles.cardContainer}>\r\n  //         <CardSection\r\n  //           style={[styles.cardSectionStyle, styles.titleCardSectionStyle]}\r\n  //         >\r\n  //           <Text style={styles.titleFont}>Congratulation!</Text>\r\n  //           <Text style={styles.timeCountStyle}>{timeCount}</Text>\r\n  //         </CardSection>\r\n  //         <CardSection\r\n  //           style={[styles.cardSectionStyle, styles.descripCardSectionStyle]}\r\n  //         >\r\n  //           <Text style={styles.descriptionStyle}>{description}</Text>\r\n  //         </CardSection>\r\n  //         <CardSection\r\n  //           style={[styles.cardSectionStyle, styles.buttonCardSectionStyle]}\r\n  //         >\r\n  //           <Button\r\n  //             onPress={() => this.onClaimPress()}\r\n  //             containerStyle={styles.buttonStyle}\r\n  //           >\r\n  //             CLAIM\r\n  //           </Button>\r\n  //         </CardSection>\r\n  //       </Card>\r\n  //     );\r\n  //   };\r\n\r\n  //   cardClaimed = (timeCount, description) => {\r\n  //     return (\r\n  //       <Card style={styles.cardContainer}>\r\n  //         <CardSection\r\n  //           style={[styles.cardSectionStyle, styles.titleCardSectionStyle]}\r\n  //         >\r\n  //           <Text style={styles.titleFont}>Reward Claimed!</Text>\r\n  //           <Text style={styles.timeCountStyle}>{timeCount}</Text>\r\n  //         </CardSection>\r\n  //         <CardSection\r\n  //           style={[styles.cardSectionStyle, styles.buttonCardSectionStyle]}\r\n  //         >\r\n  //           <Text style={styles.descriptionStyle}>{description}</Text>\r\n  //           <View style={styles.iconStyle}>\r\n  //             <Icon name=\"check-circle\" type=\"feather\" color={Colors.PRIMARY} />\r\n  //           </View>\r\n  //         </CardSection>\r\n  //       </Card>\r\n  //     );\r\n  //   };\r\n\r\n  getItemCount = (data) => {\r\n    return 1;\r\n  }\r\n  \r\n  getItem = (data, index) => {\r\n    return {\r\n      key: \"notificationLoading\" + index,\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { readLoading, onPress = ()=>{} } = this.props;\r\n    let { dataSource } = clone(this.props);\r\n\r\n    dataSource = dataSource.map((data) => {\r\n      const timeCount = data.created.at.fromNow();\r\n      return { ...data, timeCount };\r\n    });\r\n\r\n    if(readLoading){\r\n      return(\r\n        <VirtualizedList\r\n          data={DATA}\r\n          renderItem={(data) => {\r\n            return (\r\n              <Card style={styles.cardContainer}>\r\n                <ContentLoader\r\n                  speed={1}\r\n                  width={\"100%\"}\r\n                  height={80}\r\n                  backgroundColor= \"#d9d9d9\"\r\n                >\r\n                  <Rect x=\"10\" y=\"10\" rx=\"4\" ry=\"4\" width=\"70%\" height=\"30\"/>\r\n                  <Rect x=\"80%\" y=\"30\" rx=\"4\" ry=\"4\" width=\"17%\" height=\"12\"/>\r\n                  <Rect x=\"10\" y=\"50\" rx=\"4\" ry=\"4\" width=\"50%\" height=\"12\"/>\r\n                  <Rect x=\"85%\" y=\"50\" rx=\"4\" ry=\"4\" width=\"25\" height=\"25\"/>\r\n                </ContentLoader>\r\n              </Card>\r\n            );\r\n          }}\r\n          initialNumToRender={1}\r\n          keyExtractor={item => item.key}\r\n          getItemCount={() => {return 1}}\r\n          getItem={this.getItem.bind(this)}\r\n        />\r\n      );\r\n\r\n    }\r\n    else return (\r\n      <View style={styles.scrollBox}>\r\n      <FlatList\r\n        data={dataSource}\r\n        renderItem={({ item }) => (\r\n          <NotificationListItem item={item} onPress={onPress} />\r\n        )}\r\n        keyExtractor={(item) => item.id}\r\n        ListFooterComponentStyle={{flex:1, paddingBottom: 30, justifyContent: 'flex-end'}}\r\n        ListFooterComponent={<View/>}\r\n      />\r\n      </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Notification;\r\n"]},"metadata":{},"sourceType":"module"}