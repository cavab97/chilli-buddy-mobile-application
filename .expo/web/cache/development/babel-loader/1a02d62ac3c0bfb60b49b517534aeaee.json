{"ast":null,"code":"import { storage } from \"firebase\";\nimport firebase from \"firebase\";\nimport { api } from \"../../../settings\";\nimport { convertFileToBlob } from \"../../common\";\nimport uuid from 'uuid/v4';\nvar firebaseConfig = api.firebaseConfig;\nvar firebaseApp = !firebase.apps.length && firebase.initializeApp(firebaseConfig);\nexport function uploadFile(_ref) {\n  var ref = _ref.ref,\n      name = _ref.name,\n      file = _ref.file,\n      _ref$progressListener = _ref.progressListener,\n      progressListener = _ref$progressListener === void 0 ? null : _ref$progressListener,\n      _ref$metadata = _ref.metadata,\n      metadata = _ref$metadata === void 0 ? null : _ref$metadata;\n  return new Promise(function (resolve, reject) {\n    if (!name) name = file.name;\n    var fileRef = storage().ref().child(ref + \"/\" + uuid() + name);\n    var uploadTask = fileRef.put(file, metadata);\n    uploadTask.on(\"state_changed\", progressListener, function (error) {\n      reject(error);\n    }, function () {\n      fileRef.getDownloadURL().then(function (url) {\n        resolve({\n          url: url\n        });\n      });\n    });\n  });\n}","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/marslab-library-react-native/utils/helper/storage/firebaseStorage.js"],"names":["storage","firebase","api","convertFileToBlob","uuid","firebaseConfig","firebaseApp","apps","length","initializeApp","uploadFile","ref","name","file","progressListener","metadata","Promise","resolve","reject","fileRef","child","uploadTask","put","on","error","getDownloadURL","then","url"],"mappings":"AAAA,SAASA,OAAT,QAAwB,UAAxB;AACA,OAAOC,QAAP,MAAqB,UAArB;AAEA,SAASC,GAAT;AACA,SAASC,iBAAT;AACA,OAAOC,IAAP,MAAiB,SAAjB;IAGQC,c,GAAmBH,G,CAAnBG,c;AAER,IAAMC,WAAW,GACf,CAACL,QAAQ,CAACM,IAAT,CAAcC,MAAf,IAAyBP,QAAQ,CAACQ,aAAT,CAAuBJ,cAAvB,CAD3B;AAGA,OAAO,SAASK,UAAT,OAAmF;AAAA,MAA7DC,GAA6D,QAA7DA,GAA6D;AAAA,MAAxDC,IAAwD,QAAxDA,IAAwD;AAAA,MAAlDC,IAAkD,QAAlDA,IAAkD;AAAA,mCAA5CC,gBAA4C;AAAA,MAA5CA,gBAA4C,sCAAzB,IAAyB;AAAA,2BAAnBC,QAAmB;AAAA,MAAnBA,QAAmB,8BAAR,IAAQ;AAExF,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAI,CAACN,IAAL,EAAWA,IAAI,GAAGC,IAAI,CAACD,IAAZ;AAEX,QAAMO,OAAO,GAAGnB,OAAO,GAAGW,GAAV,GAAgBS,KAAhB,CAAyBT,GAAzB,SAAgCP,IAAI,EAApC,GAAyCQ,IAAzC,CAAhB;AAEA,QAAMS,UAAU,GAAGF,OAAO,CAACG,GAAR,CAAYT,IAAZ,EAAkBE,QAAlB,CAAnB;AAEAM,IAAAA,UAAU,CAACE,EAAX,CACE,eADF,EAEET,gBAFF,EAGE,UAAAU,KAAK,EAAI;AACPN,MAAAA,MAAM,CAACM,KAAD,CAAN;AACD,KALH,EAME,YAAM;AAEJL,MAAAA,OAAO,CACJM,cADH,GAEGC,IAFH,CAEQ,UAAAC,GAAG,EAAI;AACXV,QAAAA,OAAO,CAAC;AAACU,UAAAA,GAAG,EAAHA;AAAD,SAAD,CAAP;AACD,OAJH;AAKD,KAbH;AAeD,GAtBM,CAAP;AAuBD","sourcesContent":["import { storage } from \"firebase\";\r\nimport firebase from \"firebase\";\r\n\r\nimport { api } from \"../../../settings\";\r\nimport { convertFileToBlob } from \"../../common\";\r\nimport uuid from 'uuid/v4'\r\n\r\n\r\nconst { firebaseConfig } = api;\r\n\r\nconst firebaseApp =\r\n  !firebase.apps.length && firebase.initializeApp(firebaseConfig);\r\n\r\nexport function uploadFile({ ref, name, file, progressListener = null, metadata = null }) {\r\n\r\n  return new Promise((resolve, reject) => {\r\n    if (!name) name = file.name;\r\n\r\n    const fileRef = storage().ref().child(`${ref}/${uuid()}${name}`);\r\n\r\n    const uploadTask = fileRef.put(file, metadata);\r\n\r\n    uploadTask.on(\r\n      \"state_changed\",\r\n      progressListener,\r\n      error => {\r\n        reject(error)\r\n      },\r\n      () => {\r\n        // complete function ...\r\n        fileRef\r\n          .getDownloadURL()\r\n          .then(url => {\r\n            resolve({url})\r\n          });\r\n      }\r\n    );\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}