{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\screens\\\\subscreen\\\\payment\\\\CameraReceipt\\\\index.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport { PaymentCameraReceipt } from \"@components/templates\";\nimport { Camera } from 'expo-camera';\nimport * as Permissions from 'expo-permissions';\nimport * as FileSystem from 'expo-file-system';\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this.handleCameraType = function () {\n      var cameraType = _this.state.cameraType;\n\n      _this.setState({\n        cameraType: cameraType === Camera.Constants.Type.back ? Camera.Constants.Type.front : Camera.Constants.Type.back\n      });\n    };\n\n    _this.takePicture = function _callee() {\n      var photo;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!_this.camera) {\n                _context.next = 7;\n                break;\n              }\n\n              _this.setState({\n                takePictureLoading: true\n              });\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.camera.takePictureAsync({\n                quality: 1,\n                skipProcessing: true\n              }));\n\n            case 4:\n              photo = _context.sent;\n\n              _this.setState({\n                takePictureLoading: false\n              });\n\n              Actions.replace(\"SubmitReceipt\", {\n                uri: photo.uri,\n                mission: _this.props.mission,\n                value: _this.props.value,\n                routeId: _this.props.routeId\n              });\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    };\n\n    _this.handleRef = function (ref) {\n      _this.camera = ref;\n    };\n\n    _this.state = {\n      hasPermission: null,\n      type: Camera.Constants.Type.back,\n      uri: null,\n      takePictureLoading: false\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _await$Permissions$as, status;\n\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(Permissions.askAsync(Permissions.CAMERA));\n\n            case 2:\n              _await$Permissions$as = _context2.sent;\n              status = _await$Permissions$as.status;\n              this.setState({\n                hasPermission: status === 'granted'\n              });\n\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, null, Promise);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {}\n  }, {\n    key: \"render\",\n    value: function render() {\n      var hasPermission = this.state.hasPermission;\n      return React.createElement(PaymentCameraReceipt, {\n        hasPermission: hasPermission,\n        cameraType: this.state.cameraType,\n        cameraConfig: this.handleRef.bind(this),\n        onPress: this.takePicture.bind(this),\n        takePictureLoading: this.state.takePictureLoading,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nexport default connect(null, {})(index);","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/screens/subscreen/payment/CameraReceipt/index.js"],"names":["React","Component","connect","Actions","PaymentCameraReceipt","Camera","Permissions","FileSystem","styles","index","props","handleCameraType","cameraType","state","setState","Constants","Type","back","front","takePicture","camera","takePictureLoading","takePictureAsync","quality","skipProcessing","photo","replace","uri","mission","value","routeId","handleRef","ref","hasPermission","type","askAsync","CAMERA","status","bind"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { PaymentCameraReceipt } from \"@components/templates\";\r\nimport { Camera } from 'expo-camera';\r\nimport * as Permissions from 'expo-permissions';\r\nimport * as FileSystem from 'expo-file-system';\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasPermission: null,\r\n            type: Camera.Constants.Type.back,\r\n            uri: null,\r\n            takePictureLoading: false,\r\n        };\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const { status } = await Permissions.askAsync(Permissions.CAMERA);\r\n        this.setState({ hasPermission: status === 'granted' });\r\n    }\r\n\r\n    componentWillUnmount(){\r\n\r\n    }\r\n\r\n    handleCameraType = () => { \r\n        const { cameraType } = this.state\r\n    \r\n        this.setState({cameraType:\r\n            cameraType === Camera.Constants.Type.back\r\n            ? Camera.Constants.Type.front\r\n            : Camera.Constants.Type.back\r\n        })\r\n    }\r\n\r\n    takePicture = async () => {\r\n        if (this.camera) {\r\n            //const options = { base64: true };\r\n            this.setState({takePictureLoading: true});\r\n            let photo = await this.camera.takePictureAsync({ quality: 1, skipProcessing: true });\r\n\r\n            /* FileSystem.makeDirectoryAsync({\r\n                from: photo.uri,\r\n                to: `${FileSystem.documentDirectory}photos/Photo_test.jpg`\r\n            });  */\r\n\r\n            //let newPhoto = FileSystem.documentDirectory + 'photos/Photo_test.jpg';\r\n\r\n           // console.log(photo.uri)\r\n            //this.setState({uri: photo.base64});\r\n            this.setState({takePictureLoading: false});\r\n            Actions.replace(\"SubmitReceipt\",{ \r\n                uri: photo.uri,\r\n                mission: this.props.mission,\r\n                value: this.props.value,\r\n                routeId: this.props.routeId\r\n            });\r\n        }\r\n    }\r\n\r\n    handleRef = (ref) => {\r\n        this.camera = ref\r\n    }\r\n\r\n    render() {\r\n        const { hasPermission } = this.state;\r\n\r\n        return (\r\n            <PaymentCameraReceipt\r\n                hasPermission={hasPermission}\r\n                cameraType={this.state.cameraType}\r\n                cameraConfig={this.handleRef.bind(this)}\r\n                onPress={this.takePicture.bind(this)}\r\n                takePictureLoading={this.state.takePictureLoading}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(null, { })(index);\r\n"]},"metadata":{},"sourceType":"module"}