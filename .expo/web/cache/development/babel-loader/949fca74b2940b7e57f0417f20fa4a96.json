{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\src\\\\screens\\\\auth\\\\UserForm\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view';\nimport { Text, View, ScrollView, TouchableWithoutFeedBack, ModalSelector, RefreshControl, TouchableOpacity, CustomIcon } from \"../../../marslab-library-react-native/components/atoms\";\nimport { InputTextField, ImageInfo } from \"../../../marslab-library-react-native/components/molecules\";\nimport { SignoutButton } from \"../../../components/templates/atoms\";\nimport { Colors } from \"../../../settings/styles/theme\";\nimport { connect } from \"react-redux\";\nimport { update, readFromDatabase, submitToBackend } from \"../../../marslab-library-react-native/redux/user/action\";\nimport { Actions } from \"react-native-router-flux\";\nimport styles from \"./styles\";\nvar emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\nexport var Index = function (_Component) {\n  _inherits(Index, _Component);\n\n  var _super = _createSuper(Index);\n\n  function Index(props) {\n    var _this;\n\n    _classCallCheck(this, Index);\n\n    _this = _super.call(this, props);\n\n    _this.onRecordChange = function (_ref, value) {\n      var key = _ref.key,\n          nestedKey = _ref.nestedKey;\n      var user = _this.props.user;\n\n      _this.setState({\n        user: user\n      });\n\n      if (key && nestedKey) user[key][nestedKey] = value;else if (key) user[key] = value;\n\n      _this.props.update(user);\n    };\n\n    _this.onSelectChange = function (_ref2, value) {\n      var key = _ref2.key,\n          nestedKey = _ref2.nestedKey;\n      var user = _this.props.user;\n\n      _this.setState({\n        user: user\n      });\n\n      if (key && nestedKey) user[key][nestedKey] = value;else if (key) user[key] = value;\n\n      _this.props.update(user);\n    };\n\n    _this.infoListSection = function (title, detail, onChangeText, required) {\n      return React.createElement(View, {\n        style: styles.infoDetailSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: styles.infoTitleStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 17\n        }\n      }, title, required && React.createElement(Text, {\n        style: {\n          color: \"red\",\n          fontFamily: \"RobotoRegular\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 25\n        }\n      }, \" *\")), React.createElement(InputTextField, {\n        placeholderText: title,\n        placeholderTextColor: \"#CCCCCC\",\n        inputStyle: styles.inputTextStyle,\n        value: detail,\n        onChangeText: onChangeText,\n        keyboardType: title === 'IC Number' ? \"numeric\" : title === 'Email' ? \"email-address\" : \"default\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 17\n        }\n      }));\n    };\n\n    _this.state = {\n      error: null,\n      message: null,\n      triggerLoading: null,\n      emailErrorMessage: null,\n      icErrorMessage: null,\n      nameErrorMessage: null,\n      photo: null\n    };\n    _this.onSubmit = _this.onSubmit.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.readFromDatabase();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      if (this.props.submitInfoError.message !== prevProps.submitInfoError.message && this.props.submitInfoError.message) {\n        this.setState({\n          error: true,\n          message: this.props.submitInfoError.message,\n          triggerLoading: null\n        });\n      }\n\n      if (this.props.submitInfoResult.message !== prevProps.submitInfoResult.message && this.props.submitInfoResult.message) {\n        this.setState({\n          message: this.props.submitInfoResult.message,\n          error: false,\n          triggerLoading: null\n        });\n        setTimeout(function () {\n          Actions.Profile();\n        }, 2000);\n      }\n    }\n  }, {\n    key: \"onSubmit\",\n    value: function onSubmit() {\n      var user = this.props.user;\n\n      if (!emailPattern.test(user.email) && user.email.length > 0) {\n        this.setState({\n          emailErrorMessage: \" (Email format is incorrect)\"\n        });\n      } else {\n        this.props.submitToBackend(user, \"updateProfile\");\n        this.setState({\n          triggerLoading: true\n        });\n      }\n    }\n  }, {\n    key: \"onChangeImagePressed\",\n    value: function onChangeImagePressed() {\n      Actions.CameraProfile();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          user = _this$props.user,\n          readLoading = _this$props.readLoading,\n          readError = _this$props.readError;\n      var displayName = user.displayName,\n          gender = user.gender,\n          email = user.email,\n          address = user.address,\n          identityNumber = user.identityNumber,\n          photoURL = user.photoURL;\n      var genderOption = [\"Male\", \"Female\"];\n\n      var countriesList = require(\"../../../assets/address/countries.json\");\n\n      var statesList = require(\"../../../assets/address/Malaysia/states.json\");\n\n      return React.createElement(KeyboardAwareScrollView, {\n        enableOnAndroid: true,\n        keyboardShouldPersistTaps: \"handled\",\n        extraHeight: Platform.OS === 'ios' ? 100 : 250,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 17\n        }\n      }, React.createElement(ScrollView, {\n        showsVerticalScrollIndicator: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 22\n        }\n      }, React.createElement(TouchableWithoutFeedBack, {\n        onPress: Keyboard.dismiss,\n        accessible: false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 25\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: styles.ProfileContatiner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 33\n        }\n      }, React.createElement(View, {\n        style: styles.ProfileImageStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 212,\n          columnNumber: 37\n        }\n      }, React.createElement(ImageInfo, {\n        banner: photoURL ? photoURL : require(\"../../../assets/DefaultAvatar.jpg\"),\n        imageContainer: styles.ProfileImageStyle,\n        imageStyle: styles.image,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 41\n        }\n      })), React.createElement(TouchableOpacity, {\n        onPress: this.onChangeImagePressed.bind(this),\n        style: styles.UploadImageButton,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 37\n        }\n      }, React.createElement(CustomIcon, {\n        name: \"camera\",\n        color: Colors.PRIMARY,\n        size: 14,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 41\n        }\n      }))), React.createElement(View, {\n        style: styles.BodyContatiner,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 33\n        }\n      }, this.infoListSection(\"Name\", displayName, this.onRecordChange.bind(this, {\n        key: \"displayName\"\n      }), true), this.infoListSection(\"IC Number\" + (this.state.icErrorMessage ? this.state.icErrorMessage : ''), identityNumber, this.onRecordChange.bind(this, {\n        key: \"identityNumber\"\n      }), true), React.createElement(View, {\n        style: styles.infoDetailSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 37\n        }\n      }, React.createElement(Text, {\n        style: styles.infoTitleStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 41\n        }\n      }, \"Gender\"), React.createElement(ModalSelector, {\n        style: styles.genderButtonContainerStyle,\n        data: genderOption,\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        },\n        labelExtractor: function labelExtractor(item) {\n          return item;\n        },\n        onChange: this.onSelectChange.bind(this, {\n          key: \"gender\"\n        }),\n        selectedKey: gender,\n        initValue: \"Gender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 41\n        }\n      })), this.infoListSection(\"Email\" + (this.state.emailErrorMessage ? this.state.emailErrorMessage : ''), email, this.onRecordChange.bind(this, {\n        key: \"email\"\n      }), true), React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 37\n        }\n      }, React.createElement(View, {\n        style: styles.infoDetailSection,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 41\n        }\n      }, React.createElement(Text, {\n        style: styles.infoTitleStyle,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290,\n          columnNumber: 45\n        }\n      }, \"Address\"), React.createElement(InputTextField, {\n        placeholderText: \"Line 1\",\n        placeholderTextColor: \"#CCCCCC\",\n        inputStyle: styles.inputTextStyle,\n        onChangeText: this.onRecordChange.bind(this, {\n          key: \"address\",\n          nestedKey: \"line1\"\n        }),\n        value: address.line1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 293,\n          columnNumber: 45\n        }\n      }), React.createElement(InputTextField, {\n        placeholderText: \"Line 2\",\n        placeholderTextColor: \"#CCCCCC\",\n        inputStyle: styles.inputTextStyle,\n        onChangeText: this.onRecordChange.bind(this, {\n          key: \"address\",\n          nestedKey: \"line2\"\n        }),\n        value: address.line2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 45\n        }\n      }), React.createElement(View, {\n        style: styles.addressContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 45\n        }\n      }, React.createElement(View, {\n        style: styles.fixContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320,\n          columnNumber: 41\n        }\n      }, React.createElement(InputTextField, {\n        placeholderText: \"Postcode\",\n        placeholderTextColor: \"#CCCCCC\",\n        inputStyle: styles.inputTextStyle,\n        onChangeText: this.onRecordChange.bind(this, {\n          key: \"address\",\n          nestedKey: \"postcode\"\n        }),\n        value: address.postcode,\n        keyboardType: \"numeric\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 45\n        }\n      })), React.createElement(View, {\n        style: styles.fixContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 336,\n          columnNumber: 41\n        }\n      }, React.createElement(ModalSelector, {\n        style: styles.buttonContainerStyle,\n        data: statesList,\n        keyExtractor: function keyExtractor(item) {\n          return item;\n        },\n        labelExtractor: function labelExtractor(item) {\n          return item;\n        },\n        onChange: this.onSelectChange.bind(this, {\n          key: \"address\",\n          nestedKey: \"state\"\n        }),\n        selectedKey: address.state,\n        initValue: \"State\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 337,\n          columnNumber: 45\n        }\n      })), React.createElement(View, {\n        style: styles.fixContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353,\n          columnNumber: 41\n        }\n      }, React.createElement(ModalSelector, {\n        style: styles.buttonContainerStyle,\n        data: countriesList,\n        keyExtractor: function keyExtractor(item) {\n          return item.country;\n        },\n        labelExtractor: function labelExtractor(item) {\n          return item.country;\n        },\n        onChange: function onChange(value) {\n          return _this2.onSelectChange({\n            key: \"address\",\n            nestedKey: \"country\"\n          }, value.country);\n        },\n        selectedKey: address.country,\n        initValue: \"Country\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 354,\n          columnNumber: 45\n        }\n      }))))), this.state.message && this.state.error === false && React.createElement(Text, {\n        style: {\n          paddingLeft: 20,\n          color: Colors.PRIMARY,\n          paddingBottom: 5,\n          fontFamily: \"RobotoRegular\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380,\n          columnNumber: 41\n        }\n      }, \"Successful update information\"), this.state.message && this.state.error === true && React.createElement(Text, {\n        style: {\n          paddingLeft: 20,\n          color: Colors.PRIMARY,\n          paddingBottom: 5,\n          fontFamily: \"RobotoRegular\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385,\n          columnNumber: 41\n        }\n      }, this.state.message), React.createElement(SignoutButton, {\n        containerStyle: styles.saveContainerStyle,\n        textStyle: styles.saveTextStyle,\n        onPress: this.onSubmit,\n        loading: this.state.triggerLoading ? true : false,\n        disabled: this.state.triggerLoading ? true : false,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389,\n          columnNumber: 37\n        }\n      }, \"Save Changes\"))))));\n    }\n  }]);\n\n  return Index;\n}(Component);\n\nvar mapStatetoprops = function mapStatetoprops(state) {\n  var user = state.User.user;\n  var submitInfoResult = state.User.submitResult;\n  var submitInfoLoading = state.User.submitLoading;\n  var submitInfoError = state.User.submitError;\n  return {\n    user: user,\n    submitInfoResult: submitInfoResult,\n    submitInfoLoading: submitInfoLoading,\n    submitInfoError: submitInfoError\n  };\n};\n\nexport default connect(mapStatetoprops, {\n  update: update,\n  readFromDatabase: readFromDatabase,\n  submitToBackend: submitToBackend\n})(Index);","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/screens/auth/UserForm/index.js"],"names":["React","Component","KeyboardAwareScrollView","Text","View","ScrollView","TouchableWithoutFeedBack","ModalSelector","RefreshControl","TouchableOpacity","CustomIcon","InputTextField","ImageInfo","SignoutButton","Colors","connect","update","readFromDatabase","submitToBackend","Actions","styles","emailPattern","Index","props","onRecordChange","value","key","nestedKey","user","setState","onSelectChange","infoListSection","title","detail","onChangeText","required","infoDetailSection","infoTitleStyle","color","fontFamily","inputTextStyle","state","error","message","triggerLoading","emailErrorMessage","icErrorMessage","nameErrorMessage","photo","onSubmit","bind","prevProps","prevState","submitInfoError","submitInfoResult","setTimeout","Profile","test","email","length","CameraProfile","readLoading","readError","displayName","gender","address","identityNumber","photoURL","genderOption","countriesList","require","statesList","Platform","OS","Keyboard","dismiss","ProfileContatiner","ProfileImageStyle","image","onChangeImagePressed","UploadImageButton","PRIMARY","BodyContatiner","genderButtonContainerStyle","item","line1","line2","addressContainer","fixContainer","postcode","buttonContainerStyle","country","paddingLeft","paddingBottom","saveContainerStyle","saveTextStyle","mapStatetoprops","User","submitResult","submitInfoLoading","submitLoading","submitError"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Keyboard, Platform } from \"react-native\";\r\nimport { KeyboardAwareScrollView } from 'react-native-keyboard-aware-scroll-view'\r\n\r\nimport {\r\n    //Button,\r\n    //ActivityIndicator,\r\n    Text,\r\n    View,\r\n    ScrollView,\r\n    TouchableWithoutFeedBack,\r\n    //KeyboardAvoidingView,\r\n    ModalSelector,\r\n    RefreshControl,\r\n    //Icon,\r\n    TouchableOpacity,\r\n    CustomIcon,\r\n    //Overlay,\r\n    //Input,\r\n} from \"../../../marslab-library-react-native/components/atoms\";\r\nimport { \r\n    InputTextField,\r\n    ImageInfo\r\n} from \"../../../marslab-library-react-native/components/molecules\";\r\nimport { SignoutButton } from \"../../../components/templates/atoms\";\r\n\r\nimport { Colors } from \"../../../settings/styles/theme\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n    update,\r\n    readFromDatabase,\r\n    submitToBackend,\r\n} from \"../../../marslab-library-react-native/redux/user/action\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport styles from \"./styles\";\r\n\r\nconst emailPattern = /^(([^<>()\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport class Index extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            message: null,\r\n            triggerLoading: null,\r\n            emailErrorMessage: null,\r\n            icErrorMessage: null,\r\n            nameErrorMessage: null,\r\n            photo: null,\r\n        }\r\n\r\n        //bind functions\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.readFromDatabase();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (\r\n            this.props.submitInfoError.message !==\r\n            prevProps.submitInfoError.message &&\r\n            this.props.submitInfoError.message\r\n        ) {       \r\n            this.setState({ \r\n                error: true,\r\n                message: this.props.submitInfoError.message,\r\n                triggerLoading: null\r\n            });\r\n        } \r\n\r\n        if (\r\n            this.props.submitInfoResult.message !==\r\n              prevProps.submitInfoResult.message &&\r\n            this.props.submitInfoResult.message\r\n        ) {\r\n            this.setState({ \r\n                message: this.props.submitInfoResult.message,\r\n                error: false,     \r\n                triggerLoading: null \r\n            });\r\n\r\n            setTimeout(() => {\r\n                Actions.Profile();\r\n            },2000); \r\n        }\r\n\r\n    }\r\n\r\n    onRecordChange = ({ key, nestedKey }, value) => {\r\n        let { user } = this.props;\r\n        this.setState({ user });\r\n        if (key && nestedKey) user[key][nestedKey] = value;\r\n        else if (key) user[key] = value; \r\n        this.props.update(user);\r\n    };\r\n\r\n    onSelectChange = ({ key, nestedKey }, value) => {\r\n        let { user } = this.props;\r\n        this.setState({ user });\r\n        if (key && nestedKey) user[key][nestedKey] = value;\r\n        else if (key) user[key] = value;\r\n        this.props.update(user);\r\n    };\r\n\r\n    onSubmit() {\r\n        const { user } = this.props;\r\n\r\n        if (!emailPattern.test(user.email) && user.email.length > 0) {\r\n            this.setState({ emailErrorMessage: \" (Email format is incorrect)\" });\r\n        } else {\r\n            this.props.submitToBackend(user, \"updateProfile\");\r\n            this.setState({ triggerLoading: true })\r\n        }\r\n    }\r\n\r\n    infoListSection = (title, detail, onChangeText, required) => {\r\n        return (\r\n            <View style={styles.infoDetailSection}>\r\n                <Text style={styles.infoTitleStyle}>\r\n                    {title} \r\n                    {required && \r\n                        <Text style={{color: \"red\",fontFamily: \"RobotoRegular\",}}> *</Text>\r\n                    }\r\n                </Text>\r\n                <InputTextField\r\n                    placeholderText={title}\r\n                    placeholderTextColor=\"#CCCCCC\"\r\n                    inputStyle={styles.inputTextStyle}\r\n                    value={detail}\r\n                    onChangeText={onChangeText}\r\n                    keyboardType={title === 'IC Number' ? \"numeric\" : title === 'Email' ? \"email-address\" : \"default\" }\r\n                />\r\n            </View>\r\n        );\r\n    };\r\n\r\n    onChangeImagePressed() {\r\n        Actions.CameraProfile();\r\n    }\r\n\r\n    render() {\r\n        const { user, readLoading, readError } = this.props;\r\n        const {\r\n            displayName,\r\n            gender,\r\n            email,\r\n            address,\r\n            identityNumber,\r\n            photoURL,\r\n            //phoneNumber,\r\n        } = user;\r\n        \r\n        const genderOption = [\"Male\", \"Female\"];\r\n        const countriesList = require(\"../../../assets/address/countries.json\");\r\n        const statesList = require(\"../../../assets/address/Malaysia/states.json\");\r\n\r\n       /*  if (this.state.triggerLoading || this.state.message){\r\n            return (\r\n                <Overlay\r\n                    isVisible={this.state.triggerLoading}\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    overlayBackgroundColor={Colors.PRIMARY}\r\n                    overlayStyle={styles.containerOverlay}\r\n                >\r\n                    <View style={styles.contentContainer}>\r\n                    \r\n                        {this.state.message && (this.state.error === false) &&\r\n                            <View style={styles.contentContainer}>\r\n                                <Icon \r\n                                    name=\"ios-checkmark-circle-outline\" \r\n                                    color=\"white\" \r\n                                    size={70} \r\n                                />\r\n                                <Text style={styles.subjectText}>\r\n                                    Success\r\n                                </Text>\r\n                                <Text style={styles.messageText}>\r\n                                    You have updated your profile information.\r\n                                </Text>\r\n                            </View>\r\n                        }\r\n                    </View>\r\n                </Overlay>\r\n            );\r\n        } else { */\r\n            return (\r\n           \r\n                <KeyboardAwareScrollView\r\n                    enableOnAndroid={true} \r\n                    keyboardShouldPersistTaps='handled'\r\n                    extraHeight={Platform.OS === 'ios' ? 100 : 250} \r\n                   /*  behavior={Platform.OS === \"ios\" ? \"padding\" : \"height\"}\r\n                    //behavior=\"position\"\r\n                    //behavior=\"padding\"\r\n                    style={{flex:1}}\r\n                    keyboardVerticalOffset={Platform.OS === \"ios\" ? 100 : -700}\r\n                    enabled */\r\n                >\r\n                     <ScrollView \r\n                        showsVerticalScrollIndicator={false}\r\n                     >\r\n                        <TouchableWithoutFeedBack\r\n                            onPress={Keyboard.dismiss}\r\n                            accessible={false}\r\n                        >\r\n                            <View>\r\n                                <View style={styles.ProfileContatiner}>\r\n                                    <View style={styles.ProfileImageStyle}>\r\n                                        <ImageInfo\r\n                                            banner={photoURL ? photoURL : require('../../../assets/DefaultAvatar.jpg')}\r\n                                            imageContainer={styles.ProfileImageStyle}\r\n                                            imageStyle={styles.image}\r\n                                        />\r\n                                    </View>\r\n                                    <TouchableOpacity\r\n                                        onPress={this.onChangeImagePressed.bind(\r\n                                            this\r\n                                        )}\r\n                                        style={styles.UploadImageButton}\r\n                                    >\r\n                                        <CustomIcon\r\n                                            name=\"camera\"\r\n                                            color={Colors.PRIMARY}\r\n                                            size={14}\r\n                                        />\r\n                                    </TouchableOpacity>\r\n                                </View>\r\n                                <View style={styles.BodyContatiner}>\r\n                                    {this.infoListSection(\r\n                                        \"Name\",\r\n                                        displayName,\r\n                                        this.onRecordChange.bind(this, {\r\n                                            key: \"displayName\",\r\n                                        }),\r\n                                        true\r\n                                    )}\r\n                                    {this.infoListSection(\r\n                                        \"IC Number\" + (this.state.icErrorMessage ? this.state.icErrorMessage : ''),\r\n                                        identityNumber,\r\n                                        this.onRecordChange.bind(this, {\r\n                                            key: \"identityNumber\",\r\n                                        }),\r\n                                        true\r\n                                    )}\r\n                                    <View style={styles.infoDetailSection}>\r\n                                        <Text style={styles.infoTitleStyle}>Gender</Text>\r\n                                        <ModalSelector\r\n                                            style={styles.genderButtonContainerStyle}\r\n                                            data={genderOption}\r\n                                            keyExtractor={(item) => item}\r\n                                            labelExtractor={(item) => item}\r\n                                            onChange={this.onSelectChange.bind(\r\n                                                this,\r\n                                                {\r\n                                                    key: \"gender\",\r\n                                                }\r\n                                            )}\r\n                                            selectedKey={gender}\r\n                                            initValue=\"Gender\"\r\n                                        />\r\n                                    </View>\r\n                                    {/* {this.infoListSection(\r\n                                        \"Gender\", \r\n                                        gender,\r\n                                        this.onRecordChange.bind(this, {\r\n                                            key: \"gender\",\r\n                                        }) \r\n                                    )}  */}\r\n                                    {this.infoListSection(\r\n                                        \"Email\"  + (this.state.emailErrorMessage ? this.state.emailErrorMessage : ''),\r\n                                        email,\r\n                                        this.onRecordChange.bind(this, {\r\n                                            key: \"email\",\r\n                                        }),\r\n                                        true\r\n                                    )}\r\n                                    {/* {this.infoListSection(\r\n                                        \"Contact No.\",\r\n                                        phoneNumber,\r\n                                        this.onRecordChange.bind(this, {\r\n                                            key: \"phoneNumber\",\r\n                                        })\r\n                                    )} */}\r\n                                    <View>\r\n                                        <View style={styles.infoDetailSection}>\r\n                                            <Text style={styles.infoTitleStyle}>\r\n                                                Address\r\n                                            </Text>\r\n                                            <InputTextField\r\n                                                placeholderText=\"Line 1\"\r\n                                                placeholderTextColor=\"#CCCCCC\"\r\n                                                inputStyle={styles.inputTextStyle}\r\n                                                onChangeText={this.onRecordChange.bind(\r\n                                                    this,\r\n                                                    {\r\n                                                        key: \"address\",\r\n                                                        nestedKey: \"line1\",\r\n                                                    }\r\n                                                )}\r\n                                                value={address.line1}\r\n                                            />\r\n                                            <InputTextField\r\n                                                placeholderText=\"Line 2\"\r\n                                                placeholderTextColor=\"#CCCCCC\"\r\n                                                inputStyle={styles.inputTextStyle}\r\n                                                onChangeText={this.onRecordChange.bind(\r\n                                                    this,\r\n                                                    {\r\n                                                        key: \"address\",\r\n                                                        nestedKey: \"line2\",\r\n                                                    }\r\n                                                )}\r\n                                                value={address.line2}\r\n                                            />\r\n                                            <View style={styles.addressContainer}>\r\n                                        <View style={styles.fixContainer}>\r\n                                            <InputTextField\r\n                                                placeholderText=\"Postcode\"\r\n                                                placeholderTextColor=\"#CCCCCC\"\r\n                                                inputStyle={styles.inputTextStyle}\r\n                                                onChangeText={this.onRecordChange.bind(\r\n                                                    this,\r\n                                                    {\r\n                                                        key: \"address\",\r\n                                                        nestedKey: \"postcode\",\r\n                                                    }\r\n                                                )}\r\n                                                value={address.postcode}\r\n                                                keyboardType=\"numeric\"\r\n                                            />\r\n                                        </View>\r\n                                        <View style={styles.fixContainer}>\r\n                                            <ModalSelector\r\n                                                style={styles.buttonContainerStyle}\r\n                                                data={statesList}\r\n                                                keyExtractor={(item) => item}\r\n                                                labelExtractor={(item) => item}\r\n                                                onChange={this.onSelectChange.bind(\r\n                                                    this,\r\n                                                    {\r\n                                                        key: \"address\",\r\n                                                        nestedKey: \"state\",\r\n                                                    }\r\n                                                )}\r\n                                                selectedKey={address.state}\r\n                                                initValue=\"State\"\r\n                                            />\r\n                                        </View>\r\n                                        <View style={styles.fixContainer}>\r\n                                            <ModalSelector\r\n                                                style={styles.buttonContainerStyle}\r\n                                                data={countriesList}\r\n                                                keyExtractor={(item) =>\r\n                                                    item.country\r\n                                                }\r\n                                                labelExtractor={(item) =>\r\n                                                    item.country\r\n                                                }\r\n                                                onChange={(value) =>\r\n                                                    this.onSelectChange(\r\n                                                        {\r\n                                                            key: \"address\",\r\n                                                            nestedKey: \"country\",\r\n                                                        },\r\n                                                        value.country\r\n                                                    )\r\n                                                }\r\n                                                selectedKey={address.country}\r\n                                                initValue=\"Country\"\r\n                                            />\r\n                                        </View>\r\n                                    </View>\r\n                                        </View>\r\n                                    </View>\r\n                                    {this.state.message && (this.state.error === false) &&\r\n                                        <Text style={{paddingLeft: 20, color: Colors.PRIMARY, paddingBottom: 5,fontFamily: \"RobotoRegular\",}}>\r\n                                            Successful update information\r\n                                        </Text>\r\n                                    }\r\n                                    {this.state.message && (this.state.error === true) &&\r\n                                        <Text style={{paddingLeft: 20, color: Colors.PRIMARY, paddingBottom: 5,fontFamily: \"RobotoRegular\",}}>\r\n                                            {this.state.message}\r\n                                        </Text>\r\n                                    }\r\n                                    <SignoutButton\r\n                                        containerStyle={styles.saveContainerStyle}\r\n                                        textStyle={styles.saveTextStyle}\r\n                                        onPress={this.onSubmit}\r\n                                        loading={this.state.triggerLoading ? true : false}\r\n                                        disabled={this.state.triggerLoading ? true : false}\r\n                                    >\r\n                                        Save Changes\r\n                                    </SignoutButton>\r\n                                </View>\r\n                            </View>\r\n                        </TouchableWithoutFeedBack>\r\n                        </ScrollView>\r\n                    </KeyboardAwareScrollView>\r\n            );\r\n        }\r\n}\r\n\r\nconst mapStatetoprops = (state) => {\r\n    const { user } = state.User;\r\n    const submitInfoResult = state.User.submitResult;\r\n    const submitInfoLoading = state.User.submitLoading;\r\n    const submitInfoError = state.User.submitError;\r\n\r\n    return { \r\n        user,\r\n        submitInfoResult,\r\n        submitInfoLoading,\r\n        submitInfoError,\r\n    };\r\n};\r\n\r\nexport default connect(mapStatetoprops, {\r\n    update,\r\n    readFromDatabase,\r\n    submitToBackend,\r\n})(Index);\r\n"]},"metadata":{},"sourceType":"module"}