{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport actions from \"./action\";\nvar initialState = {\n  readLoading: false,\n  readError: false,\n  readClosedRoutesLoading: false,\n  readClosedRoutesError: false,\n  submitLoading: false,\n  submitError: {\n    code: null,\n    message: null,\n    details: null\n  },\n  submitResult: {\n    objectName: null,\n    ids: null,\n    status: null,\n    action: null,\n    message: null\n  },\n  allRoutes: [],\n  routes: [],\n  closedRoutes: [],\n  route: {\n    id: null,\n    type: null,\n    title: null,\n    subtitle: null,\n    description: null,\n    images: [],\n    rules: null,\n    terms: null,\n    published: {\n      at: null,\n      by: null\n    },\n    terminated: {\n      at: null,\n      by: null\n    },\n    pending: {\n      at: null,\n      by: null\n    },\n    ongoing: {\n      at: null,\n      by: null\n    },\n    ended: {\n      at: null,\n      by: null\n    },\n    startTime: null,\n    endTime: null,\n    currentUser: 0,\n    minimumUser: 0,\n    totalMissions: 0,\n    assignCompleted: false,\n    routeGroupId: [],\n    created: {\n      at: null,\n      by: null\n    },\n    deleted: {\n      at: null,\n      by: null\n    },\n    updated: {\n      at: null,\n      by: null\n    },\n    station: 0\n  }\n};\n\nvar reducer = function reducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n\n  var _ref = arguments.length > 1 ? arguments[1] : undefined,\n      type = _ref.type,\n      payload = _ref.payload;\n\n  switch (type) {\n    case actions.READ_ALL_FROM_DATABASE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: true,\n        readError: false\n      });\n\n    case actions.READ_ALL_FROM_DATABASE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: false,\n        allRoutes: payload.data\n      });\n\n    case actions.READ_ALL_FROM_DATABASE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: false,\n        readError: payload.error\n      });\n\n    case actions.READ_FROM_DATABASE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: true,\n        readError: false\n      });\n\n    case actions.READ_FROM_DATABASE_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: false,\n        routes: payload.data\n      });\n\n    case actions.READ_FROM_DATABASE_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: false,\n        readError: payload.error\n      });\n\n    case actions.READ_CLOSED_ROUTES:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readClosedRoutesLoading: true,\n        readClosedRoutesError: false\n      });\n\n    case actions.READ_CLOSED_ROUTES_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readClosedRoutesLoading: false,\n        closedRoutes: payload.data\n      });\n\n    case actions.READ_CLOSED_ROUTES_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readClosedRoutesLoading: false,\n        readClosedRoutesError: payload.error\n      });\n\n    case actions.READ_RECORD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: true,\n        readError: false\n      });\n\n    case actions.READ_RECORD_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: false,\n        route: payload.data\n      });\n\n    case actions.READ_RECORD_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        readLoading: false,\n        readError: payload.error\n      });\n\n    case actions.SUBMIT_TO_BACKEND:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        submitLoading: true,\n        submitError: initialState.submitError,\n        submitResult: initialState.submitResult\n      });\n\n    case actions.SUBMIT_TO_BACKEND_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        submitLoading: false,\n        submitError: initialState.submitError,\n        submitResult: payload.data\n      });\n\n    case actions.SUBMIT_TO_BACKEND_ERROR:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        submitLoading: false,\n        submitError: payload.error,\n        submitResult: initialState.submitResult\n      });\n\n    case actions.UPDATE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        route: payload.data ? payload.data : initialState.route\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/redux/route/reducer.js"],"names":["actions","initialState","readLoading","readError","readClosedRoutesLoading","readClosedRoutesError","submitLoading","submitError","code","message","details","submitResult","objectName","ids","status","action","allRoutes","routes","closedRoutes","route","id","type","title","subtitle","description","images","rules","terms","published","at","by","terminated","pending","ongoing","ended","startTime","endTime","currentUser","minimumUser","totalMissions","assignCompleted","routeGroupId","created","deleted","updated","station","reducer","state","payload","READ_ALL_FROM_DATABASE","READ_ALL_FROM_DATABASE_SUCCESS","data","READ_ALL_FROM_DATABASE_ERROR","error","READ_FROM_DATABASE","READ_FROM_DATABASE_SUCCESS","READ_FROM_DATABASE_ERROR","READ_CLOSED_ROUTES","READ_CLOSED_ROUTES_SUCCESS","READ_CLOSED_ROUTES_ERROR","READ_RECORD","READ_RECORD_SUCCESS","READ_RECORD_ERROR","SUBMIT_TO_BACKEND","SUBMIT_TO_BACKEND_SUCCESS","SUBMIT_TO_BACKEND_ERROR","UPDATE"],"mappings":"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","sourcesContent":["import actions from \"./action\";\r\n\r\nconst initialState = {\r\n  readLoading: false,\r\n  readError: false,\r\n\r\n  readClosedRoutesLoading: false,\r\n  readClosedRoutesError: false,\r\n\r\n  submitLoading: false,\r\n  submitError: {\r\n    code: null,\r\n    message: null,\r\n    details: null,\r\n  },\r\n  submitResult: {\r\n    objectName: null,\r\n    ids: null,\r\n    status: null,\r\n    action: null,\r\n    message: null,\r\n  },\r\n  allRoutes: [],\r\n  routes: [],\r\n  closedRoutes: [],\r\n  route: {\r\n    id: null,\r\n    type: null,\r\n    title: null,\r\n    subtitle: null,\r\n    description: null,\r\n    images: [],\r\n    rules: null,\r\n    terms: null,\r\n    published: { at: null, by: null },\r\n    terminated: { at: null, by: null },\r\n    pending: { at: null, by: null },\r\n    ongoing: { at: null, by: null },\r\n    ended: { at: null, by: null },\r\n    startTime: null,\r\n    endTime: null,\r\n    currentUser: 0,\r\n    minimumUser: 0,\r\n    totalMissions: 0,\r\n    assignCompleted: false,\r\n    routeGroupId: [],\r\n    created: { at: null, by: null },\r\n    deleted: { at: null, by: null },\r\n    updated: { at: null, by: null },\r\n    station: 0\r\n  },\r\n};\r\n\r\nconst reducer = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    \r\n    case actions.READ_ALL_FROM_DATABASE:\r\n      return { ...state, readLoading: true, readError: false };\r\n\r\n    case actions.READ_ALL_FROM_DATABASE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        readLoading: false,\r\n        allRoutes: payload.data,\r\n      };\r\n\r\n    case actions.READ_ALL_FROM_DATABASE_ERROR:\r\n      return { ...state, readLoading: false, readError: payload.error };\r\n\r\n    case actions.READ_FROM_DATABASE:\r\n      return { ...state, readLoading: true, readError: false };\r\n\r\n    case actions.READ_FROM_DATABASE_SUCCESS:\r\n      return {\r\n        ...state,\r\n        readLoading: false,\r\n        routes: payload.data,\r\n      };\r\n\r\n    case actions.READ_FROM_DATABASE_ERROR:\r\n      return { ...state, readLoading: false, readError: payload.error };\r\n\r\n    case actions.READ_CLOSED_ROUTES:\r\n      return { ...state, readClosedRoutesLoading: true, readClosedRoutesError: false };\r\n\r\n    case actions.READ_CLOSED_ROUTES_SUCCESS:\r\n      return {\r\n        ...state,\r\n        readClosedRoutesLoading: false,\r\n        closedRoutes: payload.data,\r\n      };\r\n\r\n    case actions.READ_CLOSED_ROUTES_ERROR:\r\n      return { ...state, readClosedRoutesLoading: false, readClosedRoutesError: payload.error };\r\n\r\n    case actions.READ_RECORD:\r\n      return { ...state, readLoading: true, readError: false };\r\n\r\n    case actions.READ_RECORD_SUCCESS:\r\n      return {\r\n        ...state,\r\n        readLoading: false,\r\n        route: payload.data,\r\n      };\r\n\r\n    case actions.READ_RECORD_ERROR:\r\n      return { ...state, readLoading: false, readError: payload.error };\r\n\r\n    case actions.SUBMIT_TO_BACKEND:\r\n      return {\r\n        ...state,\r\n        submitLoading: true,\r\n        submitError: initialState.submitError,\r\n        submitResult: initialState.submitResult,\r\n      };\r\n    case actions.SUBMIT_TO_BACKEND_SUCCESS:\r\n      return {\r\n        ...state,\r\n        submitLoading: false,\r\n        submitError: initialState.submitError,\r\n        submitResult: payload.data,\r\n      };\r\n\r\n    case actions.SUBMIT_TO_BACKEND_ERROR:\r\n      return {\r\n        ...state,\r\n        submitLoading: false,\r\n        submitError: payload.error,\r\n        submitResult: initialState.submitResult,\r\n      };\r\n\r\n    case actions.UPDATE:\r\n      return {\r\n        ...state,\r\n        route: payload.data?payload.data:initialState.route,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reducer;\r\n"]},"metadata":{},"sourceType":"module"}