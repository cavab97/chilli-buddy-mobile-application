{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\limwe\\\\Documents\\\\application\\\\gogogain-app\\\\gogogain-user\\\\src\\\\screens\\\\main\\\\RouteGroups\\\\Route\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport Share from \"react-native-web/dist/exports/Share\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport { SingleRoutes } from \"../../../../components/templates\";\nimport { listenToRecord as listenToRoute, removeListenerToRecord as removeListenerFromRoute } from \"../../../../redux/route/action\";\nimport { listenToRecord as listenToRouteTicket, removeListenerToRecord as removeListenerFromRouteTicket, submitToBackend as submitRouteTicket } from \"../../../../redux/routeTicket/action\";\nimport { readFromDatabase as readMissions, modalControl as missionModalControl } from \"../../../../redux/mission/action\";\nimport { readFromDatabase as readRewards } from \"../../../../redux/reward/action\";\nimport { submitToBackend as submitTransaction } from \"../../../../redux/transaction/action\";\nimport styles from \"./styles\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n\n    _this.handleModal = function (mission) {\n      _this.props.missionModalControl(mission);\n    };\n\n    _this.onPay = function (mission) {\n      var routeId = _this.props.navigation.state.params.routeId;\n\n      var routeTicketId = _this.lookingForTicket({\n        routeId: routeId\n      });\n\n      var shopId = mission.shop.id;\n      var missionId = mission.id;\n      var payment = {\n        amount: 50,\n        paymentId: null,\n        paymentType: \"cash\",\n        receiptId: null,\n        receiptPhotoUrl: \"https://image.freepik.com/free-vector/realistic-receipt-template_23-2147938550.jpg\",\n        receiptUrl: null\n      };\n      var data = {\n        routeId: routeId,\n        shopId: shopId,\n        routeTicketId: routeTicketId,\n        missionId: missionId,\n        payment: payment\n      };\n\n      _this.props.submitTransaction(data, \"create\");\n    };\n\n    _this.onPayAmount = function (mission) {\n      _this.props.missionModalControl(mission);\n\n      Actions.Amount();\n    };\n\n    _this.onRulesPress = function (rules) {\n      Actions.Rules({\n        rules: rules\n      });\n    };\n\n    _this.state = {\n      isVisible: false,\n      shared: false,\n      invited: false,\n      showModalVisible: true,\n      routeTicketId: null,\n      error: null,\n      userPending: true\n    };\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var routeId = this.props.navigation.state.params.routeId;\n      var routeTicketId = this.lookingForTicket({\n        routeId: routeId\n      });\n      this.props.listenToRoute({\n        routeId: routeId\n      });\n      this.props.readMissions({\n        routeId: routeId\n      });\n      this.props.readRewards({\n        routeId: routeId\n      });\n\n      if (routeTicketId) {\n        this.props.listenToRouteTicket({\n          routeTicketId: routeTicketId\n        });\n        this.setState({\n          routeTicketId: routeTicketId\n        });\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeListenerFromRoute();\n      this.props.removeListenerFromRouteTicket();\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps, prevState) {\n      var routeId = this.props.navigation.state.params.routeId;\n      var route = this.props.routeState.route;\n\n      if (route !== prevProps.routeState.route) {\n        if (route.currentUser >= route.minimumUser) {\n          this.setState({\n            userPending: false\n          });\n        }\n      }\n\n      if ((this.state.shared !== prevState.shared || this.state.invited !== prevState.invited) && route.type === \"Luxury\" && this.state.invited && this.state.shared && !this.state.routeTicketId) {\n        this.props.submitRouteTicket({\n          routeId: routeId\n        }, \"create\");\n      }\n\n      if (this.state.shared !== prevState.shared && route.type === \"Casual\" && this.state.shared && !this.state.routeTicketId) {\n        this.props.submitRouteTicket({\n          routeId: routeId\n        }, \"create\");\n      }\n\n      if (this.props.submitRouteTicketError.message !== prevProps.submitRouteTicketError.message && this.props.submitRouteTicketError.message) {\n        this.setState({\n          error: this.props.submitRouteTicketError.message\n        });\n      }\n\n      if (this.props.submitRouteTicketResult.message !== prevProps.submitRouteTicketResult.message && this.props.submitRouteTicketResult.message) {\n        this.props.listenToRouteTicket({\n          routeTicketId: this.props.submitRouteTicketResult.ids[0]\n        });\n        this.setState({\n          routeTicketId: this.props.submitRouteTicketResult.ids[0]\n        });\n      }\n    }\n  }, {\n    key: \"lookingForTicket\",\n    value: function lookingForTicket(_ref) {\n      var _ref$routeId = _ref.routeId,\n          routeId = _ref$routeId === void 0 ? null : _ref$routeId;\n      var _this$props$routeTick = this.props.routeTicketState.routeTickets,\n          routeTickets = _this$props$routeTick === void 0 ? [] : _this$props$routeTick;\n      var routeTicketId = null;\n      routeTickets.forEach(function (routeTicket) {\n        if (routeTicket.routeIds[0] === routeId) {\n          routeTicketId = routeTicket.id;\n        }\n      });\n      return routeTicketId;\n    }\n  }, {\n    key: \"onUnlockPress\",\n    value: function onUnlockPress() {\n      this.setState(function (state) {\n        return {\n          isVisible: !state.isVisible\n        };\n      });\n    }\n  }, {\n    key: \"onShare\",\n    value: function onShare() {\n      var _this2 = this;\n\n      var shareOptions = {\n        title: \"Gogogain\",\n        message: \"Join Us Now to Win Rewards https://www.facebook.com/gogogainoficial/\",\n        url: \"https://play.google.com/store/apps/details?id=com.infobay.gogogain\",\n        subject: \"Join Us Now to Win Rewards\"\n      };\n      Share.share(shareOptions).then(function (_ref2) {\n        var action = _ref2.action,\n            activityType = _ref2.activityType;\n\n        if (action === Share.dismissedAction) {\n          console.log(\"Share dismissed\");\n        } else {\n          _this2.setState({\n            shared: true\n          });\n\n          console.log(\"Share successful\");\n        }\n      }).catch(function (error) {\n        return _this2.setState({\n          result: \"error: \" + error.message\n        });\n      });\n    }\n  }, {\n    key: \"onInvite\",\n    value: function onInvite() {\n      var _this3 = this;\n\n      var shareOptions = {\n        title: \"Gogogain\",\n        message: \"Join Us Now to Win Rewards https://www.facebook.com/gogogainoficial/\",\n        url: \"https://play.google.com/store/apps/details?id=com.infobay.gogogain\",\n        subject: \"Join Us Now to Win Rewards\"\n      };\n      Share.share(shareOptions).then(function (_ref3) {\n        var action = _ref3.action,\n            activityType = _ref3.activityType;\n\n        if (action === Share.dismissedAction) {\n          console.log(\"Share dismissed\");\n        } else {\n          _this3.setState({\n            invited: true\n          });\n\n          console.log(\"Share successfuld\");\n        }\n      }).catch(function (error) {\n        return _this3.setState({\n          result: \"error: \" + error.message\n        });\n      });\n    }\n  }, {\n    key: \"onRankingPress\",\n    value: function onRankingPress() {\n      Actions.RouteRanking();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var routeTicket = this.props.routeTicketState.routeTicket;\n      var route = this.props.routeState.route;\n      var _this$props$missionSt = this.props.missionState,\n          missions = _this$props$missionSt.missions,\n          mission = _this$props$missionSt.mission,\n          modalActive = _this$props$missionSt.modalActive;\n      var rewards = this.props.rewardState.rewards;\n      var submitRouteTicketLoading = this.props.submitRouteTicketLoading;\n      var image = \"https://gogogain-gogogain.web.app/static/media/user1Circle.5af19df7.png\";\n      var banner = route.images[0];\n      var map = \"https://cdn.evilmartians.com/front/posts/level-up-for-ux-design-lessons-from-videogames/cover-4890edb.png\";\n      return React.createElement(SingleRoutes, {\n        remainingTimeTitle: \"Remaining Time : \",\n        seatLeftTitle: \"Seat Left : \",\n        totalMissionTitle: \"Total Mission : \",\n        completeTitle: \"Complete : \",\n        missionPeriodTitle: \"Mission Period : \",\n        participantTitle: \"Participant : \",\n        participant: \"> 100 pax\",\n        rankingTitle: \"Ranking\",\n        rules: \"Rules\",\n        routeTitle: \"Route 2 \",\n        route: \"(Tebrau)\",\n        mapTitle: \"Map:\",\n        shopTitle: \"Shop:\",\n        minimumPayTitle: \"Minimum Pay\",\n        currency: \"RM\",\n        pendingTitle: \"You are in pending\",\n        routeData: route,\n        routeTicketData: routeTicket,\n        missionData: missions,\n        mission: mission,\n        banner: banner,\n        map: map,\n        userPending: this.state.userPending,\n        isVisible: this.state.isVisible,\n        isShared: this.state.routeTicketId,\n        unlockTitle: \"UNLOCK MAP\",\n        onUnlockPress: this.onUnlockPress.bind(this),\n        isUnlockLoading: submitRouteTicketLoading,\n        facebookButtonTitle: \"Share our Facebook\",\n        inviteButtonTitle: \"Invite Friends\",\n        facebookSharePress: this.onShare.bind(this),\n        invitePress: this.onInvite.bind(this),\n        missionPress: this.handleModal.bind(this),\n        showModal: modalActive,\n        descriptionTitle: \"Description\",\n        payTitle: \"Pay\",\n        onPay: this.onPay,\n        onPayAmount: this.onPayAmount,\n        onRulesPress: this.onRulesPress.bind(this),\n        onRankingPress: this.onRankingPress.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var routeTicketState = state.RouteTicket;\n  var submitRouteTicketLoading = state.RouteTicket.submitLoading;\n  var submitRouteTicketResult = state.RouteTicket.submitResult;\n  var submitRouteTicketError = state.RouteTicket.submitError;\n  var routeState = state.Route;\n  var missionState = state.Mission;\n  var rewardState = state.Reward;\n  return {\n    routeState: routeState,\n    routeTicketState: routeTicketState,\n    missionState: missionState,\n    rewardState: rewardState,\n    submitRouteTicketLoading: submitRouteTicketLoading,\n    submitRouteTicketResult: submitRouteTicketResult,\n    submitRouteTicketError: submitRouteTicketError\n  };\n};\n\nexport default connect(mapStateToProps, {\n  submitRouteTicket: submitRouteTicket,\n  listenToRoute: listenToRoute,\n  removeListenerFromRoute: removeListenerFromRoute,\n  listenToRouteTicket: listenToRouteTicket,\n  removeListenerFromRouteTicket: removeListenerFromRouteTicket,\n  readMissions: readMissions,\n  missionModalControl: missionModalControl,\n  readRewards: readRewards,\n  submitTransaction: submitTransaction\n})(index);","map":{"version":3,"sources":["C:/Users/limwe/Documents/application/gogogain-app/gogogain-user/src/screens/main/RouteGroups/Route/index.js"],"names":["React","Component","connect","Actions","SingleRoutes","listenToRecord","listenToRoute","removeListenerToRecord","removeListenerFromRoute","listenToRouteTicket","removeListenerFromRouteTicket","submitToBackend","submitRouteTicket","readFromDatabase","readMissions","modalControl","missionModalControl","readRewards","submitTransaction","styles","index","props","handleModal","mission","onPay","routeId","navigation","state","params","routeTicketId","lookingForTicket","shopId","shop","id","missionId","payment","amount","paymentId","paymentType","receiptId","receiptPhotoUrl","receiptUrl","data","onPayAmount","Amount","onRulesPress","rules","Rules","isVisible","shared","invited","showModalVisible","error","userPending","setState","prevProps","prevState","route","routeState","currentUser","minimumUser","type","submitRouteTicketError","message","submitRouteTicketResult","ids","routeTicketState","routeTickets","forEach","routeTicket","routeIds","shareOptions","title","url","subject","Share","share","then","action","activityType","dismissedAction","console","log","catch","result","RouteRanking","missionState","missions","modalActive","rewards","rewardState","submitRouteTicketLoading","image","banner","images","map","onUnlockPress","bind","onShare","onInvite","onRankingPress","mapStateToProps","RouteTicket","submitLoading","submitResult","submitError","Route","Mission","Reward"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Share } from \"react-native\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\n\r\nimport { SingleRoutes } from \"../../../../components/templates\";\r\n\r\nimport {\r\n  listenToRecord as listenToRoute,\r\n  removeListenerToRecord as removeListenerFromRoute,\r\n} from \"../../../../redux/route/action\";\r\n\r\nimport {\r\n  listenToRecord as listenToRouteTicket,\r\n  removeListenerToRecord as removeListenerFromRouteTicket,\r\n  submitToBackend as submitRouteTicket,\r\n} from \"../../../../redux/routeTicket/action\";\r\n\r\nimport {\r\n  readFromDatabase as readMissions,\r\n  modalControl as missionModalControl,\r\n} from \"../../../../redux/mission/action\";\r\n\r\nimport { readFromDatabase as readRewards } from \"../../../../redux/reward/action\";\r\n\r\nimport { submitToBackend as submitTransaction } from \"../../../../redux/transaction/action\";\r\n\r\nimport styles from \"./styles\";\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      isVisible: false,\r\n      shared: false,\r\n      invited: false,\r\n      showModalVisible: true,\r\n      routeTicketId: null,\r\n      error: null,\r\n      userPending: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    const routeTicketId = this.lookingForTicket({ routeId });\r\n\r\n    this.props.listenToRoute({ routeId });\r\n    this.props.readMissions({ routeId });\r\n    this.props.readRewards({ routeId });\r\n\r\n    if (routeTicketId) {\r\n      this.props.listenToRouteTicket({ routeTicketId });\r\n      this.setState({ routeTicketId: routeTicketId });\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeListenerFromRoute();\r\n    this.props.removeListenerFromRouteTicket();\r\n  }\r\n\r\n  componentDidUpdate(prevProps, prevState) {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    // Typical usage (don't forget to compare props):\r\n    const { route } = this.props.routeState;\r\n\r\n    if(route !== prevProps.routeState.route){\r\n      if(route.currentUser >= route.minimumUser){\r\n        this.setState({userPending: false});\r\n      }\r\n    }\r\n\r\n    if (\r\n      (this.state.shared !== prevState.shared ||\r\n      this.state.invited !== prevState.invited )&&\r\n      route.type === \"Luxury\" &&\r\n      this.state.invited &&\r\n      this.state.shared &&\r\n      !this.state.routeTicketId\r\n    ) {\r\n      this.props.submitRouteTicket({ routeId }, \"create\");\r\n    }\r\n\r\n    if (\r\n      this.state.shared !== prevState.shared &&\r\n      route.type === \"Casual\" &&\r\n      this.state.shared &&\r\n      !this.state.routeTicketId\r\n    ) {\r\n      this.props.submitRouteTicket({ routeId }, \"create\");\r\n    }\r\n\r\n    if (\r\n      this.props.submitRouteTicketError.message !==\r\n        prevProps.submitRouteTicketError.message &&\r\n      this.props.submitRouteTicketError.message\r\n    ) {\r\n      this.setState({ error: this.props.submitRouteTicketError.message });\r\n    }\r\n    if (\r\n      this.props.submitRouteTicketResult.message !==\r\n        prevProps.submitRouteTicketResult.message &&\r\n      this.props.submitRouteTicketResult.message\r\n    ) {\r\n      this.props.listenToRouteTicket({\r\n        routeTicketId: this.props.submitRouteTicketResult.ids[0],\r\n      });\r\n      this.setState({\r\n        routeTicketId: this.props.submitRouteTicketResult.ids[0],\r\n      });\r\n    }\r\n  }\r\n\r\n  lookingForTicket({ routeId = null }) {\r\n    const { routeTickets = [] } = this.props.routeTicketState;\r\n    let routeTicketId = null;\r\n    routeTickets.forEach((routeTicket) => {\r\n      if (routeTicket.routeIds[0] === routeId) {\r\n        routeTicketId = routeTicket.id;\r\n      }\r\n    });\r\n    return routeTicketId;\r\n  }\r\n\r\n  onUnlockPress() {\r\n    this.setState((state) => ({\r\n      isVisible: !state.isVisible,\r\n    }));\r\n  }\r\n\r\n  onShare() {\r\n    const shareOptions = {\r\n      title: \"Gogogain\",\r\n      message:\r\n        \"Join Us Now to Win Rewards https://www.facebook.com/gogogainoficial/\", // Note that according to the documentation at least one of \"message\" or \"url\" fields is required\r\n      url: \"https://play.google.com/store/apps/details?id=com.infobay.gogogain\",\r\n      subject: \"Join Us Now to Win Rewards\",\r\n      //filename: 'test' , // only for base64 file in Android\r\n    };\r\n    Share.share(shareOptions)\r\n      .then(({ action, activityType }) => {\r\n        if (action === Share.dismissedAction) {\r\n          console.log(\"Share dismissed\");\r\n        } else {\r\n          this.setState({ shared: true });\r\n          console.log(\"Share successful\");\r\n        }\r\n      })\r\n      .catch((error) => this.setState({ result: \"error: \" + error.message }));\r\n  }\r\n \r\n  onInvite() {\r\n    const shareOptions = {\r\n      title: \"Gogogain\",\r\n      message:\r\n        \"Join Us Now to Win Rewards https://www.facebook.com/gogogainoficial/\", // Note that according to the documentation at least one of \"message\" or \"url\" fields is required\r\n      url: \"https://play.google.com/store/apps/details?id=com.infobay.gogogain\",\r\n      subject: \"Join Us Now to Win Rewards\",\r\n      //filename: 'test' , // only for base64 file in Android\r\n    };\r\n    Share.share(shareOptions)\r\n      .then(({ action, activityType }) => {\r\n        if (action === Share.dismissedAction) {\r\n          console.log(\"Share dismissed\");\r\n        } else {\r\n          this.setState({ invited: true });\r\n          console.log(\"Share successfuld\");\r\n        }\r\n      })\r\n      .catch((error) => this.setState({ result: \"error: \" + error.message }));\r\n  }\r\n\r\n  handleModal = (mission) => {\r\n    this.props.missionModalControl(mission);\r\n  };\r\n\r\n  onPay = (mission) => {\r\n    const { routeId } = this.props.navigation.state.params;\r\n    const routeTicketId = this.lookingForTicket({ routeId });\r\n    const shopId = mission.shop.id;\r\n    const missionId = mission.id;\r\n    const payment = {\r\n      amount: 50,\r\n      paymentId: null,\r\n      paymentType: \"cash\",\r\n      receiptId: null,\r\n      receiptPhotoUrl:\r\n        \"https://image.freepik.com/free-vector/realistic-receipt-template_23-2147938550.jpg\",\r\n      receiptUrl: null,\r\n    };\r\n    const data = { routeId, shopId, routeTicketId, missionId, payment };\r\n    this.props.submitTransaction(data, \"create\");\r\n  };\r\n\r\n  onPayAmount = (mission) => {\r\n    this.props.missionModalControl(mission);\r\n    Actions.Amount();\r\n  }\r\n\r\n  onRulesPress = (rules) => {\r\n    Actions.Rules({rules});\r\n  }\r\n\r\n  onRankingPress() {\r\n    Actions.RouteRanking();\r\n  }\r\n\r\n  render() {\r\n    const { routeTicket } = this.props.routeTicketState;\r\n    const { route } = this.props.routeState;\r\n    const { missions, mission, modalActive } = this.props.missionState;\r\n    const { rewards } = this.props.rewardState;\r\n    const { submitRouteTicketLoading } = this.props;\r\n\r\n    const image =\r\n      \"https://gogogain-gogogain.web.app/static/media/user1Circle.5af19df7.png\";\r\n    const banner = route.images[0];\r\n      //\"https://cdn.dribbble.com/users/1787323/screenshots/10790307/media/325f2a408de117b8cf8d5a6fb17329f9.png\";\r\n    const map =\r\n      \"https://cdn.evilmartians.com/front/posts/level-up-for-ux-design-lessons-from-videogames/cover-4890edb.png\";\r\n\r\n\r\n    return (\r\n      <SingleRoutes\r\n        remainingTimeTitle=\"Remaining Time : \"\r\n        seatLeftTitle=\"Seat Left : \"\r\n        totalMissionTitle=\"Total Mission : \"\r\n        completeTitle=\"Complete : \"\r\n        missionPeriodTitle=\"Mission Period : \"\r\n        participantTitle=\"Participant : \"\r\n        participant=\"> 100 pax\"\r\n        rankingTitle=\"Ranking\"\r\n        rules=\"Rules\"\r\n        routeTitle=\"Route 2 \"\r\n        route=\"(Tebrau)\"\r\n        mapTitle=\"Map:\"\r\n        shopTitle=\"Shop:\"\r\n        minimumPayTitle=\"Minimum Pay\"\r\n        currency=\"RM\"\r\n        pendingTitle=\"You are in pending\"\r\n        routeData={route}\r\n        routeTicketData={routeTicket}\r\n        missionData={missions}\r\n        mission={mission}\r\n        banner={banner}\r\n        map={map}\r\n        userPending={this.state.userPending}\r\n        isVisible={this.state.isVisible}\r\n        isShared={this.state.routeTicketId}\r\n        unlockTitle=\"UNLOCK MAP\"\r\n        onUnlockPress={this.onUnlockPress.bind(this)}\r\n        isUnlockLoading={submitRouteTicketLoading}\r\n        facebookButtonTitle=\"Share our Facebook\"\r\n        inviteButtonTitle=\"Invite Friends\"\r\n        facebookSharePress={this.onShare.bind(this)}\r\n        invitePress={this.onInvite.bind(this)}\r\n        missionPress={this.handleModal.bind(this)}\r\n        showModal={modalActive}\r\n        descriptionTitle=\"Description\"\r\n        payTitle=\"Pay\"\r\n        onPay={this.onPay}\r\n        onPayAmount={this.onPayAmount}\r\n        onRulesPress={this.onRulesPress.bind(this)}\r\n        onRankingPress={this.onRankingPress.bind(this)}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const routeTicketState = state.RouteTicket;\r\n  const submitRouteTicketLoading = state.RouteTicket.submitLoading;\r\n  const submitRouteTicketResult = state.RouteTicket.submitResult;\r\n  const submitRouteTicketError = state.RouteTicket.submitError;\r\n  const routeState = state.Route;\r\n  const missionState = state.Mission;\r\n  const rewardState = state.Reward;\r\n\r\n  return {\r\n    routeState,\r\n    routeTicketState,\r\n    missionState,\r\n    rewardState,\r\n    submitRouteTicketLoading,\r\n    submitRouteTicketResult,\r\n    submitRouteTicketError,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  submitRouteTicket,\r\n  listenToRoute,\r\n  removeListenerFromRoute,\r\n  listenToRouteTicket,\r\n  removeListenerFromRouteTicket,\r\n  readMissions,\r\n  missionModalControl,\r\n  readRewards,\r\n  submitTransaction,\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}