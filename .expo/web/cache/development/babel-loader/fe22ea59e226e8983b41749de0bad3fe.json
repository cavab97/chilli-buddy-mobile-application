{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { database } from \"../../marslab-library-react-native/utils/helper\";\nvar objectName = \"shop\";\n\nvar objectListener = function objectListener() {};\n\nexport function listenObject(_ref) {\n  var _ref$objectId = _ref.objectId,\n      objectId = _ref$objectId === void 0 ? null : _ref$objectId,\n      _ref$updateListener = _ref.updateListener,\n      updateListener = _ref$updateListener === void 0 ? function () {} : _ref$updateListener;\n  objectListener = database.readRecord({\n    ref: objectName + \"Packaging0/\" + objectId\n  }).onSnapshot(function (snapshot) {\n    var data = _objectSpread(_objectSpread(_objectSpread({}, snapshot.data()), snapshot.data().d), {}, {\n      id: snapshot.id\n    });\n\n    delete data[\"d\"];\n    var parent = database.processData({\n      data: data\n    });\n    var created = database.processData({\n      data: data.created\n    });\n    var deleted = database.processData({\n      data: data.deleted\n    });\n    var updated = database.processData({\n      data: data.updated\n    });\n\n    var processedData = _objectSpread(_objectSpread({}, parent), {}, {\n      created: created,\n      deleted: deleted,\n      updated: updated\n    });\n\n    updateListener(processedData);\n  });\n}\nexport function removeListenerToRecord() {\n  objectListener();\n}","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/services/database/shop.js"],"names":["database","objectName","objectListener","listenObject","objectId","updateListener","readRecord","ref","onSnapshot","snapshot","data","d","id","parent","processData","created","deleted","updated","processedData","removeListenerToRecord"],"mappings":";;;;;;AAAA,SAASA,QAAT;AAEA,IAAMC,UAAU,GAAG,MAAnB;;AAEA,IAAIC,cAAc,GAAG,0BAAM,CAAE,CAA7B;;AAEA,OAAO,SAASC,YAAT,OAAsE;AAAA,2BAA9CC,QAA8C;AAAA,MAA9CA,QAA8C,8BAAnC,IAAmC;AAAA,iCAA7BC,cAA6B;AAAA,MAA7BA,cAA6B,oCAAZ,YAAM,CAAE,CAAI;AAC3EH,EAAAA,cAAc,GAAGF,QAAQ,CACpBM,UADY,CACD;AAAEC,IAAAA,GAAG,EAAKN,UAAL,mBAA6BG;AAAlC,GADC,EAEZI,UAFY,CAED,UAACC,QAAD,EAAc;AACxB,QAAMC,IAAI,iDACPD,QAAQ,CAACC,IAAT,EADO,GAEPD,QAAQ,CAACC,IAAT,GAAgBC,CAFT;AAGVC,MAAAA,EAAE,EAAEH,QAAQ,CAACG;AAHH,MAAV;;AAKA,WAAOF,IAAI,CAAC,GAAD,CAAX;AAEA,QAAMG,MAAM,GAAGb,QAAQ,CAACc,WAAT,CAAqB;AAAEJ,MAAAA,IAAI,EAAJA;AAAF,KAArB,CAAf;AACA,QAAMK,OAAO,GAAGf,QAAQ,CAACc,WAAT,CAAqB;AAAEJ,MAAAA,IAAI,EAAEA,IAAI,CAACK;AAAb,KAArB,CAAhB;AACA,QAAMC,OAAO,GAAGhB,QAAQ,CAACc,WAAT,CAAqB;AAAEJ,MAAAA,IAAI,EAAEA,IAAI,CAACM;AAAb,KAArB,CAAhB;AACA,QAAMC,OAAO,GAAGjB,QAAQ,CAACc,WAAT,CAAqB;AAAEJ,MAAAA,IAAI,EAAEA,IAAI,CAACO;AAAb,KAArB,CAAhB;;AAEA,QAAMC,aAAa,mCAAQL,MAAR;AAAgBE,MAAAA,OAAO,EAAPA,OAAhB;AAAyBC,MAAAA,OAAO,EAAPA,OAAzB;AAAkCC,MAAAA,OAAO,EAAPA;AAAlC,MAAnB;;AAEAZ,IAAAA,cAAc,CAACa,aAAD,CAAd;AACD,GAlBY,CAAjB;AAmBD;AAED,OAAO,SAASC,sBAAT,GAAkC;AACvCjB,EAAAA,cAAc;AACf","sourcesContent":["import { database } from \"../../marslab-library-react-native/utils/helper\";\r\n\r\nconst objectName = \"shop\";\r\n\r\nlet objectListener = () => {};\r\n\r\nexport function listenObject({ objectId = null, updateListener = () => {} }) {\r\n  objectListener = database\r\n      .readRecord({ ref: `${objectName}Packaging0/${objectId}` })\r\n      .onSnapshot((snapshot) => {\r\n        const data = {\r\n        ...snapshot.data(),\r\n        ...snapshot.data().d,\r\n        id: snapshot.id\r\n        };\r\n        delete data[\"d\"];\r\n\r\n        const parent = database.processData({ data });\r\n        const created = database.processData({ data: data.created });\r\n        const deleted = database.processData({ data: data.deleted });\r\n        const updated = database.processData({ data: data.updated });\r\n\r\n        const processedData = { ...parent, created, deleted, updated };\r\n\r\n        updateListener(processedData);\r\n      })\r\n}\r\n\r\nexport function removeListenerToRecord() {\r\n  objectListener();\r\n}\r\n"]},"metadata":{},"sourceType":"module"}