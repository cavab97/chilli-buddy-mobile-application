{"ast":null,"code":"import isWebColor from \"../isWebColor\";\nimport processColor from \"../../exports/processColor\";\n\nvar normalizeColor = function normalizeColor(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  var colorInt = processColor(color);\n\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + alpha + ')';\n  }\n};\n\nexport default normalizeColor;","map":{"version":3,"sources":["C:/Users/limwe/Documents/application/gogogain-app/gogogain-user/node_modules/react-native-web/dist/modules/normalizeColor/index.js"],"names":["isWebColor","processColor","normalizeColor","color","opacity","arguments","length","undefined","colorInt","r","g","b","a","alpha","toFixed"],"mappings":"AASA,OAAOA,UAAP;AACA,OAAOC,YAAP;;AAEA,IAAIC,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,MAAIC,OAAO,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAAlF;AAEA,MAAIF,KAAK,IAAI,IAAb,EAAmB;;AAEnB,MAAI,OAAOA,KAAP,KAAiB,QAAjB,IAA6BH,UAAU,CAACG,KAAD,CAA3C,EAAoD;AAClD,WAAOA,KAAP;AACD;;AAED,MAAIK,QAAQ,GAAGP,YAAY,CAACE,KAAD,CAA3B;;AACA,MAAIK,QAAQ,IAAI,IAAhB,EAAsB;AACpB,QAAIC,CAAC,GAAGD,QAAQ,IAAI,EAAZ,GAAiB,GAAzB;AACA,QAAIE,CAAC,GAAGF,QAAQ,IAAI,CAAZ,GAAgB,GAAxB;AACA,QAAIG,CAAC,GAAGH,QAAQ,GAAG,GAAnB;AACA,QAAII,CAAC,GAAG,CAACJ,QAAQ,IAAI,EAAZ,GAAiB,GAAlB,IAAyB,GAAjC;AACA,QAAIK,KAAK,GAAG,CAACD,CAAC,GAAGR,OAAL,EAAcU,OAAd,CAAsB,CAAtB,CAAZ;AACA,WAAO,UAAUL,CAAV,GAAc,GAAd,GAAoBC,CAApB,GAAwB,GAAxB,GAA8BC,CAA9B,GAAkC,GAAlC,GAAwCE,KAAxC,GAAgD,GAAvD;AACD;AACF,CAlBD;;AAoBA,eAAeX,cAAf","sourcesContent":["/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport isWebColor from '../isWebColor';\nimport processColor from '../../exports/processColor';\n\nvar normalizeColor = function normalizeColor(color) {\n  var opacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n\n  if (color == null) return;\n\n  if (typeof color === 'string' && isWebColor(color)) {\n    return color;\n  }\n\n  var colorInt = processColor(color);\n  if (colorInt != null) {\n    var r = colorInt >> 16 & 255;\n    var g = colorInt >> 8 & 255;\n    var b = colorInt & 255;\n    var a = (colorInt >> 24 & 255) / 255;\n    var alpha = (a * opacity).toFixed(2);\n    return 'rgba(' + r + ',' + g + ',' + b + ',' + alpha + ')';\n  }\n};\n\nexport default normalizeColor;"]},"metadata":{},"sourceType":"module"}