{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { notificationInit, notificationClose, notificationOn, getSystemInfo, checkAppUpdate } from \"../../utils/system\";\nimport * as auth from \"../../services/auth\";\nimport { systemDataServices } from \"../../services/database\";\nvar type = \"system\";\nexport var APP_ON_BOOTED = type + \"APP_ON_BOOTING\";\nexport var APP_ON_BOOT_FAILED = type + \"APP_ON_BOOT_FAILED\";\nexport var Third_PARTY_SERVICE_INIT = type + \"Third_PARTY_SERVICE_INIT\";\nexport var SYSTEM_INFORMATION_FROM_DEVICE_READ = type + \"SYSTEM_INFORMATION_FROM_DEVICE_READ\";\nexport var SYSTEM_INFORMATION_FROM_DATABASE_READING = type + \"SYSTEM_INFORMATION_FROM_DATABASE_READING\";\nexport var SYSTEM_INFORMATION_FROM_DATABASE_READ_SUCCESS = type + \"SYSTEM_INFORMATION_FROM_DATABASE_READ_SUCCESS\";\nexport var SYSTEM_INFORMATION_FROM_DATABASE_READ_FAILED = type + \"SYSTEM_INFORMATION_FROM_DATABASE_READ_FAILED\";\nexport var NOTIFICATION_INIT_LOADING = type + \"NOTIFICATION_INIT_LOADING\";\nexport var NOTIFICATION_INIT_LOADED = type + \"NOTIFICATION_INIT_LOADED\";\nexport var NOTIFICATION_INIT_LOAD_FAILED = type + \"NOTIFICATION_INIT_LOAD_FAILED\";\nexport var NOTIFICATION_START = type + \"NOTIFICATION_START\";\nexport var NOTIFICATION_CLOSED = type + \"NOTIFICATION_CLOSED\";\nexport function app_On_Booted() {\n  return function (dispatch) {\n    dispatch({\n      type: APP_ON_BOOTED\n    });\n  };\n}\nexport function app_On_Boot_Failed(_ref) {\n  var error = _ref.error;\n  return function (dispatch) {\n    dispatch({\n      type: APP_ON_BOOT_FAILED,\n      error: error\n    });\n  };\n}\nexport function third_Party_Service_Init() {\n  return function (dispatch) {\n    dispatch({\n      type: Third_PARTY_SERVICE_INIT\n    });\n  };\n}\nexport function read_System_Infomation_From_Device() {\n  return function (dispatch) {\n    var systemInfo = getSystemInfo();\n    dispatch({\n      type: SYSTEM_INFORMATION_FROM_DEVICE_READ,\n      systemInfo: systemInfo\n    });\n    return systemInfo;\n  };\n}\nexport function read_System_Infomation_From_Database() {\n  return function (dispatch) {\n    dispatch({\n      type: SYSTEM_INFORMATION_FROM_DATABASE_READING\n    });\n    return new Promise(function (resolve, reject) {\n      systemDataServices.readSystemInformation().then(function (info) {\n        var android = info.android,\n            ios = info.ios;\n\n        var _checkAppUpdate = checkAppUpdate({\n          android: android,\n          ios: ios\n        }),\n            updateNeeded = _checkAppUpdate.updateNeeded,\n            forceUpdate = _checkAppUpdate.forceUpdate;\n\n        var systemInfo = _objectSpread({}, info, {\n          updateNeeded: updateNeeded,\n          forceUpdate: forceUpdate\n        });\n\n        resolve(systemInfo);\n        dispatch({\n          type: SYSTEM_INFORMATION_FROM_DATABASE_READ_SUCCESS,\n          systemInfo: systemInfo\n        });\n      }).catch(function (error) {\n        console.log(error);\n        reject({\n          error: error\n        });\n        dispatch({\n          type: SYSTEM_INFORMATION_FROM_DATABASE_READ_FAILED,\n          error: error\n        });\n      });\n    });\n  };\n}\nexport function notification_Init() {\n  return function (dispatch) {\n    dispatch({\n      type: NOTIFICATION_INIT_LOADING\n    });\n    return new Promise(function (resolve, reject) {\n      notificationInit().then(function (_ref2) {\n        var token = _ref2.token;\n        resolve({\n          token: token\n        });\n        dispatch({\n          type: NOTIFICATION_INIT_LOADED,\n          token: token\n        });\n      }).catch(function (error) {\n        console.log(error);\n        reject({\n          error: error\n        });\n        dispatch({\n          type: NOTIFICATION_INIT_LOAD_FAILED,\n          error: error\n        });\n      });\n    });\n  };\n}\nexport function notification_On() {\n  return function (dispatch) {\n    notificationOn();\n    return dispatch({\n      type: NOTIFICATION_START\n    });\n  };\n}\nexport function notification_Close() {\n  return function (dispatch) {\n    notificationClose();\n    return dispatch({\n      type: NOTIFICATION_CLOSED\n    });\n  };\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/marslab-library-react-native/redux/system/actions.js"],"names":["notificationInit","notificationClose","notificationOn","getSystemInfo","checkAppUpdate","auth","systemDataServices","type","APP_ON_BOOTED","APP_ON_BOOT_FAILED","Third_PARTY_SERVICE_INIT","SYSTEM_INFORMATION_FROM_DEVICE_READ","SYSTEM_INFORMATION_FROM_DATABASE_READING","SYSTEM_INFORMATION_FROM_DATABASE_READ_SUCCESS","SYSTEM_INFORMATION_FROM_DATABASE_READ_FAILED","NOTIFICATION_INIT_LOADING","NOTIFICATION_INIT_LOADED","NOTIFICATION_INIT_LOAD_FAILED","NOTIFICATION_START","NOTIFICATION_CLOSED","app_On_Booted","dispatch","app_On_Boot_Failed","error","third_Party_Service_Init","read_System_Infomation_From_Device","systemInfo","read_System_Infomation_From_Database","Promise","resolve","reject","readSystemInformation","then","info","android","ios","updateNeeded","forceUpdate","catch","console","log","notification_Init","token","notification_On","notification_Close"],"mappings":"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","sourcesContent":["import {\r\n    notificationInit,\r\n    notificationClose,\r\n    notificationOn,\r\n    getSystemInfo,\r\n    checkAppUpdate\r\n} from \"../../utils/system\";\r\n\r\nimport * as auth from \"../../services/auth\";\r\n\r\nimport { systemDataServices  } from \"../../services/database\";\r\n\r\nconst type = \"system\";\r\n\r\n\r\nexport const APP_ON_BOOTED = type + \"APP_ON_BOOTING\";\r\nexport const APP_ON_BOOT_FAILED = type + \"APP_ON_BOOT_FAILED\";\r\n\r\nexport const Third_PARTY_SERVICE_INIT = type + \"Third_PARTY_SERVICE_INIT\";\r\n\r\nexport const SYSTEM_INFORMATION_FROM_DEVICE_READ =\r\n    type + \"SYSTEM_INFORMATION_FROM_DEVICE_READ\";\r\n\r\nexport const SYSTEM_INFORMATION_FROM_DATABASE_READING =\r\n    type + \"SYSTEM_INFORMATION_FROM_DATABASE_READING\";\r\nexport const SYSTEM_INFORMATION_FROM_DATABASE_READ_SUCCESS =\r\n    type + \"SYSTEM_INFORMATION_FROM_DATABASE_READ_SUCCESS\";\r\nexport const SYSTEM_INFORMATION_FROM_DATABASE_READ_FAILED =\r\n    type + \"SYSTEM_INFORMATION_FROM_DATABASE_READ_FAILED\";\r\n\r\nexport const NOTIFICATION_INIT_LOADING = type + \"NOTIFICATION_INIT_LOADING\";\r\nexport const NOTIFICATION_INIT_LOADED = type + \"NOTIFICATION_INIT_LOADED\";\r\nexport const NOTIFICATION_INIT_LOAD_FAILED =\r\n    type + \"NOTIFICATION_INIT_LOAD_FAILED\";\r\n\r\nexport const NOTIFICATION_START = type + \"NOTIFICATION_START\";\r\nexport const NOTIFICATION_CLOSED = type + \"NOTIFICATION_CLOSED\";\r\n\r\nexport function app_On_Booted() {\r\n    return dispatch => {\r\n        dispatch({ type: APP_ON_BOOTED });\r\n    };\r\n}\r\n\r\nexport function app_On_Boot_Failed({ error }) {\r\n    return dispatch => {\r\n        dispatch({ type: APP_ON_BOOT_FAILED, error });\r\n    };\r\n}\r\n\r\nexport function third_Party_Service_Init(){\r\n    return dispatch => {\r\n        dispatch({ type: Third_PARTY_SERVICE_INIT });\r\n    };\r\n}\r\n\r\nexport function read_System_Infomation_From_Device() {\r\n    return dispatch => {\r\n        const systemInfo = getSystemInfo();\r\n        dispatch({ type: SYSTEM_INFORMATION_FROM_DEVICE_READ, systemInfo });\r\n        return systemInfo;\r\n    };\r\n}\r\n\r\nexport function read_System_Infomation_From_Database() {\r\n    return dispatch => {\r\n        dispatch({ type: SYSTEM_INFORMATION_FROM_DATABASE_READING });\r\n        return new Promise((resolve, reject) => {\r\n            systemDataServices.readSystemInformation()\r\n                .then(info => {\r\n                    const { android, ios } = info;\r\n                    const { updateNeeded, forceUpdate } = checkAppUpdate({\r\n                        android,\r\n                        ios\r\n                    });\r\n                    const systemInfo = { ...info, updateNeeded, forceUpdate };\r\n\r\n                    resolve(systemInfo);\r\n                    dispatch({\r\n                        type: SYSTEM_INFORMATION_FROM_DATABASE_READ_SUCCESS,\r\n                        systemInfo\r\n                    });\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    reject({ error });\r\n                    dispatch({\r\n                        type: SYSTEM_INFORMATION_FROM_DATABASE_READ_FAILED,\r\n                        error\r\n                    });\r\n                });\r\n        });\r\n    };\r\n}\r\n\r\nexport function notification_Init() {\r\n    return dispatch => {\r\n        dispatch({ type: NOTIFICATION_INIT_LOADING });\r\n        return new Promise((resolve, reject) => {\r\n            notificationInit()\r\n                .then(({ token }) => {\r\n                    resolve({ token });\r\n                    dispatch({ type: NOTIFICATION_INIT_LOADED, token });\r\n                })\r\n                .catch(error => {\r\n                    console.log(error);\r\n                    reject({ error });\r\n                    dispatch({ type: NOTIFICATION_INIT_LOAD_FAILED, error });\r\n                });\r\n        });\r\n    };\r\n}\r\n\r\nexport function notification_On() {\r\n    return dispatch => {\r\n        notificationOn();\r\n        return dispatch({ type: NOTIFICATION_START });\r\n    };\r\n}\r\n\r\nexport function notification_Close() {\r\n    return dispatch => {\r\n        notificationClose();\r\n        return dispatch({ type: NOTIFICATION_CLOSED });\r\n    };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}