{"ast":null,"code":"import { backend } from \"../../marslab-library-react-native/utils/helper\";\nvar objectName = \"RouteTicket\";\nexport function create(_ref) {\n  var data = _ref.data;\n  return new Promise(function (resolve, reject) {\n    var apiName = \"http\" + objectName + \"Create\";\n    var _data = data,\n        routeIds = _data.routeIds;\n    data = {\n      routeIds: routeIds\n    };\n    data = backend.processData({\n      data: data\n    });\n    backend.callApi({\n      apiName: apiName,\n      data: data\n    }).then(function (result) {\n      resolve(result);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/services/backend/routeTicket.js"],"names":["backend","objectName","create","data","Promise","resolve","reject","apiName","routeIds","processData","callApi","then","result","catch","error"],"mappings":"AAAA,SAASA,OAAT;AAEA,IAAMC,UAAU,GAAG,aAAnB;AAEA,OAAO,SAASC,MAAT,OAEF;AAAA,MADDC,IACC,QADDA,IACC;AACD,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtC,QAAMC,OAAO,YAAUN,UAAV,WAAb;AADsC,gBAKlCE,IALkC;AAAA,QAIpCK,QAJoC,SAIpCA,QAJoC;AAOtCL,IAAAA,IAAI,GAAG;AACLK,MAAAA,QAAQ,EAARA;AADK,KAAP;AAIAL,IAAAA,IAAI,GAAGH,OAAO,CAACS,WAAR,CAAoB;AAACN,MAAAA,IAAI,EAAJA;AAAD,KAApB,CAAP;AAEAH,IAAAA,OAAO,CACJU,OADH,CACW;AAAEH,MAAAA,OAAO,EAAPA,OAAF;AAAWJ,MAAAA,IAAI,EAAJA;AAAX,KADX,EAEGQ,IAFH,CAEQ,UAAAC,MAAM,EAAI;AACdP,MAAAA,OAAO,CAACO,MAAD,CAAP;AACD,KAJH,EAKGC,KALH,CAKS,UAAAC,KAAK,EAAI;AACdR,MAAAA,MAAM,CAACQ,KAAD,CAAN;AACD,KAPH;AAQD,GArBM,CAAP;AAsBD","sourcesContent":["import { backend } from \"../../marslab-library-react-native/utils/helper\";\r\n\r\nconst objectName = \"RouteTicket\";\r\n\r\nexport function create({\r\n    data\r\n  }) {\r\n    return new Promise((resolve, reject) => {\r\n      const apiName = `http${objectName}Create`;\r\n\r\n      const {\r\n        routeIds\r\n      } = data;\r\n\r\n      data = {\r\n        routeIds\r\n      }\r\n\r\n      data = backend.processData({data})\r\n\r\n      backend\r\n        .callApi({ apiName, data })\r\n        .then(result => {\r\n          resolve(result);\r\n        })\r\n        .catch(error => {\r\n          reject(error);\r\n        });\r\n    });\r\n  }"]},"metadata":{},"sourceType":"module"}