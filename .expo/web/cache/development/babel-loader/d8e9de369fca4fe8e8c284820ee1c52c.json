{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\components\\\\organisms\\\\RouteList\\\\index.js\";\nimport React from 'react';\nimport { FlatList, Text, TouchableOpacity, View } from \"../../atoms\";\nimport { Card, CardLabel, CardSection, IconButton } from \"../../molecules\";\nimport ContentLoader, { Rect } from 'react-content-loader/native';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport styles from \"./styles\";\n\nvar RouteList = function RouteList(_ref) {\n  var data = _ref.data,\n      style = _ref.style,\n      subTitle1 = _ref.subTitle1,\n      subTitle2 = _ref.subTitle2,\n      onRouteMapPress = _ref.onRouteMapPress,\n      readLoading = _ref.readLoading;\n\n  if (readLoading) {\n    return React.createElement(View, {\n      style: style.container,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }\n    }, React.createElement(Card, {\n      style: style.card,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }\n    }, React.createElement(View, {\n      style: style.rowOne,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 21\n      }\n    }, React.createElement(ContentLoader, {\n      speed: 1,\n      width: \"100%\",\n      height: 40,\n      backgroundColor: \"#bfbfbf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 25\n      }\n    }, React.createElement(Rect, {\n      x: \"0%\",\n      y: \"8\",\n      rx: \"4\",\n      ry: \"4\",\n      width: \"80%\",\n      height: \"24\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 29\n      }\n    }))), React.createElement(View, {\n      style: style.line,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 21\n      }\n    }), React.createElement(View, {\n      style: style.rowTwo,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 21\n      }\n    }, React.createElement(ContentLoader, {\n      speed: 1,\n      width: \"100%\",\n      height: 30,\n      backgroundColor: \"#bfbfbf\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 25\n      }\n    }, React.createElement(Rect, {\n      x: \"0%\",\n      y: \"8\",\n      rx: \"4\",\n      ry: \"4\",\n      width: \"100\",\n      height: \"16\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 29\n      }\n    })))));\n  } else return data[0] === undefined ? Platform.OS === \"ios\" ? React.createElement(Card, {\n    style: {\n      backgroundColor: \"transparent\",\n      elevation: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 15\n    }\n  }, React.createElement(CardSection, {\n    style: [styles.emptySection, {\n      elevation: 0\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"inbox\",\n    size: 64,\n    style: styles.emptyIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 19\n    }\n  }))) : React.createElement(Card, {\n    style: {\n      backgroundColor: \"transparent\",\n      elevation: 0\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 15\n    }\n  }, React.createElement(CardSection, {\n    style: [styles.emptySection, {\n      elevation: 0\n    }],\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }\n  }, React.createElement(Icon, {\n    name: \"inbox\",\n    size: 64,\n    style: styles.emptyIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 19\n    }\n  }))) : React.createElement(FlatList, {\n    data: data,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return onRouteMapPress(item);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }\n      }, React.createElement(View, {\n        style: style.container,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }\n      }, React.createElement(Card, {\n        style: style.card,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 29\n        }\n      }, React.createElement(View, {\n        style: style.rowOne,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 33\n        }\n      }, React.createElement(Text, {\n        style: style.areaName,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 37\n        }\n      }, item.title), React.createElement(IconButton, {\n        iconName: \"md-arrow-forward\",\n        iconColor: \"#f18a22\",\n        iconSize: 26,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 37\n        }\n      })), React.createElement(View, {\n        style: style.line,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }\n      }), React.createElement(View, {\n        style: style.rowTwo,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 33\n        }\n      }, React.createElement(CardLabel, {\n        containerStyle: style.subContainer,\n        iconStyle: style.icon,\n        iconName: \"circle\",\n        iconColor: \"#65FF03\",\n        iconSize: 8,\n        label: subTitle1,\n        labelValue: item.ongoingRoutes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 37\n        }\n      }), React.createElement(CardLabel, {\n        containerStyle: style.subContainer,\n        iconStyle: style.icon,\n        iconName: \"circle\",\n        iconColor: \"#ff9900\",\n        iconSize: 8,\n        label: subTitle2,\n        labelValue: item.pendingRoutes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 37\n        }\n      })))));\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  });\n};\n\nexport { RouteList };","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/components/organisms/RouteList/index.js"],"names":["React","FlatList","Text","TouchableOpacity","View","Card","CardLabel","CardSection","IconButton","ContentLoader","Rect","Icon","styles","RouteList","data","style","subTitle1","subTitle2","onRouteMapPress","readLoading","container","card","rowOne","line","rowTwo","undefined","Platform","OS","backgroundColor","elevation","emptySection","emptyIcon","item","areaName","title","subContainer","icon","ongoingRoutes","pendingRoutes","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\nimport {\r\n    FlatList, \r\n    Text,\r\n    TouchableOpacity, \r\n    View\r\n} from \"../../atoms\";\r\n  \r\nimport {\r\n    Card,\r\n    CardLabel, \r\n    CardSection,\r\n    IconButton, \r\n} from '../../molecules';\r\n\r\nimport ContentLoader, { Rect } from 'react-content-loader/native'\r\nimport Icon from \"react-native-vector-icons/FontAwesome\";\r\nimport styles from \"./styles\";\r\n\r\nconst RouteList = ({\r\n    data,\r\n    style,\r\n    subTitle1,\r\n    subTitle2,\r\n    onRouteMapPress,\r\n    readLoading\r\n}) => {\r\n    if(readLoading){\r\n        return(\r\n            <View style={style.container}>\r\n                <Card style={style.card}>\r\n                    <View style={style.rowOne}>\r\n                        <ContentLoader\r\n                            speed={1}\r\n                            width={\"100%\"}\r\n                            height={40}\r\n                            backgroundColor= \"#bfbfbf\"\r\n                        >\r\n                            <Rect x=\"0%\" y=\"8\" rx=\"4\" ry=\"4\" width=\"80%\" height=\"24\" />\r\n                        </ContentLoader>\r\n                    </View>\r\n                    <View style={style.line}/>\r\n                    <View style={style.rowTwo}>\r\n                        <ContentLoader\r\n                            speed={1}\r\n                            width={\"100%\"}\r\n                            height={30}\r\n                            backgroundColor= \"#bfbfbf\"\r\n                        >\r\n                            <Rect x=\"0%\" y=\"8\" rx=\"4\" ry=\"4\" width=\"100\" height=\"16\" />\r\n                            \r\n                        </ContentLoader>\r\n                    </View>\r\n                </Card>\r\n            </View>\r\n        );\r\n    } \r\n    else\r\n        return data[0] === undefined ? (\r\n            Platform.OS === \"ios\" ? (\r\n              <Card style={{ backgroundColor: \"transparent\", elevation: 0 }}>\r\n                <CardSection style={[styles.emptySection, { elevation: 0 }]}>\r\n                  <Icon name=\"inbox\" size={64} style={styles.emptyIcon} />\r\n                </CardSection>\r\n              </Card>\r\n            ) : (\r\n              <Card style={{ backgroundColor: \"transparent\", elevation: 0 }}>\r\n                <CardSection style={[styles.emptySection, { elevation: 0 }]}>\r\n                  <Icon name=\"inbox\" size={64} style={styles.emptyIcon} />\r\n                </CardSection>\r\n              </Card>\r\n            )\r\n        ) : (  \r\n            <FlatList\r\n                data={data}\r\n                renderItem={({ item }) =>\r\n                    <TouchableOpacity\r\n                        onPress={() => onRouteMapPress(item)}\r\n                    >\r\n                        <View style={style.container}>\r\n                            <Card style={style.card}>\r\n                                <View style={style.rowOne}>\r\n                                    <Text style={style.areaName}>\r\n                                        {item.title}\r\n                                    </Text>\r\n                                    <IconButton\r\n                                        iconName='md-arrow-forward'\r\n                                        iconColor='#f18a22'\r\n                                        iconSize={26}\r\n                                    />\r\n                                </View>\r\n                                <View style={style.line}/>\r\n                                <View style={style.rowTwo}>\r\n                                    <CardLabel\r\n                                        containerStyle={style.subContainer}\r\n                                        iconStyle={style.icon}\r\n                                        iconName='circle'\r\n                                        iconColor='#65FF03'\r\n                                        iconSize={8}\r\n                                        label={subTitle1}\r\n                                        labelValue={item.ongoingRoutes}\r\n                                    />\r\n                                    <CardLabel\r\n                                        containerStyle={style.subContainer}\r\n                                        iconStyle={style.icon}\r\n                                        iconName='circle'\r\n                                        iconColor='#ff9900'\r\n                                        iconSize={8}\r\n                                        label={subTitle2}\r\n                                        labelValue={item.pendingRoutes}\r\n                                    />\r\n                                </View>\r\n                            </Card>\r\n                        </View>\r\n                    </TouchableOpacity>\r\n                }\r\n                keyExtractor={item => item.id}\r\n            />\r\n    );\r\n};\r\n\r\nexport { RouteList }; "]},"metadata":{},"sourceType":"module"}