{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport NativeAnimatedHelper from \"../NativeAnimatedHelper\";\n\nvar Animation = function () {\n  function Animation() {\n    _classCallCheck(this, Animation);\n  }\n\n  Animation.prototype.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  Animation.prototype.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  Animation.prototype.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    throw new Error('This animation type cannot be offloaded to native');\n  };\n\n  Animation.prototype.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  Animation.prototype.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    animatedValue.__makeNative();\n\n    this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n    NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n  };\n\n  return Animation;\n}();\n\nexport default Animation;","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-web/dist/vendor/react-native/Animated/animations/Animation.js"],"names":["_classCallCheck","instance","Constructor","TypeError","NativeAnimatedHelper","Animation","prototype","start","fromValue","onUpdate","onEnd","previousAnimation","animatedValue","stop","__nativeId","API","stopAnimation","__getNativeAnimationConfig","Error","__debouncedOnEnd","result","__onEnd","__startNativeAnimation","__makeNative","generateNewAnimationId","startAnimatingNode","__getNativeTag","bind"],"mappings":"AASA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,OAAOC,oBAAP;;AAKA,IAAIC,SAAS,GAAG,YAAY;AAC1B,WAASA,SAAT,GAAqB;AACnBL,IAAAA,eAAe,CAAC,IAAD,EAAOK,SAAP,CAAf;AACD;;AAEDA,EAAAA,SAAS,CAACC,SAAV,CAAoBC,KAApB,GAA4B,SAASA,KAAT,CAAeC,SAAf,EAA0BC,QAA1B,EAAoCC,KAApC,EAA2CC,iBAA3C,EAA8DC,aAA9D,EAA6E,CAAE,CAA3G;;AAEAP,EAAAA,SAAS,CAACC,SAAV,CAAoBO,IAApB,GAA2B,SAASA,IAAT,GAAgB;AACzC,QAAI,KAAKC,UAAT,EAAqB;AACnBV,MAAAA,oBAAoB,CAACW,GAArB,CAAyBC,aAAzB,CAAuC,KAAKF,UAA5C;AACD;AACF,GAJD;;AAMAT,EAAAA,SAAS,CAACC,SAAV,CAAoBW,0BAApB,GAAiD,SAASA,0BAAT,GAAsC;AAGrF,UAAM,IAAIC,KAAJ,CAAU,mDAAV,CAAN;AACD,GAJD;;AAQAb,EAAAA,SAAS,CAACC,SAAV,CAAoBa,gBAApB,GAAuC,SAASA,gBAAT,CAA0BC,MAA1B,EAAkC;AACvE,QAAIV,KAAK,GAAG,KAAKW,OAAjB;AACA,SAAKA,OAAL,GAAe,IAAf;AACAX,IAAAA,KAAK,IAAIA,KAAK,CAACU,MAAD,CAAd;AACD,GAJD;;AAMAf,EAAAA,SAAS,CAACC,SAAV,CAAoBgB,sBAApB,GAA6C,SAASA,sBAAT,CAAgCV,aAAhC,EAA+C;AAC1FA,IAAAA,aAAa,CAACW,YAAd;;AACA,SAAKT,UAAL,GAAkBV,oBAAoB,CAACoB,sBAArB,EAAlB;AACApB,IAAAA,oBAAoB,CAACW,GAArB,CAAyBU,kBAAzB,CAA4C,KAAKX,UAAjD,EAA6DF,aAAa,CAACc,cAAd,EAA7D,EAA6F,KAAKT,0BAAL,EAA7F,EAAgI,KAAKE,gBAAL,CAAsBQ,IAAtB,CAA2B,IAA3B,CAAhI;AACD,GAJD;;AAMA,SAAOtB,SAAP;AACD,CAlCe,EAAhB;;AAoCA,eAAeA,SAAf","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n * @format\n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport NativeAnimatedHelper from '../NativeAnimatedHelper';\n\n// Important note: start() and stop() will only be called at most once.\n// Once an animation has been stopped or finished its course, it will\n// not be reused.\nvar Animation = function () {\n  function Animation() {\n    _classCallCheck(this, Animation);\n  }\n\n  Animation.prototype.start = function start(fromValue, onUpdate, onEnd, previousAnimation, animatedValue) {};\n\n  Animation.prototype.stop = function stop() {\n    if (this.__nativeId) {\n      NativeAnimatedHelper.API.stopAnimation(this.__nativeId);\n    }\n  };\n\n  Animation.prototype.__getNativeAnimationConfig = function __getNativeAnimationConfig() {\n    // Subclasses that have corresponding animation implementation done in native\n    // should override this method\n    throw new Error('This animation type cannot be offloaded to native');\n  };\n  // Helper function for subclasses to make sure onEnd is only called once.\n\n\n  Animation.prototype.__debouncedOnEnd = function __debouncedOnEnd(result) {\n    var onEnd = this.__onEnd;\n    this.__onEnd = null;\n    onEnd && onEnd(result);\n  };\n\n  Animation.prototype.__startNativeAnimation = function __startNativeAnimation(animatedValue) {\n    animatedValue.__makeNative();\n    this.__nativeId = NativeAnimatedHelper.generateNewAnimationId();\n    NativeAnimatedHelper.API.startAnimatingNode(this.__nativeId, animatedValue.__getNativeTag(), this.__getNativeAnimationConfig(), this.__debouncedOnEnd.bind(this));\n  };\n\n  return Animation;\n}();\n\nexport default Animation;"]},"metadata":{},"sourceType":"module"}