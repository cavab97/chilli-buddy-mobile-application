{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport AsyncStorage from \"react-native-web/dist/exports/AsyncStorage\";\nvar localStorage = AsyncStorage;\nexport function storeData(_ref) {\n  var key, value;\n  return _regeneratorRuntime.async(function storeData$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          key = _ref.key, value = _ref.value;\n          return _context2.abrupt(\"return\", new Promise(function _callee(resolve, reject) {\n            return _regeneratorRuntime.async(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.prev = 0;\n                    value = JSON.stringify(value);\n                    _context.next = 4;\n                    return _regeneratorRuntime.awrap(localStorage.setItem(key, value));\n\n                  case 4:\n                    resolve({\n                      status: \"Store Data Success\"\n                    });\n                    _context.next = 10;\n                    break;\n\n                  case 7:\n                    _context.prev = 7;\n                    _context.t0 = _context[\"catch\"](0);\n                    reject({\n                      error: _context.t0\n                    });\n\n                  case 10:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, null, null, [[0, 7]], Promise);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function getData(_ref2) {\n  var key;\n  return _regeneratorRuntime.async(function getData$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          key = _ref2.key;\n          return _context4.abrupt(\"return\", new Promise(function _callee2(resolve, reject) {\n            var value;\n            return _regeneratorRuntime.async(function _callee2$(_context3) {\n              while (1) {\n                switch (_context3.prev = _context3.next) {\n                  case 0:\n                    _context3.prev = 0;\n                    _context3.next = 3;\n                    return _regeneratorRuntime.awrap(localStorage.getItem(key));\n\n                  case 3:\n                    value = _context3.sent;\n                    value = JSON.parse(value);\n                    resolve({\n                      value: value\n                    });\n                    _context3.next = 11;\n                    break;\n\n                  case 8:\n                    _context3.prev = 8;\n                    _context3.t0 = _context3[\"catch\"](0);\n                    reject({\n                      error: error\n                    });\n\n                  case 11:\n                  case \"end\":\n                    return _context3.stop();\n                }\n              }\n            }, null, null, [[0, 8]], Promise);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}\nexport function removeData(_ref3) {\n  var key;\n  return _regeneratorRuntime.async(function removeData$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          key = _ref3.key;\n          return _context6.abrupt(\"return\", new Promise(function _callee3(resolve, reject) {\n            return _regeneratorRuntime.async(function _callee3$(_context5) {\n              while (1) {\n                switch (_context5.prev = _context5.next) {\n                  case 0:\n                    _context5.prev = 0;\n                    _context5.next = 3;\n                    return _regeneratorRuntime.awrap(localStorage.removeItem(key));\n\n                  case 3:\n                    resolve({\n                      status: \"Remove Data Success\"\n                    });\n                    _context5.next = 9;\n                    break;\n\n                  case 6:\n                    _context5.prev = 6;\n                    _context5.t0 = _context5[\"catch\"](0);\n                    reject({\n                      error: error\n                    });\n\n                  case 9:\n                  case \"end\":\n                    return _context5.stop();\n                }\n              }\n            }, null, null, [[0, 6]], Promise);\n          }));\n\n        case 2:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/marslab-library-react-native/utils/common/localStorage/index.js"],"names":["localStorage","AsyncStorage","storeData","key","value","Promise","resolve","reject","JSON","stringify","setItem","status","error","getData","getItem","parse","removeData","removeItem"],"mappings":";;AAEA,IAAMA,YAAY,GAAGC,YAArB;AAEA,OAAO,SAAeC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAA2BC,UAAAA,GAA3B,QAA2BA,GAA3B,EAAgCC,KAAhC,QAAgCA,KAAhC;AAAA,4CACE,IAAIC,OAAJ,CAAY,iBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAEfH,oBAAAA,KAAK,GAAGI,IAAI,CAACC,SAAL,CAAeL,KAAf,CAAR;AAFe;AAAA,qDAGTJ,YAAY,CAACU,OAAb,CAAqBP,GAArB,EAA0BC,KAA1B,CAHS;;AAAA;AAIfE,oBAAAA,OAAO,CAAC;AAAEK,sBAAAA,MAAM,EAAE;AAAV,qBAAD,CAAP;AAJe;AAAA;;AAAA;AAAA;AAAA;AAMfJ,oBAAAA,MAAM,CAAC;AAAEK,sBAAAA,KAAK;AAAP,qBAAD,CAAN;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,OAAO,SAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAyBV,UAAAA,GAAzB,SAAyBA,GAAzB;AAAA,4CACE,IAAIE,OAAJ,CAAY,kBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAEGP,YAAY,CAACc,OAAb,CAAqBX,GAArB,CAFH;;AAAA;AAEXC,oBAAAA,KAFW;AAGfA,oBAAAA,KAAK,GAAGI,IAAI,CAACO,KAAL,CAAWX,KAAX,CAAR;AACAE,oBAAAA,OAAO,CAAC;AAAEF,sBAAAA,KAAK,EAALA;AAAF,qBAAD,CAAP;AAJe;AAAA;;AAAA;AAAA;AAAA;AAMfG,oBAAAA,MAAM,CAAC;AAAEK,sBAAAA,KAAK,EAALA;AAAF,qBAAD,CAAN;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAYP,OAAO,SAAeI,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAA4Bb,UAAAA,GAA5B,SAA4BA,GAA5B;AAAA,4CACI,IAAIE,OAAJ,CAAY,kBAAOC,OAAP,EAAgBC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qDAETP,YAAY,CAACiB,UAAb,CAAwBd,GAAxB,CAFS;;AAAA;AAIfG,oBAAAA,OAAO,CAAC;AAAEK,sBAAAA,MAAM,EAAE;AAAV,qBAAD,CAAP;AAJe;AAAA;;AAAA;AAAA;AAAA;AAMfJ,oBAAAA,MAAM,CAAC;AAAEK,sBAAAA,KAAK,EAALA;AAAF,qBAAD,CAAN;;AANe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAZ,CADJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { AsyncStorage } from \"react-native\";\r\n\r\nconst localStorage = AsyncStorage;\r\n\r\nexport async function storeData({ key, value }) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      value = JSON.stringify(value)\r\n      await localStorage.setItem(key, value);\r\n      resolve({ status: \"Store Data Success\" });\r\n    } catch (error) {\r\n      reject({ error });\r\n    }\r\n  });\r\n}\r\n\r\nexport async function getData({ key }) {\r\n  return new Promise(async (resolve, reject) => {\r\n    try {\r\n      let value = await localStorage.getItem(key);\r\n      value = JSON.parse(value)\r\n      resolve({ value });\r\n    } catch (e) {\r\n      reject({ error });\r\n    }\r\n  });\r\n}\r\n\r\nexport async function removeData({ key }) {\r\n    return new Promise(async (resolve, reject) => {\r\n      try {\r\n        await localStorage.removeItem(key);\r\n\r\n        resolve({ status: \"Remove Data Success\" });\r\n      } catch (e) {\r\n        reject({ error });\r\n      }\r\n    });\r\n  }"]},"metadata":{},"sourceType":"module"}