{"ast":null,"code":"'use strict';\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport ListView from \"../ListView\";\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SwipeableListViewDataSource from \"./SwipeableListViewDataSource\";\nimport SwipeableRow from \"../SwipeableRow\";\n\nvar SwipeableListView = function (_React$Component) {\n  _inherits(SwipeableListView, _React$Component);\n\n  SwipeableListView.getNewDataSource = function getNewDataSource() {\n    return new SwipeableListViewDataSource({\n      getRowData: function getRowData(data, sectionID, rowID) {\n        return data[sectionID][rowID];\n      },\n      getSectionHeaderData: function getSectionHeaderData(data, sectionID) {\n        return data[sectionID];\n      },\n      rowHasChanged: function rowHasChanged(row1, row2) {\n        return row1 !== row2;\n      },\n      sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {\n        return s1 !== s2;\n      }\n    });\n  };\n\n  function SwipeableListView(props, context) {\n    _classCallCheck(this, SwipeableListView);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this._listViewRef = null;\n    _this._shouldBounceFirstRowOnMount = false;\n\n    _this._onScroll = function (e) {\n      if (_this.props.dataSource.getOpenRowID()) {\n        _this.setState({\n          dataSource: _this.state.dataSource.setOpenRowID(null)\n        });\n      }\n\n      _this.props.onScroll && _this.props.onScroll(e);\n    };\n\n    _this._renderRow = function (rowData, sectionID, rowID) {\n      var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);\n\n      if (!slideoutView) {\n        return _this.props.renderRow(rowData, sectionID, rowID);\n      }\n\n      var shouldBounceOnMount = false;\n\n      if (_this._shouldBounceFirstRowOnMount) {\n        _this._shouldBounceFirstRowOnMount = false;\n        shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();\n      }\n\n      return React.createElement(SwipeableRow, {\n        slideoutView: slideoutView,\n        isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),\n        maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),\n        key: rowID,\n        onOpen: function onOpen() {\n          return _this._onOpen(rowData.id);\n        },\n        onClose: function onClose() {\n          return _this._onClose(rowData.id);\n        },\n        onSwipeEnd: function onSwipeEnd() {\n          return _this._setListViewScrollable(true);\n        },\n        onSwipeStart: function onSwipeStart() {\n          return _this._setListViewScrollable(false);\n        },\n        shouldBounceOnMount: shouldBounceOnMount\n      }, _this.props.renderRow(rowData, sectionID, rowID));\n    };\n\n    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;\n    _this.state = {\n      dataSource: _this.props.dataSource\n    };\n    return _this;\n  }\n\n  SwipeableListView.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {\n      this.setState({\n        dataSource: nextProps.dataSource\n      });\n    }\n  };\n\n  SwipeableListView.prototype.render = function render() {\n    var _this2 = this;\n\n    return React.createElement(ListView, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        _this2._listViewRef = _ref;\n      },\n      dataSource: this.state.dataSource.getDataSource(),\n      onScroll: this._onScroll,\n      renderRow: this._renderRow\n    }));\n  };\n\n  SwipeableListView.prototype._setListViewScrollable = function _setListViewScrollable(value) {\n    if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {\n      this._listViewRef.setNativeProps({\n        scrollEnabled: value\n      });\n    }\n  };\n\n  SwipeableListView.prototype.getScrollResponder = function getScrollResponder() {\n    if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {\n      return this._listViewRef.getScrollResponder();\n    }\n  };\n\n  SwipeableListView.prototype._getMaxSwipeDistance = function _getMaxSwipeDistance(rowData, sectionID, rowID) {\n    if (typeof this.props.maxSwipeDistance === 'function') {\n      return this.props.maxSwipeDistance(rowData, sectionID, rowID);\n    }\n\n    return this.props.maxSwipeDistance;\n  };\n\n  SwipeableListView.prototype._onOpen = function _onOpen(rowID) {\n    this.setState({\n      dataSource: this.state.dataSource.setOpenRowID(rowID)\n    });\n  };\n\n  SwipeableListView.prototype._onClose = function _onClose(rowID) {\n    this.setState({\n      dataSource: this.state.dataSource.setOpenRowID(null)\n    });\n  };\n\n  return SwipeableListView;\n}(React.Component);\n\nSwipeableListView.defaultProps = {\n  bounceFirstRowOnMount: false,\n  renderQuickActions: function renderQuickActions() {\n    return null;\n  }\n};\nSwipeableListView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  bounceFirstRowOnMount: PropTypes.bool.isRequired,\n  dataSource: PropTypes.instanceOf(SwipeableListViewDataSource).isRequired,\n  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  renderRow: PropTypes.func.isRequired,\n  renderQuickActions: PropTypes.func.isRequired\n} : {};\nexport default SwipeableListView;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/node_modules/react-native-web/dist/vendor/react-native/SwipeableListView/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ListView","PropTypes","React","SwipeableListViewDataSource","SwipeableRow","SwipeableListView","_React$Component","getNewDataSource","getRowData","data","sectionID","rowID","getSectionHeaderData","rowHasChanged","row1","row2","sectionHeaderHasChanged","s1","s2","props","context","_this","_listViewRef","_shouldBounceFirstRowOnMount","_onScroll","e","dataSource","getOpenRowID","setState","state","setOpenRowID","onScroll","_renderRow","rowData","slideoutView","renderQuickActions","renderRow","shouldBounceOnMount","getFirstRowID","createElement","isOpen","id","maxSwipeDistance","_getMaxSwipeDistance","onOpen","_onOpen","onClose","_onClose","onSwipeEnd","_setListViewScrollable","onSwipeStart","bounceFirstRowOnMount","UNSAFE_componentWillReceiveProps","nextProps","getDataSource","render","_this2","ref","_ref","setNativeProps","scrollEnabled","getScrollResponder","Component","defaultProps","propTypes","process","env","NODE_ENV","bool","isRequired","instanceOf","oneOfType","number","func"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SwipeableListView\n * @noflow\n */\n'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport ListView from '../ListView';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SwipeableListViewDataSource from './SwipeableListViewDataSource';\nimport SwipeableRow from '../SwipeableRow';\n\n/**\n * A container component that renders multiple SwipeableRow's in a ListView\n * implementation. This is designed to be a drop-in replacement for the\n * standard React Native `ListView`, so use it as if it were a ListView, but\n * with extra props, i.e.\n *\n * let ds = SwipeableListView.getNewDataSource();\n * ds.cloneWithRowsAndSections(dataBlob, ?sectionIDs, ?rowIDs);\n * // ..\n * <SwipeableListView renderRow={..} renderQuickActions={..} {..ListView props} />\n *\n * SwipeableRow can be used independently of this component, but the main\n * benefit of using this component is\n *\n * - It ensures that at most 1 row is swiped open (auto closes others)\n * - It can bounce the 1st row of the list so users know it's swipeable\n * - More to come\n */\nvar SwipeableListView = function (_React$Component) {\n  _inherits(SwipeableListView, _React$Component);\n\n  SwipeableListView.getNewDataSource = function getNewDataSource() {\n    return new SwipeableListViewDataSource({\n      getRowData: function getRowData(data, sectionID, rowID) {\n        return data[sectionID][rowID];\n      },\n      getSectionHeaderData: function getSectionHeaderData(data, sectionID) {\n        return data[sectionID];\n      },\n      rowHasChanged: function rowHasChanged(row1, row2) {\n        return row1 !== row2;\n      },\n      sectionHeaderHasChanged: function sectionHeaderHasChanged(s1, s2) {\n        return s1 !== s2;\n      }\n    });\n  };\n\n  function SwipeableListView(props, context) {\n    _classCallCheck(this, SwipeableListView);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props, context));\n\n    _this._listViewRef = null;\n    _this._shouldBounceFirstRowOnMount = false;\n\n    _this._onScroll = function (e) {\n      // Close any opens rows on ListView scroll\n      if (_this.props.dataSource.getOpenRowID()) {\n        _this.setState({\n          dataSource: _this.state.dataSource.setOpenRowID(null)\n        });\n      }\n      _this.props.onScroll && _this.props.onScroll(e);\n    };\n\n    _this._renderRow = function (rowData, sectionID, rowID) {\n      var slideoutView = _this.props.renderQuickActions(rowData, sectionID, rowID);\n\n      // If renderQuickActions is unspecified or returns falsey, don't allow swipe\n      if (!slideoutView) {\n        return _this.props.renderRow(rowData, sectionID, rowID);\n      }\n\n      var shouldBounceOnMount = false;\n      if (_this._shouldBounceFirstRowOnMount) {\n        _this._shouldBounceFirstRowOnMount = false;\n        shouldBounceOnMount = rowID === _this.props.dataSource.getFirstRowID();\n      }\n\n      return React.createElement(\n        SwipeableRow,\n        {\n          slideoutView: slideoutView,\n          isOpen: rowData.id === _this.props.dataSource.getOpenRowID(),\n          maxSwipeDistance: _this._getMaxSwipeDistance(rowData, sectionID, rowID),\n          key: rowID,\n          onOpen: function onOpen() {\n            return _this._onOpen(rowData.id);\n          },\n          onClose: function onClose() {\n            return _this._onClose(rowData.id);\n          },\n          onSwipeEnd: function onSwipeEnd() {\n            return _this._setListViewScrollable(true);\n          },\n          onSwipeStart: function onSwipeStart() {\n            return _this._setListViewScrollable(false);\n          },\n          shouldBounceOnMount: shouldBounceOnMount },\n        _this.props.renderRow(rowData, sectionID, rowID)\n      );\n    };\n\n    _this._shouldBounceFirstRowOnMount = _this.props.bounceFirstRowOnMount;\n    _this.state = {\n      dataSource: _this.props.dataSource\n    };\n    return _this;\n  }\n\n  SwipeableListView.prototype.UNSAFE_componentWillReceiveProps = function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.state.dataSource.getDataSource() !== nextProps.dataSource.getDataSource()) {\n      this.setState({\n        dataSource: nextProps.dataSource\n      });\n    }\n  };\n\n  SwipeableListView.prototype.render = function render() {\n    var _this2 = this;\n\n    return React.createElement(ListView, _extends({}, this.props, {\n      ref: function ref(_ref) {\n        _this2._listViewRef = _ref;\n      },\n      dataSource: this.state.dataSource.getDataSource(),\n      onScroll: this._onScroll,\n      renderRow: this._renderRow\n    }));\n  };\n\n  /**\n   * This is a work-around to lock vertical `ListView` scrolling on iOS and\n   * mimic Android behaviour. Locking vertical scrolling when horizontal\n   * scrolling is active allows us to significantly improve framerates\n   * (from high 20s to almost consistently 60 fps)\n   */\n  SwipeableListView.prototype._setListViewScrollable = function _setListViewScrollable(value) {\n    if (this._listViewRef && typeof this._listViewRef.setNativeProps === 'function') {\n      this._listViewRef.setNativeProps({\n        scrollEnabled: value\n      });\n    }\n  };\n\n  // Passing through ListView's getScrollResponder() function\n\n\n  SwipeableListView.prototype.getScrollResponder = function getScrollResponder() {\n    if (this._listViewRef && typeof this._listViewRef.getScrollResponder === 'function') {\n      return this._listViewRef.getScrollResponder();\n    }\n  };\n\n  // This enables rows having variable width slideoutView.\n\n\n  SwipeableListView.prototype._getMaxSwipeDistance = function _getMaxSwipeDistance(rowData, sectionID, rowID) {\n    if (typeof this.props.maxSwipeDistance === 'function') {\n      return this.props.maxSwipeDistance(rowData, sectionID, rowID);\n    }\n\n    return this.props.maxSwipeDistance;\n  };\n\n  SwipeableListView.prototype._onOpen = function _onOpen(rowID) {\n    this.setState({\n      dataSource: this.state.dataSource.setOpenRowID(rowID)\n    });\n  };\n\n  SwipeableListView.prototype._onClose = function _onClose(rowID) {\n    this.setState({\n      dataSource: this.state.dataSource.setOpenRowID(null)\n    });\n  };\n\n  return SwipeableListView;\n}(React.Component);\n\nSwipeableListView.defaultProps = {\n  bounceFirstRowOnMount: false,\n  renderQuickActions: function renderQuickActions() {\n    return null;\n  }\n};\nSwipeableListView.propTypes = process.env.NODE_ENV !== \"production\" ? {\n  /**\n   * To alert the user that swiping is possible, the first row can bounce\n   * on component mount.\n   */\n  bounceFirstRowOnMount: PropTypes.bool.isRequired,\n  /**\n   * Use `SwipeableListView.getNewDataSource()` to get a data source to use,\n   * then use it just like you would a normal ListView data source\n   */\n  dataSource: PropTypes.instanceOf(SwipeableListViewDataSource).isRequired,\n  // Maximum distance to open to after a swipe\n  maxSwipeDistance: PropTypes.oneOfType([PropTypes.number, PropTypes.func]).isRequired,\n  // Callback method to render the swipeable view\n  renderRow: PropTypes.func.isRequired,\n  // Callback method to render the view that will be unveiled on swipe\n  renderQuickActions: PropTypes.func.isRequired\n} : {};\n\n\nexport default SwipeableListView;"]},"metadata":{},"sourceType":"module"}