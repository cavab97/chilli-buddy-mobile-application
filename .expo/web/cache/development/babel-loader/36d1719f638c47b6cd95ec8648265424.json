{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport EventEmitter from \"../emitter/EventEmitter\";\nimport Platform from \"../../../exports/Platform\";\nimport invariant from 'fbjs/lib/invariant';\n\nvar NativeEventEmitter = function (_EventEmitter) {\n  _inherits(NativeEventEmitter, _EventEmitter);\n\n  function NativeEventEmitter(nativeModule) {\n    _classCallCheck(this, NativeEventEmitter);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      _this._nativeModule = nativeModule;\n    }\n\n    return _this;\n  }\n\n  NativeEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  NativeEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    invariant(eventType, 'eventType argument is required.');\n    var count = this.listeners(eventType).length;\n\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  NativeEventEmitter.prototype.removeSubscription = function removeSubscription(subscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n\n    _EventEmitter.prototype.removeSubscription.call(this, subscription);\n  };\n\n  return NativeEventEmitter;\n}(EventEmitter);\n\nexport default NativeEventEmitter;","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-web/dist/vendor/react-native/NativeEventEmitter/index.js"],"names":["_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","Object","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","EventEmitter","Platform","invariant","NativeEventEmitter","_EventEmitter","nativeModule","_this","OS","_nativeModule","addListener","eventType","listener","context","removeAllListeners","count","listeners","length","removeListeners","removeSubscription","subscription"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule NativeEventEmitter\n * \n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport EventEmitter from '../emitter/EventEmitter';\nimport Platform from '../../../exports/Platform';\n\nimport invariant from 'fbjs/lib/invariant';\n\n/**\n * Abstract base class for implementing event-emitting modules. This implements\n * a subset of the standard EventEmitter node module API.\n */\nvar NativeEventEmitter = function (_EventEmitter) {\n  _inherits(NativeEventEmitter, _EventEmitter);\n\n  function NativeEventEmitter(nativeModule) {\n    _classCallCheck(this, NativeEventEmitter);\n\n    var _this = _possibleConstructorReturn(this, _EventEmitter.call(this));\n\n    if (Platform.OS === 'ios') {\n      invariant(nativeModule, 'Native module cannot be null.');\n      _this._nativeModule = nativeModule;\n    }\n    return _this;\n  }\n\n  NativeEventEmitter.prototype.addListener = function addListener(eventType, listener, context) {\n    if (this._nativeModule != null) {\n      this._nativeModule.addListener(eventType);\n    }\n    return _EventEmitter.prototype.addListener.call(this, eventType, listener, context);\n  };\n\n  NativeEventEmitter.prototype.removeAllListeners = function removeAllListeners(eventType) {\n    invariant(eventType, 'eventType argument is required.');\n    var count = this.listeners(eventType).length;\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(count);\n    }\n    _EventEmitter.prototype.removeAllListeners.call(this, eventType);\n  };\n\n  NativeEventEmitter.prototype.removeSubscription = function removeSubscription(subscription) {\n    if (this._nativeModule != null) {\n      this._nativeModule.removeListeners(1);\n    }\n    _EventEmitter.prototype.removeSubscription.call(this, subscription);\n  };\n\n  return NativeEventEmitter;\n}(EventEmitter);\n\nexport default NativeEventEmitter;"]},"metadata":{},"sourceType":"module"}