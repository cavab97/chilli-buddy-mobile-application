{"ast":null,"code":"var _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\components\\\\templates\\\\CompletedUser\\\\index.js\";\nimport React from \"react\";\nimport styles from \"./styles\";\nimport { View, FlatList, TouchableOpacity, Text, Image } from \"../../atoms\";\nimport ContentLoader, { Rect, Circle } from 'react-content-loader/native';\nimport { ImageInfo } from \"../../molecules\";\n\nvar rewardListItem = function rewardListItem(item, index, uid) {\n  var timeCount = null;\n  var startTime = item.route ? item.route.startTime : new Date();\n\n  if (item.user.id && item.user.id === uid) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.rowSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.indexSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }\n    }, index + 1), React.createElement(View, {\n      style: styles.imageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }\n    }, React.createElement(ImageInfo, {\n      banner: item.user.photoURL ? item.user.photoURL : require(\"../../../../assets/DefaultAvatar.jpg\"),\n      imageContainer: styles.image,\n      imageStyle: styles.imageFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      style: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.titleSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }\n    }, \"You\")), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.indexSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, \"NOT FINALIZE\"))), React.createElement(View, {\n      style: styles.line,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }));\n  } else if (item.user.id && item.user.id !== uid) {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, index + 1), React.createElement(View, {\n      style: styles.imageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, React.createElement(ImageInfo, {\n      banner: item.user.photoURL ? item.user.photoURL : require(\"../../../../assets/DefaultAvatar.jpg\"),\n      imageContainer: styles.image,\n      imageStyle: styles.imageFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      style: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }\n    }, item.user.displayName ? item.user.displayName : \"Awarded\")), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 13\n      }\n    }, \"NOT FINALIZE\"))), React.createElement(View, {\n      style: styles.line,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }\n    }, React.createElement(View, {\n      style: styles.row,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }\n    }, React.createElement(Text, {\n      style: styles.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }\n    }, index + 1), React.createElement(View, {\n      style: styles.imageContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }\n    }, React.createElement(ImageInfo, {\n      banner: require(\"../../../../assets/DefaultAvatar.jpg\"),\n      imageContainer: styles.image,\n      imageStyle: styles.imageFrame,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 13\n      }\n    })), React.createElement(View, {\n      style: styles.titleContainer,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.title,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }\n    }, \"Awarded\")), React.createElement(View, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }\n    }, React.createElement(Text, {\n      style: styles.index,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }\n    }, \"NOT FINALIZE\"))), React.createElement(View, {\n      style: styles.line,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }));\n  }\n};\n\nvar UserCompleted = function UserCompleted(_ref) {\n  var data = _ref.data,\n      uid = _ref.uid,\n      message = _ref.message,\n      termsAndConditions = _ref.termsAndConditions,\n      readLoading = _ref.readLoading,\n      noUserImage = _ref.noUserImage,\n      noUserMessage = _ref.noUserMessage;\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, readLoading ? React.createElement(View, {\n    style: {\n      flex: 1\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 11\n    }\n  }, React.createElement(ContentLoader, {\n    speed: 1,\n    width: \"100%\",\n    height: 95,\n    backgroundColor: \"#d9d9d9\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 13\n    }\n  }, React.createElement(Rect, {\n    x: \"5\",\n    y: \"30\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"20\",\n    height: \"20\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 15\n    }\n  }), React.createElement(Circle, {\n    cx: \"19%\",\n    cy: \"45\",\n    r: \"30\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 15\n    }\n  }), React.createElement(Rect, {\n    x: \"30%\",\n    y: \"35\",\n    rx: \"4\",\n    ry: \"4\",\n    width: \"30%\",\n    height: \"16\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 15\n    }\n  })), React.createElement(View, {\n    style: styles.line,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }\n  })) : data.length !== 0 ? React.createElement(FlatList, {\n    data: data,\n    showsVerticalScrollIndicator: false,\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item,\n          index = _ref2.index;\n      return rewardListItem(item, index, uid);\n    },\n    keyExtractor: function keyExtractor(item) {\n      return item.id;\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 11\n    }\n  }) : React.createElement(View, {\n    style: styles.noUserContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }\n  }, React.createElement(Image, {\n    source: noUserImage,\n    style: styles.noUserImageStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), React.createElement(Text, {\n    style: styles.noUserTitle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }, noUserMessage)), React.createElement(View, {\n    style: styles.messageContainer,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }\n  }, React.createElement(Text, {\n    style: styles.textFontFamily,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 9\n    }\n  }, message), React.createElement(Text, {\n    style: styles.textColor,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, termsAndConditions)));\n};\n\nexport { UserCompleted };","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/components/templates/CompletedUser/index.js"],"names":["React","styles","View","FlatList","TouchableOpacity","Text","Image","ContentLoader","Rect","Circle","ImageInfo","rewardListItem","item","index","uid","timeCount","startTime","route","Date","user","id","rowSelected","indexSelected","imageContainer","photoURL","require","image","imageFrame","titleContainer","titleSelected","line","row","title","displayName","UserCompleted","data","message","termsAndConditions","readLoading","noUserImage","noUserMessage","container","flex","length","noUserContainer","noUserImageStyle","noUserTitle","messageContainer","textFontFamily","textColor"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP;AAEA,SACEC,IADF,EAEEC,QAFF,EAGEC,gBAHF,EAIEC,IAJF,EAKEC,KALF;AAOA,OAAOC,aAAP,IAAwBC,IAAxB,EAA8BC,MAA9B,QAA4C,6BAA5C;AACA,SAASC,SAAT;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,EAAsB;AAC3C,MAAIC,SAAS,GAAG,IAAhB;AACA,MAAMC,SAAS,GAAGJ,IAAI,CAACK,KAAL,GAAaL,IAAI,CAACK,KAAL,CAAWD,SAAxB,GAAoC,IAAIE,IAAJ,EAAtD;;AAEA,MAAIN,IAAI,CAACO,IAAL,CAAUC,EAAV,IAAgBR,IAAI,CAACO,IAAL,CAAUC,EAAV,KAAiBN,GAArC,EAA0C;AACxC,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAACoB,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEpB,MAAM,CAACqB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAoCT,KAAK,GAAG,CAA5C,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACsB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,MAAM,EACJX,IAAI,CAACO,IAAL,CAAUK,QAAV,GACIZ,IAAI,CAACO,IAAL,CAAUK,QADd,GAEIC,OAAO,wCAJf;AAME,MAAA,cAAc,EAAExB,MAAM,CAACyB,KANzB;AAOE,MAAA,UAAU,EAAEzB,MAAM,CAAC0B,UAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAaE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE1B,MAAM,CAAC2B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE3B,MAAM,CAAC4B,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CAbF,EAoBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE5B,MAAM,CAACqB,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CApBF,CADF,EAyBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAErB,MAAM,CAAC6B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAzBF,CADF;AA6BD,GA9BD,MA8BO,IAAIlB,IAAI,CAACO,IAAL,CAAUC,EAAV,IAAgBR,IAAI,CAACO,IAAL,CAAUC,EAAV,KAAiBN,GAArC,EAA0C;AAC/C,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEb,MAAM,CAAC8B,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE9B,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAAK,GAAG,CAApC,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACsB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,MAAM,EACJX,IAAI,CAACO,IAAL,CAAUK,QAAV,GACIZ,IAAI,CAACO,IAAL,CAAUK,QADd,GAEIC,OAAO,wCAJf;AAME,MAAA,cAAc,EAAExB,MAAM,CAACyB,KANzB;AAOE,MAAA,UAAU,EAAEzB,MAAM,CAAC0B,UAPrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EAaE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE1B,MAAM,CAAC2B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE3B,MAAM,CAAC+B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BpB,IAAI,CAACO,IAAL,CAAUc,WAAV,GAAuBrB,IAAI,CAACO,IAAL,CAAUc,WAAjC,GAA6C,SAAzE,CADF,CAbF,EAgBE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEhC,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAhBF,CADF,EAqBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAAC6B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MArBF,CADF;AAyBD,GA1BM,MA0BA;AACL,WACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE7B,MAAM,CAAC8B,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE9B,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4BA,KAAK,GAAG,CAApC,CADF,EAEE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAACsB,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,SAAD;AACE,MAAA,MAAM,EAAEE,OAAO,wCADjB;AAEE,MAAA,cAAc,EAAExB,MAAM,CAACyB,KAFzB;AAGE,MAAA,UAAU,EAAEzB,MAAM,CAAC0B,UAHrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAFF,EASE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE1B,MAAM,CAAC2B,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE3B,MAAM,CAAC+B,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,CATF,EAYE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAE/B,MAAM,CAACY,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAZF,CADF,EAiBE,oBAAC,IAAD;AAAM,MAAA,KAAK,EAAEZ,MAAM,CAAC6B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAjBF,CADF;AAqBD;AACF,CAnFD;;AAqFA,IAAMI,aAAa,GAAG,SAAhBA,aAAgB,OAQhB;AAAA,MAPJC,IAOI,QAPJA,IAOI;AAAA,MANJrB,GAMI,QANJA,GAMI;AAAA,MALJsB,OAKI,QALJA,OAKI;AAAA,MAJJC,kBAII,QAJJA,kBAII;AAAA,MAHJC,WAGI,QAHJA,WAGI;AAAA,MAFJC,WAEI,QAFJA,WAEI;AAAA,MADJC,aACI,QADJA,aACI;AACJ,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAACwC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,WAAW,GACR,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE;AAACI,MAAAA,IAAI,EAAC;AAAN,KAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,aAAD;AACE,IAAA,KAAK,EAAE,CADT;AAEE,IAAA,KAAK,EAAE,MAFT;AAGE,IAAA,MAAM,EAAE,EAHV;AAIE,IAAA,eAAe,EAAE,SAJnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAME,oBAAC,IAAD;AAAM,IAAA,CAAC,EAAC,GAAR;AAAY,IAAA,CAAC,EAAC,IAAd;AAAmB,IAAA,EAAE,EAAC,GAAtB;AAA0B,IAAA,EAAE,EAAC,GAA7B;AAAiC,IAAA,KAAK,EAAC,IAAvC;AAA4C,IAAA,MAAM,EAAC,IAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,EAOE,oBAAC,MAAD;AAAQ,IAAA,EAAE,EAAC,KAAX;AAAiB,IAAA,EAAE,EAAC,IAApB;AAAyB,IAAA,CAAC,EAAC,IAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,EAQE,oBAAC,IAAD;AAAM,IAAA,CAAC,EAAC,KAAR;AAAc,IAAA,CAAC,EAAC,IAAhB;AAAqB,IAAA,EAAE,EAAC,GAAxB;AAA4B,IAAA,EAAE,EAAC,GAA/B;AAAmC,IAAA,KAAK,EAAC,KAAzC;AAA+C,IAAA,MAAM,EAAC,IAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CADF,EAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEzC,MAAM,CAAC6B,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADQ,GAcRK,IAAI,CAACQ,MAAL,KAAgB,CAAhB,GACA,oBAAC,QAAD;AACE,IAAA,IAAI,EAAER,IADR;AAEE,IAAA,4BAA4B,EAAE,KAFhC;AAGE,IAAA,UAAU,EAAE;AAAA,UAAGvB,IAAH,SAAGA,IAAH;AAAA,UAASC,KAAT,SAASA,KAAT;AAAA,aAAqBF,cAAc,CAACC,IAAD,EAAOC,KAAP,EAAcC,GAAd,CAAnC;AAAA,KAHd;AAIE,IAAA,YAAY,EAAE,sBAACF,IAAD;AAAA,aAAUA,IAAI,CAACQ,EAAf;AAAA,KAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,GAUA,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnB,MAAM,CAAC2C,eAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,KAAD;AAAO,IAAA,MAAM,EAAEL,WAAf;AAA4B,IAAA,KAAK,EAAEtC,MAAM,CAAC4C,gBAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE5C,MAAM,CAAC6C,WAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAkCN,aAAlC,CAFJ,CAzBN,EA+BE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEvC,MAAM,CAAC8C,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE9C,MAAM,CAAC+C,cAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAqCZ,OAArC,CADF,EAEE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEnC,MAAM,CAACgD,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCZ,kBAAhC,CAFF,CA/BF,CADF;AAsCD,CA/CD;;AAiDA,SAASH,aAAT","sourcesContent":["import React from \"react\";\r\nimport styles from \"./styles\";\r\n\r\nimport {\r\n  View,\r\n  FlatList,\r\n  TouchableOpacity,\r\n  Text,\r\n  Image\r\n} from \"../../atoms\";\r\nimport ContentLoader, { Rect, Circle } from 'react-content-loader/native'\r\nimport { ImageInfo } from \"../../molecules\";\r\n\r\nconst rewardListItem = (item, index, uid) => {\r\n  let timeCount = null;\r\n  const startTime = item.route ? item.route.startTime : new Date();\r\n  \r\n  if (item.user.id && item.user.id === uid) {\r\n    return (\r\n      <View>\r\n        <View style={styles.rowSelected}>\r\n          <Text style={styles.indexSelected}>{index + 1}</Text>\r\n          <View style={styles.imageContainer}>\r\n            <ImageInfo\r\n              banner={\r\n                item.user.photoURL\r\n                  ? item.user.photoURL\r\n                  : require(\"../../../../assets/DefaultAvatar.jpg\")\r\n              }\r\n              imageContainer={styles.image}\r\n              imageStyle={styles.imageFrame}\r\n            />\r\n          </View>\r\n          <View style={styles.titleContainer}>\r\n            <Text style={styles.titleSelected}>You</Text>\r\n            {/* <Text style={styles.prizeTitle}>\r\n              Prize:\r\n              {item.title}\r\n            </Text> */}\r\n          </View>\r\n          <View>\r\n            <Text style={styles.indexSelected}>NOT FINALIZE</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.line} />\r\n      </View>\r\n    );\r\n  } else if (item.user.id && item.user.id !== uid) {\r\n    return (\r\n      <View>\r\n        <View style={styles.row}>\r\n          <Text style={styles.index}>{index + 1}</Text>\r\n          <View style={styles.imageContainer}>\r\n            <ImageInfo\r\n              banner={\r\n                item.user.photoURL\r\n                  ? item.user.photoURL\r\n                  : require(\"../../../../assets/DefaultAvatar.jpg\")\r\n              }\r\n              imageContainer={styles.image}\r\n              imageStyle={styles.imageFrame}\r\n            />\r\n          </View>\r\n          <View style={styles.titleContainer}>\r\n            <Text style={styles.title}>{item.user.displayName? item.user.displayName:\"Awarded\"}</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.index}>NOT FINALIZE</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.line} />\r\n      </View>\r\n    );\r\n  } else {\r\n    return (\r\n      <View>\r\n        <View style={styles.row}>\r\n          <Text style={styles.index}>{index + 1}</Text>\r\n          <View style={styles.imageContainer}>\r\n            <ImageInfo\r\n              banner={require(\"../../../../assets/DefaultAvatar.jpg\")}\r\n              imageContainer={styles.image}\r\n              imageStyle={styles.imageFrame}\r\n            />\r\n          </View>\r\n          <View style={styles.titleContainer}>\r\n            <Text style={styles.title}>Awarded</Text>\r\n          </View>\r\n          <View>\r\n            <Text style={styles.index}>NOT FINALIZE</Text>\r\n          </View>\r\n        </View>\r\n        <View style={styles.line} />\r\n      </View>\r\n    );\r\n  }\r\n};\r\n\r\nconst UserCompleted = ({\r\n  data,\r\n  uid,\r\n  message,\r\n  termsAndConditions,\r\n  readLoading,\r\n  noUserImage,\r\n  noUserMessage\r\n}) => {\r\n  return (\r\n    <View style={styles.container}>\r\n      {readLoading?\r\n          <View style={{flex:1}}>\r\n            <ContentLoader\r\n              speed={1}\r\n              width={\"100%\"}\r\n              height={95}\r\n              backgroundColor= \"#d9d9d9\"\r\n            >\r\n              <Rect x=\"5\" y=\"30\" rx=\"4\" ry=\"4\" width=\"20\" height=\"20\" />\r\n              <Circle cx=\"19%\" cy=\"45\" r=\"30\"/>\r\n              <Rect x=\"30%\" y=\"35\" rx=\"4\" ry=\"4\" width=\"30%\" height=\"16\" />\r\n            </ContentLoader>\r\n            <View style={styles.line} />\r\n          </View>\r\n        : data.length !== 0 ?\r\n          <FlatList\r\n            data={data}\r\n            showsVerticalScrollIndicator={false}\r\n            renderItem={({ item, index }) => rewardListItem(item, index, uid)}\r\n            keyExtractor={(item) => item.id}\r\n          />\r\n\r\n          :\r\n\r\n          <View style={styles.noUserContainer}>\r\n              <Image source={noUserImage} style={styles.noUserImageStyle} />\r\n              <Text style={styles.noUserTitle}>{noUserMessage}</Text>\r\n          </View>\r\n      }\r\n      \r\n      <View style={styles.messageContainer}>\r\n        <Text style={styles.textFontFamily}>{message}</Text>\r\n        <Text style={styles.textColor}>{termsAndConditions}</Text>\r\n      </View>\r\n    </View>\r\n  );\r\n};\r\n\r\nexport { UserCompleted };\r\n"]},"metadata":{},"sourceType":"module"}