{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\screens\\\\main\\\\RouteGroups\\\\Routes\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Actions } from \"react-native-router-flux\";\nimport { AreaRouteGroupList } from \"@components/templates\";\nimport { listenFromDatabase, removeListenerFromDatabase } from \"@redux/route/action\";\nimport { readFromDatabase as readRouteTicket } from \"@redux/routeTicket/action\";\nimport styles from \"./styles\";\nimport clone from \"clone\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    var _this;\n\n    _classCallCheck(this, index);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var routeGroupId = this.props.navigation.state.params.routeGroupId;\n      this.props.listenFromDatabase({\n        routeGroupId: routeGroupId\n      });\n      this.props.readRouteTicket();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeListenerFromDatabase();\n    }\n  }, {\n    key: \"onSingleRouteMapPress\",\n    value: function onSingleRouteMapPress(route) {\n      var id = route.id,\n          assignCompleted = route.assignCompleted;\n\n      if (assignCompleted) {\n        Actions.RouteRanking({\n          routeId: id\n        });\n      } else {\n        Actions.Route({\n          routeId: id\n        });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var readLoading = this.props.routeState.readLoading;\n      var userRouteTickets = this.props.routeTicketState.userRouteTickets;\n\n      var _clone = clone(this.props.routeState),\n          routes = _clone.routes;\n\n      var validRoutes = [];\n      var twoWeekBefore = new Date();\n      twoWeekBefore.setDate(new Date().getDate() - 14);\n      routes.forEach(function (route) {\n        var ended = route.ended;\n\n        if (ended.at === null || ended.at.seconds > twoWeekBefore.getTime() / 1000) {\n          validRoutes.push(route);\n        }\n      });\n      var joinedRoutes = [];\n      var nojoinedRoutes = [];\n      var endRoutes = [];\n      validRoutes.forEach(function (route) {\n        var routeTicket = userRouteTickets.filter(function (routeTicket) {\n          return routeTicket.routeIds[0] === route.id;\n        });\n\n        if (routeTicket.length > 0) {\n          if (route.ended.at) {\n            endRoutes.push(_objectSpread(_objectSpread({}, route), {}, {\n              routeTicketId: routeTicket[0].id,\n              numberCompletedMissions: routeTicket[0].numberCompletedMissions,\n              joinedAt: routeTicket[0].created.at\n            }));\n          } else {\n            joinedRoutes.push(_objectSpread(_objectSpread({}, route), {}, {\n              routeTicketId: routeTicket[0].id,\n              numberCompletedMissions: routeTicket[0].numberCompletedMissions,\n              joinedAt: routeTicket[0].created.at\n            }));\n          }\n\n          return;\n        } else {\n          if (route.ended.at) {\n            endRoutes.push(_objectSpread(_objectSpread({}, route), {}, {\n              routeTicketId: null,\n              numberCompletedMissions: 0,\n              joinedAt: null\n            }));\n          } else {\n            nojoinedRoutes.push(_objectSpread(_objectSpread({}, route), {}, {\n              routeTicketId: null,\n              numberCompletedMissions: 0,\n              joinedAt: null\n            }));\n          }\n\n          return;\n        }\n      });\n      joinedRoutes.sort(function (a, b) {\n        return b.joinedAt - a.joinedAt;\n      });\n      nojoinedRoutes.sort(function (a, b) {\n        return b.created.at - a.created.at;\n      });\n      validRoutes = [].concat(joinedRoutes, nojoinedRoutes, endRoutes);\n\n      var backgroundPicture = require(\"../../../../assets/gogogain/RouteMap_FA_yellow.png\");\n\n      return React.createElement(AreaRouteGroupList, {\n        data: validRoutes,\n        totalMissionTitle: \"Total Missions : \",\n        periodTitle: \"Mission Period : \",\n        statusTitle: \"Status \",\n        onSingleRouteMapPress: this.onSingleRouteMapPress.bind(this),\n        readLoading: readLoading,\n        backgroundPicture: backgroundPicture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 7\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var routeState = state.Route;\n  var routeTicketState = state.RouteTicket;\n  return {\n    routeState: routeState,\n    routeTicketState: routeTicketState\n  };\n};\n\nexport default connect(mapStateToProps, {\n  readRouteTicket: readRouteTicket,\n  listenFromDatabase: listenFromDatabase,\n  removeListenerFromDatabase: removeListenerFromDatabase\n})(index);","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/screens/main/RouteGroups/Routes/index.js"],"names":["React","Component","connect","Actions","AreaRouteGroupList","listenFromDatabase","removeListenerFromDatabase","readFromDatabase","readRouteTicket","styles","clone","index","props","state","routeGroupId","navigation","params","route","id","assignCompleted","RouteRanking","routeId","Route","readLoading","routeState","userRouteTickets","routeTicketState","routes","validRoutes","twoWeekBefore","Date","setDate","getDate","forEach","ended","at","seconds","getTime","push","joinedRoutes","nojoinedRoutes","endRoutes","routeTicket","filter","routeIds","length","routeTicketId","numberCompletedMissions","joinedAt","created","sort","a","b","backgroundPicture","require","onSingleRouteMapPress","bind","mapStateToProps","RouteTicket"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { AreaRouteGroupList } from \"@components/templates\";\r\n\r\nimport {\r\n  listenFromDatabase,\r\n  removeListenerFromDatabase,\r\n} from \"@redux/route/action\";\r\n\r\nimport {\r\n  readFromDatabase as readRouteTicket\r\n} from \"@redux/routeTicket/action\"\r\n\r\nimport styles from \"./styles\";\r\n\r\nimport clone from \"clone\";\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { routeGroupId } = this.props.navigation.state.params;\r\n    this.props.listenFromDatabase({ routeGroupId });\r\n    this.props.readRouteTicket();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeListenerFromDatabase();\r\n  }\r\n\r\n  onSingleRouteMapPress(route) {\r\n    const { id, assignCompleted } = route;\r\n\r\n    if(assignCompleted){\r\n      Actions.RouteRanking({ routeId: id });\r\n    }else{\r\n      Actions.Route({ routeId: id });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { readLoading } = this.props.routeState;\r\n    const { userRouteTickets } = this.props.routeTicketState;\r\n    let { routes } = clone(this.props.routeState);\r\n\r\n    // filter route end in two weeks\r\n    let validRoutes = [];\r\n    const twoWeekBefore = new Date();\r\n    twoWeekBefore.setDate(new Date().getDate() - 14);\r\n\r\n    routes.forEach(route => {\r\n      const { ended } = route;\r\n\r\n      if(ended.at === null || ended.at.seconds > twoWeekBefore.getTime() / 1000){\r\n        validRoutes.push(route);\r\n      }\r\n    });\r\n\r\n    const joinedRoutes = [];\r\n    const nojoinedRoutes = [];\r\n    const endRoutes = [];\r\n\r\n    //Merge route with corresponding route ticket\r\n    validRoutes.forEach((route) => {\r\n      const routeTicket = userRouteTickets.filter(\r\n        (routeTicket) => routeTicket.routeIds[0] === route.id\r\n      );\r\n\r\n\r\n      if (routeTicket.length > 0) {\r\n        if(route.ended.at){\r\n          endRoutes.push({\r\n            ...route,\r\n            routeTicketId: routeTicket[0].id,\r\n            numberCompletedMissions: routeTicket[0].numberCompletedMissions,\r\n            joinedAt: routeTicket[0].created.at,\r\n          });\r\n        } else {\r\n          joinedRoutes.push({\r\n            ...route,\r\n            routeTicketId: routeTicket[0].id,\r\n            numberCompletedMissions: routeTicket[0].numberCompletedMissions,\r\n            joinedAt: routeTicket[0].created.at,\r\n          });\r\n        }\r\n        return;\r\n      } else {\r\n        if(route.ended.at){\r\n          endRoutes.push({\r\n            ...route,\r\n            routeTicketId: null,\r\n            numberCompletedMissions: 0,\r\n            joinedAt: null,\r\n          });\r\n        } else {\r\n          nojoinedRoutes.push({\r\n            ...route,\r\n            routeTicketId: null,\r\n            numberCompletedMissions: 0,\r\n            joinedAt: null,\r\n          });\r\n        }\r\n        return;\r\n      }\r\n    });\r\n\r\n    joinedRoutes.sort((a,b)=> b.joinedAt - a.joinedAt)\r\n    nojoinedRoutes.sort((a,b)=> b.created.at - a.created.at)\r\n\r\n    validRoutes = [...joinedRoutes, ...nojoinedRoutes, ...endRoutes]\r\n\r\n    const backgroundPicture = require(\"../../../../assets/gogogain/RouteMap_FA_yellow.png\")\r\n    \r\n    return (\r\n      <AreaRouteGroupList\r\n        data={validRoutes}\r\n        totalMissionTitle=\"Total Missions : \"\r\n        periodTitle=\"Mission Period : \"\r\n        statusTitle=\"Status \"\r\n        onSingleRouteMapPress={this.onSingleRouteMapPress.bind(this)}\r\n        readLoading={readLoading}\r\n        backgroundPicture = {backgroundPicture}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const routeState = state.Route;\r\n  const routeTicketState = state.RouteTicket;\r\n\r\n  return {\r\n    routeState,\r\n    routeTicketState,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  readRouteTicket,\r\n  listenFromDatabase,\r\n  removeListenerFromDatabase,\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}