{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport modality from \"./modality\";\n\nvar WebStyleSheet = function () {\n  function WebStyleSheet(id) {\n    _classCallCheck(this, WebStyleSheet);\n\n    this._cssRules = [];\n    this._sheet = null;\n    this._textContent = '';\n    var domStyleElement = void 0;\n\n    if (canUseDOM) {\n      domStyleElement = document.getElementById(id);\n\n      if (!domStyleElement) {\n        var html = '<style id=\"' + id + '\"></style>';\n\n        if (document.head) {\n          document.head.insertAdjacentHTML('afterbegin', html);\n          domStyleElement = document.getElementById(id);\n        }\n      }\n\n      if (domStyleElement) {\n        modality(domStyleElement);\n        this._sheet = domStyleElement.sheet;\n        this._textContent = domStyleElement.textContent;\n      }\n    }\n  }\n\n  WebStyleSheet.prototype.containsRule = function containsRule(rule) {\n    return this._cssRules.indexOf(rule) > -1;\n  };\n\n  WebStyleSheet.prototype.insertRuleOnce = function insertRuleOnce(rule, position) {\n    if (!this.containsRule(rule)) {\n      this._cssRules.push(rule);\n\n      if (this._textContent.indexOf(rule) === -1 && this._sheet) {\n        var pos = position || this._sheet.cssRules.length;\n\n        try {\n          this._sheet.insertRule(rule, pos);\n        } catch (e) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn('Failed to inject CSS: \"' + rule + '\". The browser may have rejecting unrecognized vendor prefixes. (This should have no user-facing impact.)');\n          }\n        }\n      }\n    }\n  };\n\n  _createClass(WebStyleSheet, [{\n    key: 'cssText',\n    get: function get() {\n      return this._cssRules.join('\\n');\n    }\n  }]);\n\n  return WebStyleSheet;\n}();\n\nexport default WebStyleSheet;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/node_modules/react-native-web/dist/exports/StyleSheet/WebStyleSheet.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","canUseDOM","modality","WebStyleSheet","id","_cssRules","_sheet","_textContent","domStyleElement","document","getElementById","html","head","insertAdjacentHTML","sheet","textContent","containsRule","rule","indexOf","insertRuleOnce","position","push","pos","cssRules","insertRule","e","process","env","NODE_ENV","console","warn","get","join"],"mappings":"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","sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport modality from './modality';\n\nvar WebStyleSheet = function () {\n  function WebStyleSheet(id) {\n    _classCallCheck(this, WebStyleSheet);\n\n    this._cssRules = [];\n    this._sheet = null;\n    this._textContent = '';\n\n    var domStyleElement = void 0;\n\n    // on the client we check for an existing style sheet before injecting\n    if (canUseDOM) {\n      domStyleElement = document.getElementById(id);\n      if (!domStyleElement) {\n        var html = '<style id=\"' + id + '\"></style>';\n        if (document.head) {\n          document.head.insertAdjacentHTML('afterbegin', html);\n          domStyleElement = document.getElementById(id);\n        }\n      }\n\n      if (domStyleElement) {\n        modality(domStyleElement);\n        // $FlowFixMe\n        this._sheet = domStyleElement.sheet;\n        this._textContent = domStyleElement.textContent;\n      }\n    }\n  }\n\n  WebStyleSheet.prototype.containsRule = function containsRule(rule) {\n    return this._cssRules.indexOf(rule) > -1;\n  };\n\n  WebStyleSheet.prototype.insertRuleOnce = function insertRuleOnce(rule, position) {\n    // Reduce chance of duplicate rules\n    if (!this.containsRule(rule)) {\n      this._cssRules.push(rule);\n\n      // Check whether a rule was part of any prerendered styles (textContent\n      // doesn't include styles injected via 'insertRule')\n      if (this._textContent.indexOf(rule) === -1 && this._sheet) {\n        var pos = position || this._sheet.cssRules.length;\n        try {\n          this._sheet.insertRule(rule, pos);\n        } catch (e) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn('Failed to inject CSS: \"' + rule + '\". The browser may have rejecting unrecognized vendor prefixes. (This should have no user-facing impact.)');\n          }\n        }\n      }\n    }\n  };\n\n  _createClass(WebStyleSheet, [{\n    key: 'cssText',\n    get: function get() {\n      return this._cssRules.join('\\n');\n    }\n  }]);\n\n  return WebStyleSheet;\n}();\n\nexport default WebStyleSheet;"]},"metadata":{},"sourceType":"module"}