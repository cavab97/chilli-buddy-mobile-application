{"ast":null,"code":"import { notificationDataServices } from \"../../services/database\";\nvar type = \"notification\";\nvar actions = {\n  READ_FROM_DATABASE: type + \"READ_FROM_DATABASE\",\n  READ_FROM_DATABASE_SUCCESS: type + \"READ_FROM_DATABASE_SUCCESS\",\n  READ_FROM_DATABASE_ERROR: type + \"READ_FROM_DATABASE_ERROR\",\n  UPDATE: type + \"UPDATE\"\n};\nexport var update = function update(data) {\n  return {\n    type: actions.UPDATE,\n    payload: {\n      data: data\n    }\n  };\n};\nexport function listenFromDatabase() {\n  return function (dispatch, getState) {\n    dispatch({\n      type: actions.READ_FROM_DATABASE\n    });\n\n    try {\n      console.log(\"Start listen to notifications.\");\n      var uid = getState().Auth.user.uid;\n      notificationDataServices.listenObjects({\n        uid: uid,\n        updateListener: function updateListener(data) {\n          dispatch({\n            type: actions.READ_FROM_DATABASE_SUCCESS,\n            payload: {\n              data: data\n            }\n          });\n        }\n      });\n    } catch (error) {\n      console.log(error);\n      dispatch({\n        type: actions.READ_FROM_DATABASE_ERROR,\n        payload: {\n          error: error\n        }\n      });\n    }\n  };\n}\nexport function removeListenerFromDatabase() {\n  return function (dispatch) {\n    console.log(\"Remove listener from notifications.\");\n    notificationDataServices.unlistenObjects();\n  };\n}\nexport default actions;","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/marslab-library-react-native/redux/notification/action.js"],"names":["notificationDataServices","type","actions","READ_FROM_DATABASE","READ_FROM_DATABASE_SUCCESS","READ_FROM_DATABASE_ERROR","UPDATE","update","data","payload","listenFromDatabase","dispatch","getState","console","log","uid","Auth","user","listenObjects","updateListener","error","removeListenerFromDatabase","unlistenObjects"],"mappings":"AAAA,SAASA,wBAAT;AAGA,IAAMC,IAAI,GAAG,cAAb;AAEA,IAAMC,OAAO,GAAG;AACdC,EAAAA,kBAAkB,EAAEF,IAAI,GAAG,oBADb;AAEdG,EAAAA,0BAA0B,EAAEH,IAAI,GAAG,4BAFrB;AAGdI,EAAAA,wBAAwB,EAAEJ,IAAI,GAAG,0BAHnB;AASdK,EAAAA,MAAM,EAAEL,IAAI,GAAG;AATD,CAAhB;AAYA,OAAO,IAAMM,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AAC9B,SAAO;AACLP,IAAAA,IAAI,EAAEC,OAAO,CAACI,MADT;AAELG,IAAAA,OAAO,EAAE;AAAED,MAAAA,IAAI,EAAJA;AAAF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,SAASE,kBAAT,GAA8B;AACnC,SAAO,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7BD,IAAAA,QAAQ,CAAC;AAAEV,MAAAA,IAAI,EAAEC,OAAO,CAACC;AAAhB,KAAD,CAAR;;AACA,QAAI;AACFU,MAAAA,OAAO,CAACC,GAAR;AACA,UAAMC,GAAG,GAAGH,QAAQ,GAAGI,IAAX,CAAgBC,IAAhB,CAAqBF,GAAjC;AACAf,MAAAA,wBAAwB,CAACkB,aAAzB,CAAuC;AACrCH,QAAAA,GAAG,EAAHA,GADqC;AAErCI,QAAAA,cAAc,EAAE,wBAACX,IAAD,EAAU;AACxBG,UAAAA,QAAQ,CAAC;AACPV,YAAAA,IAAI,EAAEC,OAAO,CAACE,0BADP;AAEPK,YAAAA,OAAO,EAAE;AAAED,cAAAA,IAAI,EAAJA;AAAF;AAFF,WAAD,CAAR;AAID;AAPoC,OAAvC;AASD,KAZD,CAYE,OAAOY,KAAP,EAAc;AACdP,MAAAA,OAAO,CAACC,GAAR,CAAYM,KAAZ;AACAT,MAAAA,QAAQ,CAAC;AACPV,QAAAA,IAAI,EAAEC,OAAO,CAACG,wBADP;AAEPI,QAAAA,OAAO,EAAE;AAAEW,UAAAA,KAAK,EAALA;AAAF;AAFF,OAAD,CAAR;AAID;AACF,GArBD;AAsBD;AAED,OAAO,SAASC,0BAAT,GAAsC;AAC3C,SAAO,UAACV,QAAD,EAAc;AACnBE,IAAAA,OAAO,CAACC,GAAR,CAAY,qCAAZ;AACAd,IAAAA,wBAAwB,CAACsB,eAAzB;AACD,GAHD;AAID;AAqCD,eAAepB,OAAf","sourcesContent":["import { notificationDataServices } from \"../../services/database\";\r\n// import { authBackendServices, userBackendServices } from \"../../services/backend\";\r\n\r\nconst type = \"notification\";\r\n\r\nconst actions = {\r\n  READ_FROM_DATABASE: type + \"READ_FROM_DATABASE\",\r\n  READ_FROM_DATABASE_SUCCESS: type + \"READ_FROM_DATABASE_SUCCESS\",\r\n  READ_FROM_DATABASE_ERROR: type + \"READ_FROM_DATABASE_ERROR\",\r\n\r\n  // SUBMIT_TO_BACKEND: type + \"SUBMIT_TO_BACKEND\",\r\n  // SUBMIT_TO_BACKEND_ERROR: type + \"SUBMIT_TO_BACKEND_ERROR\",\r\n  // SUBMIT_TO_BACKEND_SUCCESS: type + \"SUBMIT_TO_BACKEND_SUCCESS\",\r\n\r\n  UPDATE: type + \"UPDATE\",\r\n};\r\n\r\nexport const update = (data) => {\r\n  return {\r\n    type: actions.UPDATE,\r\n    payload: { data },\r\n  };\r\n};\r\n\r\nexport function listenFromDatabase() {\r\n  return (dispatch, getState) => {\r\n    dispatch({ type: actions.READ_FROM_DATABASE });\r\n    try {\r\n      console.log(`Start listen to notifications.`);\r\n      const uid = getState().Auth.user.uid;\r\n      notificationDataServices.listenObjects({\r\n        uid,\r\n        updateListener: (data) => {\r\n          dispatch({\r\n            type: actions.READ_FROM_DATABASE_SUCCESS,\r\n            payload: { data },\r\n          });\r\n        },\r\n      });\r\n    } catch (error) {\r\n      console.log(error);\r\n      dispatch({\r\n        type: actions.READ_FROM_DATABASE_ERROR,\r\n        payload: { error },\r\n      });\r\n    }\r\n  };\r\n}\r\n\r\nexport function removeListenerFromDatabase() {\r\n  return (dispatch) => {\r\n    console.log(\"Remove listener from notifications.\");\r\n    notificationDataServices.unlistenObjects();\r\n  };\r\n}\r\n\r\n// export function submitToBackend(data, actionName) {\r\n//   return (dispatch, getState) => {\r\n//     dispatch({ type: actions.SUBMIT_TO_BACKEND });\r\n//     return new Promise(async (resolve, reject) => {\r\n//       let result = {};\r\n//       try {\r\n//         switch (actionName) {\r\n//           case \"updateProfile\":\r\n//             result = await authBackendServices.updateProfile({ data });\r\n//             break;\r\n//           case \"unionNotificationToken\":\r\n//             result = await userBackendServices.unionNotisToken({ data });\r\n//             break;\r\n//           case \"removeNotificationToken\":\r\n//             result = await userBackendServices.removeNotisToken({ data });\r\n//             break;\r\n//         }\r\n\r\n//         resolve(result);\r\n//         dispatch({\r\n//           type: actions.SUBMIT_TO_BACKEND_SUCCESS,\r\n//           payload: { data: result },\r\n//         });\r\n//       } catch (error) {\r\n//         console.log(error);\r\n//         reject(error);\r\n//         dispatch({\r\n//           type: actions.SUBMIT_TO_BACKEND_ERROR,\r\n//           payload: { error },\r\n//         });\r\n//       }\r\n//     });\r\n//   };\r\n// }\r\n\r\nexport default actions;\r\n"]},"metadata":{},"sourceType":"module"}