{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport applyLayout from \"../../modules/applyLayout\";\nimport applyNativeMethods from \"../../modules/applyNativeMethods\";\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Component } from 'react';\nimport ColorPropType from \"../ColorPropType\";\nimport createElement from \"../createElement\";\nimport findNodeHandle from \"../findNodeHandle\";\nimport StyleSheet from \"../StyleSheet\";\nimport StyleSheetPropType from \"../../modules/StyleSheetPropType\";\nimport TextInputStylePropTypes from \"./TextInputStylePropTypes\";\nimport TextInputState from \"../../modules/TextInputState\";\nimport ViewPropTypes from \"../ViewPropTypes\";\nimport { any, bool, func, number, oneOf, shape, string } from 'prop-types';\nvar isAndroid = canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n    return start !== selectionStart || end !== selectionEnd;\n  }\n\n  return false;\n};\n\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end;\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput = function (_Component) {\n  _inherits(TextInput, _Component);\n\n  function TextInput() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TextInput);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n      TextInputState._currentlyFocusedNode = null;\n\n      if (onBlur) {\n        onBlur(e);\n      }\n    }, _this._handleChange = function (e) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          onChangeText = _this$props.onChangeText;\n      var text = e.nativeEvent.text;\n\n      if (onChange) {\n        onChange(e);\n      }\n\n      if (onChangeText) {\n        onChangeText(text);\n      }\n\n      _this._handleSelectionChange(e);\n    }, _this._handleFocus = function (e) {\n      var _this$props2 = _this.props,\n          clearTextOnFocus = _this$props2.clearTextOnFocus,\n          onFocus = _this$props2.onFocus,\n          selectTextOnFocus = _this$props2.selectTextOnFocus;\n      var node = _this._node;\n      TextInputState._currentlyFocusedNode = _this._node;\n\n      if (onFocus) {\n        onFocus(e);\n      }\n\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    }, _this._handleKeyDown = function (e) {\n      e.stopPropagation();\n\n      if (e.which === 8 || e.which === 9 || e.which === 13 && e.metaKey || e.which === 27 || e.which === 37 || e.which === 38 || e.which === 39 || e.which === 40) {\n        _this._handleKeyPress(e);\n      }\n    }, _this._handleKeyPress = function (e) {\n      var _this$props3 = _this.props,\n          blurOnSubmit = _this$props3.blurOnSubmit,\n          multiline = _this$props3.multiline,\n          onKeyPress = _this$props3.onKeyPress,\n          onSubmitEditing = _this$props3.onSubmitEditing;\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = void 0;\n\n        switch (e.which) {\n          case 8:\n            keyValue = 'Backspace';\n            break;\n\n          case 9:\n            keyValue = 'Tab';\n            break;\n\n          case 13:\n            keyValue = 'Enter';\n            break;\n\n          case 27:\n            keyValue = 'Escape';\n            break;\n\n          case 32:\n            keyValue = ' ';\n            break;\n\n          case 37:\n            keyValue = 'ArrowLeft';\n            break;\n\n          case 38:\n            keyValue = 'ArrowUp';\n            break;\n\n          case 39:\n            keyValue = 'ArrowRight';\n            break;\n\n          case 40:\n            keyValue = 'ArrowDown';\n            break;\n\n          default:\n            {\n              if (e.shiftKey) {\n                keyValue = String.fromCharCode(e.which).trim();\n              } else {\n                keyValue = String.fromCharCode(e.which).toLowerCase().trim();\n              }\n            }\n        }\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.which === 13 && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          e.preventDefault();\n          e.nativeEvent = {\n            target: e.target,\n            text: e.target.value\n          };\n          onSubmitEditing(e);\n        }\n\n        if (shouldBlurOnSubmit) {\n          _this.blur();\n        }\n      }\n    }, _this._handleSelectionChange = function (e) {\n      var _this$props4 = _this.props,\n          onSelectionChange = _this$props4.onSelectionChange,\n          _this$props4$selectio = _this$props4.selection,\n          selection = _this$props4$selectio === undefined ? emptyObject : _this$props4$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    }, _this._setNode = function (component) {\n      _this._node = findNodeHandle(component);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  TextInput.prototype.clear = function clear() {\n    this._node.value = '';\n  };\n\n  TextInput.prototype.isFocused = function isFocused() {\n    return TextInputState.currentlyFocusedField() === this._node;\n  };\n\n  TextInput.prototype.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n\n    if (document.activeElement === this._node) {\n      TextInputState._currentlyFocusedNode = this._node;\n    }\n  };\n\n  TextInput.prototype.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  TextInput.prototype.render = function render() {\n    var _props = this.props,\n        autoCorrect = _props.autoCorrect,\n        editable = _props.editable,\n        keyboardType = _props.keyboardType,\n        multiline = _props.multiline,\n        numberOfLines = _props.numberOfLines,\n        secureTextEntry = _props.secureTextEntry,\n        style = _props.style,\n        blurOnSubmit = _props.blurOnSubmit,\n        clearTextOnFocus = _props.clearTextOnFocus,\n        onChangeText = _props.onChangeText,\n        onLayout = _props.onLayout,\n        onSelectionChange = _props.onSelectionChange,\n        onSubmitEditing = _props.onSubmitEditing,\n        selection = _props.selection,\n        selectTextOnFocus = _props.selectTextOnFocus,\n        spellCheck = _props.spellCheck,\n        accessibilityViewIsModal = _props.accessibilityViewIsModal,\n        allowFontScaling = _props.allowFontScaling,\n        caretHidden = _props.caretHidden,\n        clearButtonMode = _props.clearButtonMode,\n        dataDetectorTypes = _props.dataDetectorTypes,\n        disableFullscreenUI = _props.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _props.enablesReturnKeyAutomatically,\n        hitSlop = _props.hitSlop,\n        inlineImageLeft = _props.inlineImageLeft,\n        inlineImagePadding = _props.inlineImagePadding,\n        inputAccessoryViewID = _props.inputAccessoryViewID,\n        keyboardAppearance = _props.keyboardAppearance,\n        needsOffscreenAlphaCompositing = _props.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _props.onAccessibilityTap,\n        onContentSizeChange = _props.onContentSizeChange,\n        onEndEditing = _props.onEndEditing,\n        onMagicTap = _props.onMagicTap,\n        onScroll = _props.onScroll,\n        removeClippedSubviews = _props.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _props.renderToHardwareTextureAndroid,\n        returnKeyLabel = _props.returnKeyLabel,\n        returnKeyType = _props.returnKeyType,\n        scrollEnabled = _props.scrollEnabled,\n        selectionColor = _props.selectionColor,\n        selectionState = _props.selectionState,\n        shouldRasterizeIOS = _props.shouldRasterizeIOS,\n        textBreakStrategy = _props.textBreakStrategy,\n        textContentType = _props.textContentType,\n        underlineColorAndroid = _props.underlineColorAndroid,\n        otherProps = _objectWithoutProperties(_props, ['autoCorrect', 'editable', 'keyboardType', 'multiline', 'numberOfLines', 'secureTextEntry', 'style', 'blurOnSubmit', 'clearTextOnFocus', 'onChangeText', 'onLayout', 'onSelectionChange', 'onSubmitEditing', 'selection', 'selectTextOnFocus', 'spellCheck', 'accessibilityViewIsModal', 'allowFontScaling', 'caretHidden', 'clearButtonMode', 'dataDetectorTypes', 'disableFullscreenUI', 'enablesReturnKeyAutomatically', 'hitSlop', 'inlineImageLeft', 'inlineImagePadding', 'inputAccessoryViewID', 'keyboardAppearance', 'needsOffscreenAlphaCompositing', 'onAccessibilityTap', 'onContentSizeChange', 'onEndEditing', 'onMagicTap', 'onScroll', 'removeClippedSubviews', 'renderToHardwareTextureAndroid', 'returnKeyLabel', 'returnKeyType', 'scrollEnabled', 'selectionColor', 'selectionState', 'shouldRasterizeIOS', 'textBreakStrategy', 'textContentType', 'underlineColorAndroid']);\n\n    var type = void 0;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n\n      case 'phone-pad':\n        type = 'tel';\n        break;\n\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n\n      case 'url':\n        type = 'url';\n        break;\n\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n\n    _extends(otherProps, {\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      dir: 'auto',\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect,\n      style: [styles.initial, style]\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return createElement(component, otherProps);\n  };\n\n  return TextInput;\n}(Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false,\n  style: emptyObject\n};\nTextInput.State = TextInputState;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? _extends({}, ViewPropTypes, {\n  autoCapitalize: oneOf(['characters', 'none', 'sentences', 'words']),\n  autoComplete: string,\n  autoCorrect: bool,\n  autoFocus: bool,\n  blurOnSubmit: bool,\n  clearTextOnFocus: bool,\n  defaultValue: string,\n  editable: bool,\n  inputAccessoryViewID: string,\n  keyboardType: oneOf(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxLength: number,\n  multiline: bool,\n  numberOfLines: number,\n  onBlur: func,\n  onChange: func,\n  onChangeText: func,\n  onFocus: func,\n  onKeyPress: func,\n  onSelectionChange: func,\n  onSubmitEditing: func,\n  placeholder: string,\n  placeholderTextColor: ColorPropType,\n  secureTextEntry: bool,\n  selectTextOnFocus: bool,\n  selection: shape({\n    start: number.isRequired,\n    end: number\n  }),\n  spellCheck: bool,\n  style: StyleSheetPropType(TextInputStylePropTypes),\n  value: string,\n  caretHidden: bool,\n  clearButtonMode: string,\n  dataDetectorTypes: string,\n  disableFullscreenUI: bool,\n  enablesReturnKeyAutomatically: bool,\n  keyboardAppearance: string,\n  inlineImageLeft: string,\n  inlineImagePadding: number,\n  onContentSizeChange: func,\n  onEndEditing: func,\n  onScroll: func,\n  returnKeyLabel: string,\n  returnKeyType: string,\n  selectionColor: ColorPropType,\n  selectionState: any,\n  textBreakStrategy: string,\n  underlineColorAndroid: ColorPropType\n}) : {};\nvar styles = StyleSheet.create({\n  initial: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    borderColor: 'black',\n    borderRadius: 0,\n    borderStyle: 'solid',\n    borderWidth: 0,\n    boxSizing: 'border-box',\n    fontFamily: 'System',\n    fontSize: 14,\n    padding: 0,\n    resize: 'none'\n  }\n});\nexport default applyLayout(applyNativeMethods(TextInput));","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-web/dist/exports/TextInput/index.js"],"names":["_objectWithoutProperties","obj","keys","target","i","indexOf","Object","prototype","hasOwnProperty","call","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","applyLayout","applyNativeMethods","canUseDOM","Component","ColorPropType","createElement","findNodeHandle","StyleSheet","StyleSheetPropType","TextInputStylePropTypes","TextInputState","ViewPropTypes","any","bool","func","number","oneOf","shape","string","isAndroid","test","navigator","userAgent","emptyObject","normalizeEventHandler","handler","e","nativeEvent","text","isSelectionStale","node","selection","selectionEnd","selectionStart","start","end","setSelection","setTimeout","setSelectionRange","TextInput","_Component","_temp","_this","_ret","_len","arguments","length","args","Array","_key","apply","concat","_handleBlur","onBlur","props","_currentlyFocusedNode","_handleChange","_this$props","onChange","onChangeText","_handleSelectionChange","_handleFocus","_this$props2","clearTextOnFocus","onFocus","selectTextOnFocus","_node","clear","select","_handleKeyDown","stopPropagation","which","metaKey","_handleKeyPress","_this$props3","blurOnSubmit","multiline","onKeyPress","onSubmitEditing","blurOnSubmitDefault","shouldBlurOnSubmit","keyValue","shiftKey","String","fromCharCode","trim","toLowerCase","altKey","ctrlKey","key","isDefaultPrevented","preventDefault","blur","_this$props4","onSelectionChange","_this$props4$selectio","undefined","_setNode","component","isFocused","currentlyFocusedField","componentDidMount","document","activeElement","componentDidUpdate","render","_props","autoCorrect","editable","keyboardType","numberOfLines","secureTextEntry","style","onLayout","spellCheck","accessibilityViewIsModal","allowFontScaling","caretHidden","clearButtonMode","dataDetectorTypes","disableFullscreenUI","enablesReturnKeyAutomatically","hitSlop","inlineImageLeft","inlineImagePadding","inputAccessoryViewID","keyboardAppearance","needsOffscreenAlphaCompositing","onAccessibilityTap","onContentSizeChange","onEndEditing","onMagicTap","onScroll","removeClippedSubviews","renderToHardwareTextureAndroid","returnKeyLabel","returnKeyType","scrollEnabled","selectionColor","selectionState","shouldRasterizeIOS","textBreakStrategy","textContentType","underlineColorAndroid","otherProps","type","dir","onKeyDown","onSelect","readOnly","ref","styles","initial","rows","displayName","defaultProps","autoCapitalize","autoComplete","State","propTypes","process","env","NODE_ENV","autoFocus","defaultValue","maxLength","placeholder","placeholderTextColor","isRequired","MozAppearance","WebkitAppearance","backgroundColor","borderColor","borderRadius","borderStyle","borderWidth","boxSizing","fontFamily","fontSize","padding","resize"],"mappings":"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","sourcesContent":["function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\n/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * \n */\n\nimport applyLayout from '../../modules/applyLayout';\nimport applyNativeMethods from '../../modules/applyNativeMethods';\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport { Component } from 'react';\nimport ColorPropType from '../ColorPropType';\nimport createElement from '../createElement';\nimport findNodeHandle from '../findNodeHandle';\nimport StyleSheet from '../StyleSheet';\nimport StyleSheetPropType from '../../modules/StyleSheetPropType';\nimport TextInputStylePropTypes from './TextInputStylePropTypes';\nimport TextInputState from '../../modules/TextInputState';\nimport ViewPropTypes from '../ViewPropTypes';\nimport { any, bool, func, number, oneOf, shape, string } from 'prop-types';\n\nvar isAndroid = canUseDOM && /Android/i.test(navigator && navigator.userAgent);\nvar emptyObject = {};\n\n/**\n * React Native events differ from W3C events.\n */\nvar normalizeEventHandler = function normalizeEventHandler(handler) {\n  return function (e) {\n    if (handler) {\n      e.nativeEvent.text = e.target.value;\n      return handler(e);\n    }\n  };\n};\n\n/**\n * Determines whether a 'selection' prop differs from a node's existing\n * selection state.\n */\nvar isSelectionStale = function isSelectionStale(node, selection) {\n  if (node && selection) {\n    var selectionEnd = node.selectionEnd,\n        selectionStart = node.selectionStart;\n    var start = selection.start,\n        end = selection.end;\n\n    return start !== selectionStart || end !== selectionEnd;\n  }\n  return false;\n};\n\n/**\n * Certain input types do no support 'selectSelectionRange' and will throw an\n * error.\n */\nvar setSelection = function setSelection(node, selection) {\n  try {\n    if (isSelectionStale(node, selection)) {\n      var start = selection.start,\n          end = selection.end;\n      // workaround for Blink on Android: see https://github.com/text-mask/text-mask/issues/300\n\n      if (isAndroid) {\n        setTimeout(function () {\n          return node.setSelectionRange(start, end || start);\n        }, 10);\n      } else {\n        node.setSelectionRange(start, end || start);\n      }\n    }\n  } catch (e) {}\n};\n\nvar TextInput = function (_Component) {\n  _inherits(TextInput, _Component);\n\n  function TextInput() {\n    var _temp, _this, _ret;\n\n    _classCallCheck(this, TextInput);\n\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this._handleBlur = function (e) {\n      var onBlur = _this.props.onBlur;\n\n      TextInputState._currentlyFocusedNode = null;\n      if (onBlur) {\n        onBlur(e);\n      }\n    }, _this._handleChange = function (e) {\n      var _this$props = _this.props,\n          onChange = _this$props.onChange,\n          onChangeText = _this$props.onChangeText;\n      var text = e.nativeEvent.text;\n\n      if (onChange) {\n        onChange(e);\n      }\n      if (onChangeText) {\n        onChangeText(text);\n      }\n      _this._handleSelectionChange(e);\n    }, _this._handleFocus = function (e) {\n      var _this$props2 = _this.props,\n          clearTextOnFocus = _this$props2.clearTextOnFocus,\n          onFocus = _this$props2.onFocus,\n          selectTextOnFocus = _this$props2.selectTextOnFocus;\n\n      var node = _this._node;\n      TextInputState._currentlyFocusedNode = _this._node;\n      if (onFocus) {\n        onFocus(e);\n      }\n      if (clearTextOnFocus) {\n        _this.clear();\n      }\n      if (selectTextOnFocus) {\n        node && node.select();\n      }\n    }, _this._handleKeyDown = function (e) {\n      // Prevent key events bubbling (see #612)\n      e.stopPropagation();\n\n      // Backspace, Escape, Tab, Cmd+Enter, and Arrow keys only fire 'keydown'\n      // DOM events\n      if (e.which === 8 || e.which === 9 || e.which === 13 && e.metaKey || e.which === 27 || e.which === 37 || e.which === 38 || e.which === 39 || e.which === 40) {\n        _this._handleKeyPress(e);\n      }\n    }, _this._handleKeyPress = function (e) {\n      var _this$props3 = _this.props,\n          blurOnSubmit = _this$props3.blurOnSubmit,\n          multiline = _this$props3.multiline,\n          onKeyPress = _this$props3.onKeyPress,\n          onSubmitEditing = _this$props3.onSubmitEditing;\n\n      var blurOnSubmitDefault = !multiline;\n      var shouldBlurOnSubmit = blurOnSubmit == null ? blurOnSubmitDefault : blurOnSubmit;\n\n      if (onKeyPress) {\n        var keyValue = void 0;\n        switch (e.which) {\n          case 8:\n            keyValue = 'Backspace';\n            break;\n          case 9:\n            keyValue = 'Tab';\n            break;\n          case 13:\n            keyValue = 'Enter';\n            break;\n          case 27:\n            keyValue = 'Escape';\n            break;\n          case 32:\n            keyValue = ' ';\n            break;\n          case 37:\n            keyValue = 'ArrowLeft';\n            break;\n          case 38:\n            keyValue = 'ArrowUp';\n            break;\n          case 39:\n            keyValue = 'ArrowRight';\n            break;\n          case 40:\n            keyValue = 'ArrowDown';\n            break;\n          default:\n            {\n              // Trim to only care about the keys that have a textual representation\n              if (e.shiftKey) {\n                keyValue = String.fromCharCode(e.which).trim();\n              } else {\n                keyValue = String.fromCharCode(e.which).toLowerCase().trim();\n              }\n            }\n        }\n\n        if (keyValue) {\n          e.nativeEvent = {\n            altKey: e.altKey,\n            ctrlKey: e.ctrlKey,\n            key: keyValue,\n            metaKey: e.metaKey,\n            shiftKey: e.shiftKey,\n            target: e.target\n          };\n          onKeyPress(e);\n        }\n      }\n\n      if (!e.isDefaultPrevented() && e.which === 13 && !e.shiftKey) {\n        if ((blurOnSubmit || !multiline) && onSubmitEditing) {\n          // prevent \"Enter\" from inserting a newline\n          e.preventDefault();\n          e.nativeEvent = { target: e.target, text: e.target.value };\n          onSubmitEditing(e);\n        }\n        if (shouldBlurOnSubmit) {\n          _this.blur();\n        }\n      }\n    }, _this._handleSelectionChange = function (e) {\n      var _this$props4 = _this.props,\n          onSelectionChange = _this$props4.onSelectionChange,\n          _this$props4$selectio = _this$props4.selection,\n          selection = _this$props4$selectio === undefined ? emptyObject : _this$props4$selectio;\n\n      if (onSelectionChange) {\n        try {\n          var node = e.target;\n          if (isSelectionStale(node, selection)) {\n            var selectionStart = node.selectionStart,\n                selectionEnd = node.selectionEnd;\n\n            e.nativeEvent.selection = {\n              start: selectionStart,\n              end: selectionEnd\n            };\n            onSelectionChange(e);\n          }\n        } catch (e) {}\n      }\n    }, _this._setNode = function (component) {\n      _this._node = findNodeHandle(component);\n    }, _temp), _possibleConstructorReturn(_this, _ret);\n  }\n\n  TextInput.prototype.clear = function clear() {\n    this._node.value = '';\n  };\n\n  TextInput.prototype.isFocused = function isFocused() {\n    return TextInputState.currentlyFocusedField() === this._node;\n  };\n\n  TextInput.prototype.componentDidMount = function componentDidMount() {\n    setSelection(this._node, this.props.selection);\n    if (document.activeElement === this._node) {\n      TextInputState._currentlyFocusedNode = this._node;\n    }\n  };\n\n  TextInput.prototype.componentDidUpdate = function componentDidUpdate() {\n    setSelection(this._node, this.props.selection);\n  };\n\n  TextInput.prototype.render = function render() {\n    var _props = this.props,\n        autoCorrect = _props.autoCorrect,\n        editable = _props.editable,\n        keyboardType = _props.keyboardType,\n        multiline = _props.multiline,\n        numberOfLines = _props.numberOfLines,\n        secureTextEntry = _props.secureTextEntry,\n        style = _props.style,\n        blurOnSubmit = _props.blurOnSubmit,\n        clearTextOnFocus = _props.clearTextOnFocus,\n        onChangeText = _props.onChangeText,\n        onLayout = _props.onLayout,\n        onSelectionChange = _props.onSelectionChange,\n        onSubmitEditing = _props.onSubmitEditing,\n        selection = _props.selection,\n        selectTextOnFocus = _props.selectTextOnFocus,\n        spellCheck = _props.spellCheck,\n        accessibilityViewIsModal = _props.accessibilityViewIsModal,\n        allowFontScaling = _props.allowFontScaling,\n        caretHidden = _props.caretHidden,\n        clearButtonMode = _props.clearButtonMode,\n        dataDetectorTypes = _props.dataDetectorTypes,\n        disableFullscreenUI = _props.disableFullscreenUI,\n        enablesReturnKeyAutomatically = _props.enablesReturnKeyAutomatically,\n        hitSlop = _props.hitSlop,\n        inlineImageLeft = _props.inlineImageLeft,\n        inlineImagePadding = _props.inlineImagePadding,\n        inputAccessoryViewID = _props.inputAccessoryViewID,\n        keyboardAppearance = _props.keyboardAppearance,\n        needsOffscreenAlphaCompositing = _props.needsOffscreenAlphaCompositing,\n        onAccessibilityTap = _props.onAccessibilityTap,\n        onContentSizeChange = _props.onContentSizeChange,\n        onEndEditing = _props.onEndEditing,\n        onMagicTap = _props.onMagicTap,\n        onScroll = _props.onScroll,\n        removeClippedSubviews = _props.removeClippedSubviews,\n        renderToHardwareTextureAndroid = _props.renderToHardwareTextureAndroid,\n        returnKeyLabel = _props.returnKeyLabel,\n        returnKeyType = _props.returnKeyType,\n        scrollEnabled = _props.scrollEnabled,\n        selectionColor = _props.selectionColor,\n        selectionState = _props.selectionState,\n        shouldRasterizeIOS = _props.shouldRasterizeIOS,\n        textBreakStrategy = _props.textBreakStrategy,\n        textContentType = _props.textContentType,\n        underlineColorAndroid = _props.underlineColorAndroid,\n        otherProps = _objectWithoutProperties(_props, ['autoCorrect', 'editable', 'keyboardType', 'multiline', 'numberOfLines', 'secureTextEntry', 'style', 'blurOnSubmit', 'clearTextOnFocus', 'onChangeText', 'onLayout', 'onSelectionChange', 'onSubmitEditing', 'selection', 'selectTextOnFocus', 'spellCheck', 'accessibilityViewIsModal', 'allowFontScaling', 'caretHidden', 'clearButtonMode', 'dataDetectorTypes', 'disableFullscreenUI', 'enablesReturnKeyAutomatically', 'hitSlop', 'inlineImageLeft', 'inlineImagePadding', 'inputAccessoryViewID', 'keyboardAppearance', 'needsOffscreenAlphaCompositing', 'onAccessibilityTap', 'onContentSizeChange', 'onEndEditing', 'onMagicTap', 'onScroll', 'removeClippedSubviews', 'renderToHardwareTextureAndroid', 'returnKeyLabel', 'returnKeyType', 'scrollEnabled', 'selectionColor', 'selectionState', 'shouldRasterizeIOS', 'textBreakStrategy', 'textContentType', 'underlineColorAndroid']);\n\n    var type = void 0;\n\n    switch (keyboardType) {\n      case 'email-address':\n        type = 'email';\n        break;\n      case 'number-pad':\n      case 'numeric':\n        type = 'number';\n        break;\n      case 'phone-pad':\n        type = 'tel';\n        break;\n      case 'search':\n      case 'web-search':\n        type = 'search';\n        break;\n      case 'url':\n        type = 'url';\n        break;\n      default:\n        type = 'text';\n    }\n\n    if (secureTextEntry) {\n      type = 'password';\n    }\n\n    var component = multiline ? 'textarea' : 'input';\n\n    Object.assign(otherProps, {\n      autoCorrect: autoCorrect ? 'on' : 'off',\n      dir: 'auto',\n      onBlur: normalizeEventHandler(this._handleBlur),\n      onChange: normalizeEventHandler(this._handleChange),\n      onFocus: normalizeEventHandler(this._handleFocus),\n      onKeyDown: this._handleKeyDown,\n      onKeyPress: this._handleKeyPress,\n      onSelect: normalizeEventHandler(this._handleSelectionChange),\n      readOnly: !editable,\n      ref: this._setNode,\n      spellCheck: spellCheck != null ? spellCheck : autoCorrect,\n      style: [styles.initial, style]\n    });\n\n    if (multiline) {\n      otherProps.rows = numberOfLines;\n    } else {\n      otherProps.type = type;\n    }\n\n    return createElement(component, otherProps);\n  };\n\n  return TextInput;\n}(Component);\n\nTextInput.displayName = 'TextInput';\nTextInput.defaultProps = {\n  autoCapitalize: 'sentences',\n  autoComplete: 'on',\n  autoCorrect: true,\n  editable: true,\n  keyboardType: 'default',\n  multiline: false,\n  numberOfLines: 1,\n  secureTextEntry: false,\n  style: emptyObject\n};\nTextInput.State = TextInputState;\nTextInput.propTypes = process.env.NODE_ENV !== \"production\" ? Object.assign({}, ViewPropTypes, {\n  autoCapitalize: oneOf(['characters', 'none', 'sentences', 'words']),\n  autoComplete: string,\n  autoCorrect: bool,\n  autoFocus: bool,\n  blurOnSubmit: bool,\n  clearTextOnFocus: bool,\n  defaultValue: string,\n  editable: bool,\n  inputAccessoryViewID: string,\n  keyboardType: oneOf(['default', 'email-address', 'number-pad', 'numbers-and-punctuation', 'numeric', 'phone-pad', 'search', 'url', 'web-search']),\n  maxLength: number,\n  multiline: bool,\n  numberOfLines: number,\n  onBlur: func,\n  onChange: func,\n  onChangeText: func,\n  onFocus: func,\n  onKeyPress: func,\n  onSelectionChange: func,\n  onSubmitEditing: func,\n  placeholder: string,\n  placeholderTextColor: ColorPropType,\n  secureTextEntry: bool,\n  selectTextOnFocus: bool,\n  selection: shape({\n    start: number.isRequired,\n    end: number\n  }),\n  spellCheck: bool,\n  style: StyleSheetPropType(TextInputStylePropTypes),\n  value: string,\n  /* react-native compat */\n  /* eslint-disable */\n  caretHidden: bool,\n  clearButtonMode: string,\n  dataDetectorTypes: string,\n  disableFullscreenUI: bool,\n  enablesReturnKeyAutomatically: bool,\n  keyboardAppearance: string,\n  inlineImageLeft: string,\n  inlineImagePadding: number,\n  onContentSizeChange: func,\n  onEndEditing: func,\n  onScroll: func,\n  returnKeyLabel: string,\n  returnKeyType: string,\n  selectionColor: ColorPropType,\n  selectionState: any,\n  textBreakStrategy: string,\n  underlineColorAndroid: ColorPropType\n  /* eslint-enable */\n}) : {};\n\n\nvar styles = StyleSheet.create({\n  initial: {\n    MozAppearance: 'textfield',\n    WebkitAppearance: 'none',\n    backgroundColor: 'transparent',\n    borderColor: 'black',\n    borderRadius: 0,\n    borderStyle: 'solid',\n    borderWidth: 0,\n    boxSizing: 'border-box',\n    fontFamily: 'System',\n    fontSize: 14,\n    padding: 0,\n    resize: 'none'\n  }\n});\n\nexport default applyLayout(applyNativeMethods(TextInput));"]},"metadata":{},"sourceType":"module"}