{"ast":null,"code":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar EventSubscription = function () {\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  EventSubscription.prototype.remove = function remove() {\n    this.subscriber.removeSubscription(this);\n  };\n\n  return EventSubscription;\n}();\n\nexport default EventSubscription;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/node_modules/react-native-web/dist/vendor/react-native/emitter/EventSubscription.js"],"names":["_classCallCheck","instance","Constructor","TypeError","EventSubscription","subscriber","prototype","remove","removeSubscription"],"mappings":"AASA;;AAEA,SAASA,eAAT,CAAyBC,QAAzB,EAAmCC,WAAnC,EAAgD;AAAE,MAAI,EAAED,QAAQ,YAAYC,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIC,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAMzJ,IAAIC,iBAAiB,GAAG,YAAY;AAMlC,WAASA,iBAAT,CAA2BC,UAA3B,EAAuC;AACrCL,IAAAA,eAAe,CAAC,IAAD,EAAOI,iBAAP,CAAf;;AAEA,SAAKC,UAAL,GAAkBA,UAAlB;AACD;;AAODD,EAAAA,iBAAiB,CAACE,SAAlB,CAA4BC,MAA5B,GAAqC,SAASA,MAAT,GAAkB;AACrD,SAAKF,UAAL,CAAgBG,kBAAhB,CAAmC,IAAnC;AACD,GAFD;;AAIA,SAAOJ,iBAAP;AACD,CAtBuB,EAAxB;;AAwBA,eAAeA,iBAAf","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule EventSubscription\n * \n */\n'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * EventSubscription represents a subscription to a particular event. It can\n * remove its own subscription.\n */\nvar EventSubscription = function () {\n\n  /**\n   * @param {EventSubscriptionVendor} subscriber the subscriber that controls\n   *   this subscription.\n   */\n  function EventSubscription(subscriber) {\n    _classCallCheck(this, EventSubscription);\n\n    this.subscriber = subscriber;\n  }\n\n  /**\n   * Removes this subscription from the subscriber that controls it.\n   */\n\n\n  EventSubscription.prototype.remove = function remove() {\n    this.subscriber.removeSubscription(this);\n  };\n\n  return EventSubscription;\n}();\n\nexport default EventSubscription;"]},"metadata":{},"sourceType":"module"}