{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\src\\\\screens\\\\main\\\\MainScreen\\\\index.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport MainTemplete from \"../../../components/templates/Main\";\nimport styles from \"./styles\";\nimport { Actions } from \"react-native-router-flux\";\nimport { readAllFromDatabase as readAllRoute } from \"../../../redux/route/action\";\nimport { readFromDatabase as readAdvertisements } from \"../../../redux/advertisement/action\";\nimport { readInfo as readSettingInfo } from \"../../../redux/settings/action\";\nimport { listenFromDatabase as listenToRouteTickets, removeListenerFromDatabase as removeListenerFromRouteTickets } from \"../../../redux/routeTicket/action\";\nimport { ActivityIndicator, View } from \"../../../marslab-library-react-native/components/atoms\";\nimport clone from \"clone\";\n\nvar index = function (_Component) {\n  _inherits(index, _Component);\n\n  var _super = _createSuper(index);\n\n  function index(props) {\n    _classCallCheck(this, index);\n\n    return _super.call(this, props);\n  }\n\n  _createClass(index, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.listenToRouteTickets();\n      this.props.readAllRoute();\n      this.props.readAdvertisements();\n      this.props.readSettingInfo();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeListenerFromRouteTickets();\n    }\n  }, {\n    key: \"onPressCardChallenge\",\n    value: function onPressCardChallenge(id) {\n      Actions.Route({\n        routeId: id\n      });\n    }\n  }, {\n    key: \"onPressAdvertisement\",\n    value: function onPressAdvertisement(id) {\n      Actions.Advertisement({\n        AdvertisementId: id\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          allRoutes = _this$props.allRoutes,\n          advertisements = _this$props.advertisements,\n          readLoadingRouteTicket = _this$props.readLoadingRouteTicket,\n          readLoadingRoute = _this$props.readLoadingRoute,\n          readLoadingAdvertisement = _this$props.readLoadingAdvertisement,\n          headerImages = _this$props.headerImages,\n          readLoadingHeaderImages = _this$props.readLoadingHeaderImages;\n      var dataSource = [];\n      var dataSource2 = [];\n\n      var _clone = clone(this.props),\n          routeTickets = _clone.routeTickets;\n\n      routeTickets = routeTickets.filter(function (routeTicket) {\n        return routeTicket.route.ended.boolean === false && routeTicket.route.terminated.at === null;\n      });\n\n      if (routeTickets.length > 0) {\n        dataSource = routeTickets.map(function (_ref) {\n          var route = _ref.route;\n          return {\n            key: route.id,\n            id: route.id,\n            type: route.type,\n            title: route.title,\n            image: require(\"../../../assets/gogogain/main_map.jpg\")\n          };\n        });\n      }\n\n      var size = 10;\n      dataSource2 = allRoutes.slice(0, size).map(function (route) {\n        var seatLeft = null;\n        var joined = 0;\n\n        if (route.minimumUser - route.currentUser <= 0) {\n          seatLeft = \"0\";\n        } else {\n          seatLeft = route.minimumUser - route.currentUser;\n        }\n\n        return {\n          key: route.id,\n          id: route.id,\n          totalMission: route.totalMissions,\n          title: route.title,\n          type: route.type,\n          seatLeft: seatLeft,\n          startTime: route.startTime,\n          endTime: route.endTime,\n          image: require(\"../../../assets/gogogain/main_map.jpg\"),\n          joined: joined\n        };\n      });\n\n      for (var x = 0; x < dataSource2.length; x++) {\n        for (var y = 0; y < dataSource.length; y++) {\n          if (dataSource2[x].id === dataSource[y].id) dataSource2[x].joined++;\n        }\n      }\n\n      dataSource2 = dataSource2.sort(function (a, b) {\n        return a.joined - b.joined;\n      });\n\n      var noImageHeaderSlider = require(\"../../../assets/gogogain/top_image.jpg\");\n\n      var noImageAdvertisement = require(\"../../../assets/gogogain/icons8-camera-100.png\");\n\n      return React.createElement(MainTemplete, {\n        slider: headerImages,\n        dataSource: dataSource,\n        dataSource2: dataSource2,\n        routeTickets: routeTickets,\n        sectionTitle1: \"Join Now\",\n        sectionTitle2: \"Latest News\",\n        sectionTitle3: \"Your Challenges\",\n        label1: \"Total Mission : \",\n        label2: \"Seat Left : \",\n        label3: \"Period : \",\n        unit: \" pax\",\n        onPressCard: this.onPressCardChallenge.bind(this),\n        advertisements: advertisements,\n        onPressAdvertisement: this.onPressAdvertisement.bind(this),\n        noImageAdvertisement: noImageAdvertisement,\n        noImageHeaderSlider: noImageHeaderSlider,\n        readLoadingAdvertisement: readLoadingAdvertisement,\n        readLoadingRoute: readLoadingRoute,\n        readLoadingRouteTicket: readLoadingRouteTicket,\n        readLoadingHeaderImages: readLoadingHeaderImages,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 9\n        }\n      });\n    }\n  }]);\n\n  return index;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var routeTickets = state.RouteTicket.routeTickets;\n  var allRoutes = state.Route.allRoutes;\n  var advertisements = state.Advertisement.advertisements;\n  var headerImages = state.Settings.info.headerImages;\n  var readLoadingRouteTicket = state.RouteTicket.readLoading;\n  var readLoadingRoute = state.Route.readLoading;\n  var readLoadingAdvertisement = state.Advertisement.readLoading;\n  var readLoadingHeaderImages = state.Settings.readInfoLoading;\n  return {\n    routeTickets: routeTickets,\n    allRoutes: allRoutes,\n    advertisements: advertisements,\n    headerImages: headerImages,\n    readLoadingHeaderImages: readLoadingHeaderImages,\n    readLoadingRouteTicket: readLoadingRouteTicket,\n    readLoadingRoute: readLoadingRoute,\n    readLoadingAdvertisement: readLoadingAdvertisement\n  };\n};\n\nexport default connect(mapStateToProps, {\n  listenToRouteTickets: listenToRouteTickets,\n  removeListenerFromRouteTickets: removeListenerFromRouteTickets,\n  readAllRoute: readAllRoute,\n  readAdvertisements: readAdvertisements,\n  readSettingInfo: readSettingInfo\n})(index);","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/screens/main/MainScreen/index.js"],"names":["React","Component","connect","MainTemplete","styles","Actions","readAllFromDatabase","readAllRoute","readFromDatabase","readAdvertisements","readInfo","readSettingInfo","listenFromDatabase","listenToRouteTickets","removeListenerFromDatabase","removeListenerFromRouteTickets","ActivityIndicator","View","clone","index","props","id","Route","routeId","Advertisement","AdvertisementId","allRoutes","advertisements","readLoadingRouteTicket","readLoadingRoute","readLoadingAdvertisement","headerImages","readLoadingHeaderImages","dataSource","dataSource2","routeTickets","filter","routeTicket","route","ended","boolean","terminated","at","length","map","key","type","title","image","require","size","slice","seatLeft","joined","minimumUser","currentUser","totalMission","totalMissions","startTime","endTime","x","y","sort","a","b","noImageHeaderSlider","noImageAdvertisement","onPressCardChallenge","bind","onPressAdvertisement","mapStateToProps","state","RouteTicket","Settings","info","readLoading","readInfoLoading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport MainTemplete from \"../../../components/templates/Main\";\r\nimport styles from \"./styles\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { readAllFromDatabase as readAllRoute } from \"../../../redux/route/action\";\r\nimport { readFromDatabase as readAdvertisements } from \"../../../redux/advertisement/action\";\r\nimport { readInfo as readSettingInfo } from \"../../../redux/settings/action\";\r\nimport {\r\n  listenFromDatabase as listenToRouteTickets,\r\n  removeListenerFromDatabase as removeListenerFromRouteTickets,\r\n} from \"../../../redux/routeTicket/action\";\r\nimport {\r\n  ActivityIndicator,\r\n  View,\r\n} from \"../../../marslab-library-react-native/components/atoms\";\r\n\r\nimport clone from \"clone\"\r\n\r\nclass index extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.listenToRouteTickets();\r\n    this.props.readAllRoute();\r\n    this.props.readAdvertisements();\r\n    this.props.readSettingInfo();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.props.removeListenerFromRouteTickets();\r\n  }\r\n\r\n  onPressCardChallenge(id) {\r\n    Actions.Route({ routeId: id });\r\n  }\r\n\r\n  onPressAdvertisement(id) {\r\n    Actions.Advertisement({ AdvertisementId: id })\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      allRoutes,\r\n      advertisements,\r\n      readLoadingRouteTicket,\r\n      readLoadingRoute,\r\n      readLoadingAdvertisement,\r\n      headerImages,\r\n      readLoadingHeaderImages\r\n    } = this.props;\r\n    let dataSource = [];\r\n    let dataSource2 = [];\r\n\r\n    let { routeTickets } = clone(this.props)\r\n\r\n    routeTickets = routeTickets.filter((routeTicket)=> routeTicket.route.ended.boolean === false && routeTicket.route.terminated.at === null)\r\n\r\n    if (routeTickets.length > 0) {\r\n      dataSource = routeTickets.map(({ route }) => {\r\n        return {\r\n          key: route.id,\r\n          id: route.id,\r\n          type: route.type,\r\n          title: route.title,\r\n          image: require(\"../../../assets/gogogain/main_map.jpg\"),\r\n        };\r\n      });\r\n    } \r\n\r\n    let size = 10;\r\n    dataSource2 = allRoutes.slice(0, size).map((route) => {\r\n      let seatLeft = null;\r\n      let joined = 0;\r\n      if (route.minimumUser - route.currentUser <= 0) {\r\n        seatLeft = \"0\";\r\n      } else {\r\n        seatLeft = route.minimumUser - route.currentUser;\r\n      }\r\n\r\n      return {\r\n        key: route.id,\r\n        id: route.id,\r\n        totalMission: route.totalMissions,\r\n        title: route.title,\r\n        type: route.type,\r\n        seatLeft: seatLeft,\r\n        startTime: route.startTime,\r\n        endTime: route.endTime,\r\n        image: require(\"../../../assets/gogogain/main_map.jpg\"),\r\n        joined: joined,\r\n      };\r\n    });\r\n \r\n    for(let x=0; x < dataSource2.length; x++){\r\n      for(let y=0; y < dataSource.length; y++){\r\n        if(dataSource2[x].id === dataSource[y].id)\r\n          dataSource2[x].joined++;\r\n      }\r\n    }\r\n\r\n    dataSource2 = dataSource2.sort((a, b) => {\r\n      return (a.joined) - (b.joined);\r\n    });\r\n\r\n    const noImageHeaderSlider = require(\"../../../assets/gogogain/top_image.jpg\")\r\n\r\n    const noImageAdvertisement = require(\"../../../assets/gogogain/icons8-camera-100.png\")\r\n\r\n    return (\r\n        <MainTemplete\r\n          slider={headerImages}\r\n          dataSource={dataSource}\r\n          dataSource2={dataSource2}\r\n          routeTickets={routeTickets}\r\n          sectionTitle1=\"Join Now\"\r\n          sectionTitle2=\"Latest News\"\r\n          sectionTitle3=\"Your Challenges\"\r\n          label1=\"Total Mission : \"\r\n          label2=\"Seat Left : \"\r\n          label3=\"Period : \"\r\n          unit=\" pax\"\r\n          onPressCard={this.onPressCardChallenge.bind(this)}\r\n          advertisements = {advertisements}\r\n          onPressAdvertisement = {this.onPressAdvertisement.bind(this)}\r\n          noImageAdvertisement= {noImageAdvertisement}\r\n          noImageHeaderSlider = {noImageHeaderSlider}\r\n          readLoadingAdvertisement = {readLoadingAdvertisement}\r\n          readLoadingRoute = {readLoadingRoute}\r\n          readLoadingRouteTicket = {readLoadingRouteTicket}\r\n          readLoadingHeaderImages ={readLoadingHeaderImages}\r\n        />\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { routeTickets } = state.RouteTicket;\r\n  const { allRoutes } = state.Route;\r\n  const { advertisements } = state.Advertisement;\r\n  const { headerImages } = state.Settings.info\r\n\r\n  const readLoadingRouteTicket = state.RouteTicket.readLoading;\r\n  const readLoadingRoute = state.Route.readLoading;\r\n  const readLoadingAdvertisement = state.Advertisement.readLoading;\r\n  const readLoadingHeaderImages = state.Settings.readInfoLoading;\r\n\r\n  return {\r\n    routeTickets,\r\n    allRoutes,\r\n    advertisements,\r\n    headerImages,\r\n    readLoadingHeaderImages,\r\n    readLoadingRouteTicket,\r\n    readLoadingRoute,\r\n    readLoadingAdvertisement,\r\n};\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n  listenToRouteTickets,\r\n  removeListenerFromRouteTickets,\r\n  readAllRoute,\r\n  readAdvertisements,\r\n  readSettingInfo\r\n})(index);\r\n"]},"metadata":{},"sourceType":"module"}