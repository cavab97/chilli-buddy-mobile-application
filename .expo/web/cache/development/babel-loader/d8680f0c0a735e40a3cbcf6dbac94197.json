{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\node_modules\\\\react-native-gallery-swiper\\\\src\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport PropTypes from \"prop-types\";\nimport { createResponder } from \"react-native-easy-guesture-responder\";\nimport ImageTransformer from \"react-native-image-transformer\";\nimport PageList from \"react-native-page-list\";\nvar DEFAULT_FLAT_LIST_PROPS = {\n  windowSize: 3\n};\n\nvar GallerySwiper = function (_PureComponent) {\n  _inherits(GallerySwiper, _PureComponent);\n\n  var _super = _createSuper(GallerySwiper);\n\n  function GallerySwiper(props) {\n    var _this;\n\n    _classCallCheck(this, GallerySwiper);\n\n    _this = _super.call(this, props);\n    _this.imageRefs = new Map();\n    _this.activeResponder = undefined;\n    _this.firstMove = true;\n    _this.currentPage = 0;\n    _this.pageCount = 0;\n    _this.gestureResponder = undefined;\n    _this.renderPage = _this.renderPage.bind(_assertThisInitialized(_this));\n    _this.onPageSelected = _this.onPageSelected.bind(_assertThisInitialized(_this));\n    _this.onPageScrollStateChanged = _this.onPageScrollStateChanged.bind(_assertThisInitialized(_this));\n    _this.getViewPagerInstance = _this.getViewPagerInstance.bind(_assertThisInitialized(_this));\n    _this.getCurrentImageTransformer = _this.getCurrentImageTransformer.bind(_assertThisInitialized(_this));\n    _this.getImageTransformer = _this.getImageTransformer.bind(_assertThisInitialized(_this));\n    _this.getViewPagerInstance = _this.getViewPagerInstance.bind(_assertThisInitialized(_this));\n    _this.activeImageResponder = _this.activeImageResponder.bind(_assertThisInitialized(_this));\n\n    var onResponderReleaseOrTerminate = function onResponderReleaseOrTerminate(evt, gestureState) {\n      if (_this.activeResponder) {\n        if (_this.activeResponder === _this.viewPagerResponder && !_this.shouldScrollViewPager(evt, gestureState) && Math.abs(gestureState.vx) > 0.5) {\n          _this.activeResponder.onEnd(evt, gestureState, true);\n\n          _this.getViewPagerInstance().flingToPage(_this.currentPage, gestureState.vx);\n        } else {\n          _this.activeResponder.onEnd(evt, gestureState);\n        }\n\n        _this.activeResponder = null;\n      }\n\n      _this.firstMove = true;\n      _this.props.onGalleryStateChanged && _this.props.onGalleryStateChanged(true);\n    };\n\n    _this.gestureResponder = createResponder({\n      onStartShouldSetResponderCapture: function onStartShouldSetResponderCapture(evt, gestureState) {\n        return true;\n      },\n      onStartShouldSetResponder: function onStartShouldSetResponder(evt, gestureState) {\n        return true;\n      },\n      onResponderGrant: _this.activeImageResponder,\n      onResponderMove: function onResponderMove(evt, gestureState) {\n        if (_this.firstMove) {\n          _this.firstMove = false;\n\n          if (_this.shouldScrollViewPager(evt, gestureState)) {\n            _this.activeViewPagerResponder(evt, gestureState);\n          }\n\n          _this.props.onGalleryStateChanged && _this.props.onGalleryStateChanged(false);\n        }\n\n        if (_this.activeResponder === _this.viewPagerResponder) {\n          var dx = gestureState.moveX - gestureState.previousMoveX;\n\n          var offset = _this.getViewPagerInstance().getScrollOffsetFromCurrentPage();\n\n          if (dx > 0 && offset > 0 && !_this.shouldScrollViewPager(evt, gestureState)) {\n            if (dx > offset) {\n              _this.getViewPagerInstance().scrollByOffset(offset);\n\n              gestureState.moveX -= offset;\n\n              _this.activeImageResponder(evt, gestureState);\n            }\n          } else if (dx < 0 && offset < 0 && !_this.shouldScrollViewPager(evt, gestureState)) {\n            if (dx < offset) {\n              _this.getViewPagerInstance().scrollByOffset(offset);\n\n              gestureState.moveX -= offset;\n\n              _this.activeImageResponder(evt, gestureState);\n            }\n          }\n        }\n\n        _this.activeResponder.onMove(evt, gestureState);\n      },\n      onResponderRelease: onResponderReleaseOrTerminate,\n      onResponderTerminate: onResponderReleaseOrTerminate,\n      onResponderTerminationRequest: function onResponderTerminationRequest(evt, gestureState) {\n        return false;\n      },\n      onResponderDoubleTapConfirmed: function onResponderDoubleTapConfirmed(evt, gestureState) {\n        _this.props.onDoubleTapConfirmed && _this.props.onDoubleTapConfirmed(_this.currentPage);\n      },\n      onResponderSingleTapConfirmed: function onResponderSingleTapConfirmed(evt, gestureState) {\n        _this.props.onSingleTapConfirmed && _this.props.onSingleTapConfirmed(_this.currentPage);\n      }\n    });\n    _this.viewPagerResponder = {\n      onStart: function onStart(evt, gestureState) {\n        _this.getViewPagerInstance().onResponderGrant(evt, gestureState);\n      },\n      onMove: function onMove(evt, gestureState) {\n        _this.getViewPagerInstance().onResponderMove(evt, gestureState);\n      },\n      onEnd: function onEnd(evt, gestureState, disableSettle) {\n        _this.getViewPagerInstance().onResponderRelease(evt, gestureState, disableSettle);\n      }\n    };\n    _this.imageResponder = {\n      onStart: function onStart(evt, gestureState) {\n        var currentImageTransformer = _this.getCurrentImageTransformer();\n\n        currentImageTransformer && currentImageTransformer.onResponderGrant(evt, gestureState);\n\n        if (_this.props.onLongPress) {\n          _this._longPressTimeout = setTimeout(function () {\n            _this.props.onLongPress(gestureState, _this.currentPage);\n          }, 600);\n        }\n      },\n      onMove: function onMove(evt, gestureState) {\n        var currentImageTransformer = _this.getCurrentImageTransformer();\n\n        currentImageTransformer && currentImageTransformer.onResponderMove(evt, gestureState);\n        clearTimeout(_this._longPressTimeout);\n      },\n      onEnd: function onEnd(evt, gestureState) {\n        var currentImageTransformer = _this.getCurrentImageTransformer();\n\n        currentImageTransformer && currentImageTransformer.onResponderRelease(evt, gestureState);\n        clearTimeout(_this._longPressTimeout);\n      }\n    };\n    return _this;\n  }\n\n  _createClass(GallerySwiper, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this._isMounted = true;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this._isMounted = false;\n    }\n  }, {\n    key: \"shouldScrollViewPager\",\n    value: function shouldScrollViewPager(evt, gestureState) {\n      if (gestureState.numberActiveTouches > 1) {\n        return false;\n      }\n\n      var viewTransformer = this.getCurrentImageTransformer();\n\n      if (!viewTransformer) {\n        return false;\n      }\n\n      var space = viewTransformer.getAvailableTranslateSpace();\n      var dx = gestureState.moveX - gestureState.previousMoveX;\n\n      if (dx > 0 && space.left <= 0 && this.currentPage > 0) {\n        return true;\n      }\n\n      if (dx < 0 && space.right <= 0 && this.currentPage < this.pageCount - 1) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"activeImageResponder\",\n    value: function activeImageResponder(evt, gestureState) {\n      if (this.activeResponder !== this.imageResponder) {\n        if (this.activeResponder === this.viewPagerResponder) {\n          this.viewPagerResponder.onEnd(evt, gestureState, true);\n        }\n\n        this.activeResponder = this.imageResponder;\n        this.imageResponder.onStart(evt, gestureState);\n      }\n    }\n  }, {\n    key: \"activeViewPagerResponder\",\n    value: function activeViewPagerResponder(evt, gestureState) {\n      if (this.activeResponder !== this.viewPagerResponder) {\n        if (this.activeResponder === this.imageResponder) {\n          this.imageResponder.onEnd(evt, gestureState);\n        }\n\n        this.activeResponder = this.viewPagerResponder;\n        this.viewPagerResponder.onStart(evt, gestureState);\n      }\n    }\n  }, {\n    key: \"getImageTransformer\",\n    value: function getImageTransformer(page) {\n      if (page >= 0 && page < this.pageCount) {\n        var ref = this.imageRefs.get(page);\n\n        if (ref) {\n          return ref.getViewTransformerInstance();\n        }\n      }\n    }\n  }, {\n    key: \"getCurrentImageTransformer\",\n    value: function getCurrentImageTransformer() {\n      return this.getImageTransformer(this.currentPage);\n    }\n  }, {\n    key: \"getViewPagerInstance\",\n    value: function getViewPagerInstance() {\n      return this._galleryViewPager;\n    }\n  }, {\n    key: \"onPageSelected\",\n    value: function onPageSelected(page) {\n      this.currentPage = page;\n      this.props.onPageSelected && this.props.onPageSelected(page);\n\n      if (this.props.onEndReached && page + 1 > this.props.onEndReachedThreshold * this.props.images.length) {\n        this.props.onEndReached && this.props.onEndReached();\n      }\n    }\n  }, {\n    key: \"onPageScrollStateChanged\",\n    value: function onPageScrollStateChanged(state) {\n      if (state === \"idle\") {\n        this.resetHistoryImageTransform();\n      }\n\n      this.props.onPageScrollStateChanged && this.props.onPageScrollStateChanged(state);\n    }\n  }, {\n    key: \"renderPage\",\n    value: function renderPage(pageData, pageId) {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          _onViewTransformed = _this$props.onViewTransformed,\n          _onPinchTransforming = _this$props.onPinchTransforming,\n          _onPinchStartReached = _this$props.onPinchStartReached,\n          _onPinchEndReached = _this$props.onPinchEndReached,\n          _onTransformGestureReleased = _this$props.onTransformGestureReleased,\n          _onSwipeUpReleased = _this$props.onSwipeUpReleased,\n          _onSwipeDownReleased = _this$props.onSwipeDownReleased,\n          _onDoubleTapStartReached = _this$props.onDoubleTapStartReached,\n          _onDoubleTapEndReached = _this$props.onDoubleTapEndReached,\n          resizeMode = _this$props.resizeMode,\n          enableResistance = _this$props.enableResistance,\n          enableScale = _this$props.enableScale,\n          maxScale = _this$props.maxScale,\n          enableTranslate = _this$props.enableTranslate,\n          resistantStrHorizontal = _this$props.resistantStrHorizontal,\n          resistantStrVertical = _this$props.resistantStrVertical,\n          maxOverScrollDistance = _this$props.maxOverScrollDistance,\n          errorComponent = _this$props.errorComponent,\n          imageComponent = _this$props.imageComponent;\n      return React.createElement(ImageTransformer, {\n        onViewTransformed: function onViewTransformed(transform) {\n          _onViewTransformed && _onViewTransformed(transform, pageId);\n        },\n        onPinchTransforming: function onPinchTransforming(transform) {\n          _onPinchTransforming && _onPinchTransforming(transform, pageId);\n        },\n        onPinchStartReached: function onPinchStartReached(transform) {\n          _onPinchStartReached && _onPinchStartReached(transform, pageId);\n        },\n        onPinchEndReached: function onPinchEndReached(transform) {\n          _onPinchEndReached && _onPinchEndReached(transform, pageId);\n        },\n        onTransformGestureReleased: function onTransformGestureReleased(transform) {\n          return _onTransformGestureReleased && _onTransformGestureReleased(transform, pageId);\n        },\n        onSwipeUpReleased: function onSwipeUpReleased(transform) {\n          _onSwipeUpReleased && _onSwipeUpReleased(transform, pageId);\n        },\n        onSwipeDownReleased: function onSwipeDownReleased(transform) {\n          _onSwipeDownReleased && _onSwipeDownReleased(transform, pageId);\n        },\n        onDoubleTapStartReached: function onDoubleTapStartReached(transform) {\n          _onDoubleTapStartReached && _onDoubleTapStartReached(transform, pageId);\n        },\n        onDoubleTapEndReached: function onDoubleTapEndReached(transform) {\n          _onDoubleTapEndReached && _onDoubleTapEndReached(transform, pageId);\n        },\n        ref: function ref(_ref) {\n          _this2.imageRefs.set(pageId, _ref);\n        },\n        key: \"innerImage#\" + pageId,\n        errorComponent: errorComponent,\n        imageComponent: imageComponent,\n        image: pageData,\n        index: pageId,\n        enableScale: enableScale,\n        maxScale: maxScale,\n        enableTranslate: enableTranslate,\n        enableResistance: enableResistance,\n        resistantStrHorizontal: resistantStrHorizontal,\n        resistantStrVertical: resistantStrVertical,\n        maxOverScrollDistance: maxOverScrollDistance,\n        resizeMode: resizeMode,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 306,\n          columnNumber: 13\n        }\n      });\n    }\n  }, {\n    key: \"resetHistoryImageTransform\",\n    value: function resetHistoryImageTransform() {\n      var transformer = this.getImageTransformer(this.currentPage + 1);\n\n      if (transformer) {\n        transformer.forceUpdateTransform({\n          scale: 1,\n          translateX: 0,\n          translateY: 0\n        });\n      }\n\n      transformer = this.getImageTransformer(this.currentPage - 1);\n\n      if (transformer) {\n        transformer.forceUpdateTransform({\n          scale: 1,\n          translateX: 0,\n          translateY: 0\n        });\n      }\n    }\n  }, {\n    key: \"flingToPage\",\n    value: function flingToPage(_ref2) {\n      var index = _ref2.index,\n          velocityX = _ref2.velocityX;\n      this._galleryViewPager && this._galleryViewPager.flingToPage(index, velocityX);\n    }\n  }, {\n    key: \"scrollToPage\",\n    value: function scrollToPage(_ref3) {\n      var index = _ref3.index,\n          immediate = _ref3.immediate;\n      this._galleryViewPager && this._galleryViewPager.scrollToPage(index, immediate);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var gestureResponder = this.gestureResponder;\n      var images = this.props.images;\n\n      if (!images) {\n        images = [];\n      }\n\n      this.pageCount = images.length;\n\n      if (this.pageCount <= 0) {\n        gestureResponder = {};\n      }\n\n      var flatListProps = _objectSpread({}, DEFAULT_FLAT_LIST_PROPS, {}, this.props.flatListProps);\n\n      return React.createElement(PageList, _extends({}, this.props, {\n        flatListProps: flatListProps,\n        ref: function ref(component) {\n          _this3._galleryViewPager = component;\n          _this3.props.refPage && _this3.props.refPage(component);\n        },\n        scrollViewStyle: this.props.scrollViewStyle,\n        scrollEnabled: false,\n        renderPage: this.renderPage,\n        pageDataArray: images\n      }, gestureResponder, {\n        sensitiveScroll: this.props.sensitiveScroll,\n        onPageSelected: this.onPageSelected,\n        onPageScrollStateChanged: this.onPageScrollStateChanged,\n        onPageScroll: this.props.onPageScroll,\n        removeClippedSubviews: this.props.removeClippedSubviews,\n        initialNumToRender: this.props.initialNumToRender,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416,\n          columnNumber: 13\n        }\n      }));\n    }\n  }]);\n\n  return GallerySwiper;\n}(PureComponent);\n\nGallerySwiper.propTypes = _objectSpread({}, View.propTypes, {\n  images: PropTypes.arrayOf(PropTypes.object).isRequired,\n  initialPage: PropTypes.number,\n  resizeMode: PropTypes.string,\n  initialNumToRender: PropTypes.number,\n  scrollViewStyle: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  pageMargin: PropTypes.number,\n  sensitiveScroll: PropTypes.bool,\n  onPageSelected: PropTypes.func,\n  onPageScrollStateChanged: PropTypes.func,\n  onPageScroll: PropTypes.func,\n  onPinchTransforming: PropTypes.func,\n  onPinchStartReached: PropTypes.func,\n  onPinchEndReached: PropTypes.func,\n  onDoubleTapStartReached: PropTypes.func,\n  onDoubleTapEndReached: PropTypes.func,\n  onDoubleTapConfirmed: PropTypes.func,\n  onSingleTapConfirmed: PropTypes.func,\n  onGalleryStateChanged: PropTypes.func,\n  onLongPress: PropTypes.func,\n  onViewTransformed: PropTypes.func,\n  onTransformGestureReleased: PropTypes.func,\n  onSwipeUpReleased: PropTypes.func,\n  onSwipeDownReleased: PropTypes.func,\n  onEndReached: PropTypes.func,\n  onEndReachedThreshold: PropTypes.number,\n  enableScale: PropTypes.bool,\n  maxScale: PropTypes.number,\n  enableTranslate: PropTypes.bool,\n  enableResistance: PropTypes.bool,\n  resistantStrHorizontal: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  resistantStrVertical: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  maxOverScrollDistance: PropTypes.number,\n  removeClippedSubviews: PropTypes.bool,\n  imageComponent: PropTypes.func,\n  errorComponent: PropTypes.func,\n  flatListProps: PropTypes.object,\n  refPage: PropTypes.func\n});\nGallerySwiper.defaultProps = {\n  style: {\n    flex: 1,\n    backgroundColor: \"#000\"\n  },\n  initialNumToRender: 7,\n  imageComponent: undefined,\n  scrollViewStyle: {},\n  flatListProps: DEFAULT_FLAT_LIST_PROPS,\n  onEndReachedThreshold: 0.5\n};\nexport { GallerySwiper as default };","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-gallery-swiper/src/index.js"],"names":["React","PureComponent","PropTypes","createResponder","ImageTransformer","PageList","DEFAULT_FLAT_LIST_PROPS","windowSize","GallerySwiper","props","imageRefs","Map","activeResponder","undefined","firstMove","currentPage","pageCount","gestureResponder","renderPage","bind","onPageSelected","onPageScrollStateChanged","getViewPagerInstance","getCurrentImageTransformer","getImageTransformer","activeImageResponder","onResponderReleaseOrTerminate","evt","gestureState","viewPagerResponder","shouldScrollViewPager","Math","abs","vx","onEnd","flingToPage","onGalleryStateChanged","onStartShouldSetResponderCapture","onStartShouldSetResponder","onResponderGrant","onResponderMove","activeViewPagerResponder","dx","moveX","previousMoveX","offset","getScrollOffsetFromCurrentPage","scrollByOffset","onMove","onResponderRelease","onResponderTerminate","onResponderTerminationRequest","onResponderDoubleTapConfirmed","onDoubleTapConfirmed","onResponderSingleTapConfirmed","onSingleTapConfirmed","onStart","disableSettle","imageResponder","currentImageTransformer","onLongPress","_longPressTimeout","setTimeout","clearTimeout","_isMounted","numberActiveTouches","viewTransformer","space","getAvailableTranslateSpace","left","right","page","ref","get","getViewTransformerInstance","_galleryViewPager","onEndReached","onEndReachedThreshold","images","length","state","resetHistoryImageTransform","pageData","pageId","onViewTransformed","onPinchTransforming","onPinchStartReached","onPinchEndReached","onTransformGestureReleased","onSwipeUpReleased","onSwipeDownReleased","onDoubleTapStartReached","onDoubleTapEndReached","resizeMode","enableResistance","enableScale","maxScale","enableTranslate","resistantStrHorizontal","resistantStrVertical","maxOverScrollDistance","errorComponent","imageComponent","transform","set","transformer","forceUpdateTransform","scale","translateX","translateY","index","velocityX","immediate","scrollToPage","flatListProps","component","refPage","scrollViewStyle","sensitiveScroll","onPageScroll","removeClippedSubviews","initialNumToRender","propTypes","View","arrayOf","object","isRequired","initialPage","number","string","ViewPropTypes","style","pageMargin","bool","func","oneOfType","defaultProps","flex","backgroundColor"],"mappings":"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","sourcesContent":["import React, { PureComponent } from \"react\";\nimport { View, ViewPropTypes } from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport { createResponder } from \"react-native-easy-guesture-responder\";\nimport ImageTransformer from \"react-native-image-transformer\";\nimport PageList from \"react-native-page-list\";\n\nconst DEFAULT_FLAT_LIST_PROPS = {\n    windowSize: 3\n};\n\nexport default class GallerySwiper extends PureComponent {\n    static propTypes = {\n        ...View.propTypes,\n        images: PropTypes.arrayOf(PropTypes.object).isRequired,\n        initialPage: PropTypes.number,\n        resizeMode: PropTypes.string,\n        initialNumToRender: PropTypes.number,\n        scrollViewStyle: ViewPropTypes\n            ? ViewPropTypes.style\n            : View.propTypes.style,\n        pageMargin: PropTypes.number,\n        sensitiveScroll: PropTypes.bool,\n        onPageSelected: PropTypes.func,\n        onPageScrollStateChanged: PropTypes.func,\n        onPageScroll: PropTypes.func,\n        onPinchTransforming: PropTypes.func,\n        onPinchStartReached: PropTypes.func,\n        onPinchEndReached: PropTypes.func,\n        onDoubleTapStartReached: PropTypes.func,\n        onDoubleTapEndReached: PropTypes.func,\n        onDoubleTapConfirmed: PropTypes.func,\n        onSingleTapConfirmed: PropTypes.func,\n        onGalleryStateChanged: PropTypes.func,\n        onLongPress: PropTypes.func,\n        onViewTransformed: PropTypes.func,\n        onTransformGestureReleased: PropTypes.func,\n        onSwipeUpReleased: PropTypes.func,\n        onSwipeDownReleased: PropTypes.func,\n        onEndReached: PropTypes.func,\n        onEndReachedThreshold: PropTypes.number,\n        enableScale: PropTypes.bool,\n        maxScale: PropTypes.number,\n        enableTranslate: PropTypes.bool,\n        enableResistance: PropTypes.bool,\n        resistantStrHorizontal: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.number,\n            PropTypes.string\n        ]),\n        resistantStrVertical: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.number,\n            PropTypes.string\n        ]),\n        maxOverScrollDistance: PropTypes.number,\n        removeClippedSubviews: PropTypes.bool,\n        imageComponent: PropTypes.func,\n        errorComponent: PropTypes.func,\n        flatListProps: PropTypes.object,\n        refPage: PropTypes.func\n    };\n\n    static defaultProps = {\n        style: {\n            flex: 1,\n            backgroundColor: \"#000\"\n        },\n        initialNumToRender: 7,\n        imageComponent: undefined,\n        scrollViewStyle: {},\n        flatListProps: DEFAULT_FLAT_LIST_PROPS,\n        onEndReachedThreshold: 0.5\n    };\n\n    imageRefs = new Map();\n    activeResponder = undefined;\n    firstMove = true;\n    currentPage = 0;\n    pageCount = 0;\n    gestureResponder = undefined;\n\n    constructor (props) {\n        super(props);\n\n        this.renderPage = this.renderPage.bind(this);\n        this.onPageSelected = this.onPageSelected.bind(this);\n        this.onPageScrollStateChanged = this.onPageScrollStateChanged.bind(this);\n        this.getViewPagerInstance = this.getViewPagerInstance.bind(this);\n        this.getCurrentImageTransformer = this.getCurrentImageTransformer.bind(this);\n        this.getImageTransformer = this.getImageTransformer.bind(this);\n        this.getViewPagerInstance = this.getViewPagerInstance.bind(this);\n        this.activeImageResponder = this.activeImageResponder.bind(this);\n\n\n        let onResponderReleaseOrTerminate = (evt, gestureState) => {\n            if (this.activeResponder) {\n                if (this.activeResponder === this.viewPagerResponder &&\n                    !this.shouldScrollViewPager(evt, gestureState) &&\n                    Math.abs(gestureState.vx) > 0.5) {\n                    this.activeResponder.onEnd(evt, gestureState, true);\n                    this.getViewPagerInstance().flingToPage(\n                        this.currentPage,\n                        gestureState.vx\n                    );\n                } else {\n                    this.activeResponder.onEnd(evt, gestureState);\n                }\n                this.activeResponder = null;\n            }\n            this.firstMove = true;\n            this.props.onGalleryStateChanged &&\n                this.props.onGalleryStateChanged(true);\n        };\n\n        this.gestureResponder = createResponder({\n            onStartShouldSetResponderCapture: (evt, gestureState) => true,\n            onStartShouldSetResponder: (evt, gestureState) => true,\n            onResponderGrant: this.activeImageResponder,\n            onResponderMove: (evt, gestureState) => {\n                if (this.firstMove) {\n                    this.firstMove = false;\n                    if (this.shouldScrollViewPager(evt, gestureState)) {\n                        this.activeViewPagerResponder(evt, gestureState);\n                    }\n                    this.props.onGalleryStateChanged &&\n                        this.props.onGalleryStateChanged(false);\n                }\n                if (this.activeResponder === this.viewPagerResponder) {\n                    const dx = gestureState.moveX - gestureState.previousMoveX;\n                    const offset = this.getViewPagerInstance()\n                        .getScrollOffsetFromCurrentPage();\n                    if (\n                        dx > 0 && offset > 0 &&\n                        !this.shouldScrollViewPager(evt, gestureState)\n                    ) {\n                        if (dx > offset) { // active image responder\n                            this.getViewPagerInstance().scrollByOffset(offset);\n                            gestureState.moveX -= offset;\n                            this.activeImageResponder(evt, gestureState);\n                        }\n                    } else if (\n                        dx < 0 && offset < 0 &&\n                        !this.shouldScrollViewPager(evt, gestureState)\n                    ) {\n                        if (dx < offset) { // active image responder\n                            this.getViewPagerInstance().scrollByOffset(offset);\n                            gestureState.moveX -= offset;\n                            this.activeImageResponder(evt, gestureState);\n                        }\n                    }\n                }\n                this.activeResponder.onMove(evt, gestureState);\n            },\n            onResponderRelease: onResponderReleaseOrTerminate,\n            onResponderTerminate: onResponderReleaseOrTerminate,\n            // Do not allow parent view to intercept gesture\n            onResponderTerminationRequest: (evt, gestureState) => false,\n            onResponderDoubleTapConfirmed: (evt, gestureState) => {\n                this.props.onDoubleTapConfirmed &&\n                    this.props.onDoubleTapConfirmed(this.currentPage);\n            },\n            onResponderSingleTapConfirmed: (evt, gestureState) => {\n                this.props.onSingleTapConfirmed &&\n                    this.props.onSingleTapConfirmed(this.currentPage);\n            }\n        });\n\n        this.viewPagerResponder = {\n            onStart: (evt, gestureState) => {\n                this.getViewPagerInstance()\n                    .onResponderGrant(evt, gestureState);\n            },\n            onMove: (evt, gestureState) => {\n                this.getViewPagerInstance()\n                    .onResponderMove(evt, gestureState);\n            },\n            onEnd: (evt, gestureState, disableSettle) => {\n                this.getViewPagerInstance()\n                    .onResponderRelease(evt, gestureState, disableSettle);\n            }\n        };\n\n        this.imageResponder = {\n            onStart: (evt, gestureState) => {\n                const currentImageTransformer = this.getCurrentImageTransformer();\n                currentImageTransformer &&\n                    currentImageTransformer.onResponderGrant(evt, gestureState);\n                if (this.props.onLongPress) {\n                    this._longPressTimeout = setTimeout(() => {\n                        this.props.onLongPress(gestureState, this.currentPage);\n                    }, 600);\n                }\n            },\n            onMove: (evt, gestureState) => {\n                const currentImageTransformer = this.getCurrentImageTransformer();\n                currentImageTransformer &&\n                    currentImageTransformer.onResponderMove(evt, gestureState);\n                clearTimeout(this._longPressTimeout);\n            },\n            onEnd: (evt, gestureState) => {\n                const currentImageTransformer = this.getCurrentImageTransformer();\n                currentImageTransformer &&\n                    currentImageTransformer.onResponderRelease(evt, gestureState);\n                clearTimeout(this._longPressTimeout);\n            }\n        };\n    }\n\n    componentDidMount () {\n        this._isMounted = true;\n    }\n\n    componentWillUnmount () {\n        this._isMounted = false;\n    }\n\n    shouldScrollViewPager (evt, gestureState) {\n        if (gestureState.numberActiveTouches > 1) {\n            return false;\n        }\n        const viewTransformer = this.getCurrentImageTransformer();\n        if (!viewTransformer) {\n            return false;\n        }\n\n        const space = viewTransformer.getAvailableTranslateSpace();\n        const dx = gestureState.moveX - gestureState.previousMoveX;\n\n        if (dx > 0 && space.left <= 0 && this.currentPage > 0) {\n            return true;\n        }\n        if (dx < 0 && space.right <= 0 && this.currentPage < this.pageCount - 1) {\n            return true;\n        }\n        return false;\n    }\n\n    activeImageResponder (evt, gestureState) {\n        if (this.activeResponder !== this.imageResponder) {\n            if (this.activeResponder === this.viewPagerResponder) {\n                // pass true to disable ViewPager settle\n                this.viewPagerResponder.onEnd(evt, gestureState, true);\n            }\n            this.activeResponder = this.imageResponder;\n            this.imageResponder.onStart(evt, gestureState);\n        }\n    }\n\n    activeViewPagerResponder (evt, gestureState) {\n        if (this.activeResponder !== this.viewPagerResponder) {\n            if (this.activeResponder === this.imageResponder) {\n                this.imageResponder.onEnd(evt, gestureState);\n            }\n            this.activeResponder = this.viewPagerResponder;\n            this.viewPagerResponder.onStart(evt, gestureState);\n        }\n    }\n\n    getImageTransformer (page) {\n        if (page >= 0 && page < this.pageCount) {\n            let ref = this.imageRefs.get(page);\n            if (ref) {\n                return ref.getViewTransformerInstance();\n            }\n        }\n    }\n\n    getCurrentImageTransformer () {\n        return this.getImageTransformer(this.currentPage);\n    }\n\n    getViewPagerInstance () {\n        return this._galleryViewPager;\n    }\n\n    onPageSelected (page) {\n        this.currentPage = page;\n        this.props.onPageSelected && this.props.onPageSelected(page);\n\n        if (\n            this.props.onEndReached &&\n            page + 1 > this.props.onEndReachedThreshold * this.props.images.length\n        ) {\n            this.props.onEndReached && this.props.onEndReached();\n        }\n    }\n\n    onPageScrollStateChanged (state) {\n        if (state === \"idle\") {\n            this.resetHistoryImageTransform();\n        }\n        this.props.onPageScrollStateChanged &&\n            this.props.onPageScrollStateChanged(state);\n    }\n\n    renderPage (pageData, pageId) {\n        const {\n            onViewTransformed, onPinchTransforming, onPinchStartReached, onPinchEndReached,\n            onTransformGestureReleased, onSwipeUpReleased, onSwipeDownReleased, onDoubleTapStartReached,\n            onDoubleTapEndReached, resizeMode, enableResistance, enableScale, maxScale, enableTranslate,\n            resistantStrHorizontal, resistantStrVertical, maxOverScrollDistance, errorComponent,\n            imageComponent\n        } = this.props;\n        return (\n            <ImageTransformer\n                onViewTransformed={(transform) => {\n                    onViewTransformed &&\n                        onViewTransformed(transform, pageId);\n                }}\n                onPinchTransforming={(transform) => {\n                    onPinchTransforming &&\n                        onPinchTransforming(transform, pageId);\n                }}\n                onPinchStartReached={(transform) => {\n                    onPinchStartReached &&\n                        onPinchStartReached(transform, pageId);\n                }}\n                onPinchEndReached={(transform) => {\n                    onPinchEndReached &&\n                        onPinchEndReached(transform, pageId);\n                }}\n                onTransformGestureReleased={(transform) => {\n                    // need the \"return\" here because the\n                    // return value is checked in ViewTransformer\n                    return onTransformGestureReleased &&\n                        onTransformGestureReleased(transform, pageId);\n                }}\n                onSwipeUpReleased={(transform) => {\n                    onSwipeUpReleased &&\n                        onSwipeUpReleased(transform, pageId);\n                }}\n                onSwipeDownReleased={(transform) => {\n                    onSwipeDownReleased &&\n                        onSwipeDownReleased(transform, pageId);\n                }}\n                onDoubleTapStartReached={(transform) => {\n                    onDoubleTapStartReached &&\n                        onDoubleTapStartReached(transform, pageId);\n                }}\n                onDoubleTapEndReached={(transform) => {\n                    onDoubleTapEndReached &&\n                        onDoubleTapEndReached(transform, pageId);\n                }}\n                ref={(ref) => { this.imageRefs.set(pageId, ref); }}\n                key={\"innerImage#\" + pageId}\n                errorComponent={errorComponent}\n                imageComponent={imageComponent}\n                image={pageData}\n                index={pageId}\n                enableScale={enableScale}\n                maxScale={maxScale}\n                enableTranslate={enableTranslate}\n                enableResistance={enableResistance}\n                resistantStrHorizontal={resistantStrHorizontal}\n                resistantStrVertical={resistantStrVertical}\n                maxOverScrollDistance={maxOverScrollDistance}\n                resizeMode={resizeMode}\n            />\n        );\n    }\n\n    resetHistoryImageTransform () {\n        let transformer = this.getImageTransformer(\n            this.currentPage + 1\n        );\n        if (transformer) {\n            transformer.forceUpdateTransform({\n                scale: 1,\n                translateX: 0,\n                translateY: 0\n            });\n        }\n\n        transformer = this.getImageTransformer(\n            this.currentPage - 1\n        );\n        if (transformer) {\n            transformer.forceUpdateTransform({\n                scale: 1,\n                translateX: 0,\n                translateY: 0\n            });\n        }\n    }\n\n    flingToPage ({ index, velocityX }) {\n        this._galleryViewPager &&\n            this._galleryViewPager.flingToPage(index, velocityX);\n    }\n\n    scrollToPage ({ index, immediate }) {\n        this._galleryViewPager &&\n            this._galleryViewPager.scrollToPage(index, immediate);\n    }\n\n    render () {\n        let gestureResponder = this.gestureResponder;\n\n        let images = this.props.images;\n        if (!images) {\n            images = [];\n        }\n        this.pageCount = images.length;\n\n        if (this.pageCount <= 0) {\n            gestureResponder = {};\n        }\n\n        const flatListProps = {\n            ...DEFAULT_FLAT_LIST_PROPS,\n            ...this.props.flatListProps\n        };\n\n        return (\n            <PageList\n                {...this.props}\n                flatListProps={flatListProps}\n                ref={(component) => {\n                    this._galleryViewPager = component;\n                    this.props.refPage &&\n                        this.props.refPage(component);\n                }}\n                scrollViewStyle={this.props.scrollViewStyle}\n                scrollEnabled={false}\n                renderPage={this.renderPage}\n                pageDataArray={images}\n                {...gestureResponder}\n                sensitiveScroll={this.props.sensitiveScroll}\n                onPageSelected={this.onPageSelected}\n                onPageScrollStateChanged={this.onPageScrollStateChanged}\n                onPageScroll={this.props.onPageScroll}\n                removeClippedSubviews={this.props.removeClippedSubviews}\n                initialNumToRender={this.props.initialNumToRender}\n            />\n        );\n    }\n}\n"]},"metadata":{},"sourceType":"module"}