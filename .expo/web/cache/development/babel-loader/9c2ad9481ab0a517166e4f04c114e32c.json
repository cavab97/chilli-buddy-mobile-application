{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport { find, orderBy } from 'lodash';\nvar instance = null;\n\nvar Country = function () {\n  _createClass(Country, null, [{\n    key: \"getInstance\",\n    value: function getInstance() {\n      if (!instance) {\n        instance = new Country();\n      }\n\n      return instance;\n    }\n  }]);\n\n  function Country() {\n    _classCallCheck(this, Country);\n\n    this.countryCodes = [];\n    this.countriesData = null;\n  }\n\n  _createClass(Country, [{\n    key: \"setCustomCountriesData\",\n    value: function setCustomCountriesData(json) {\n      this.countriesData = json;\n    }\n  }, {\n    key: \"addCountryCode\",\n    value: function addCountryCode(iso2, dialCode, priority) {\n      if (!(dialCode in this.countryCodes)) {\n        this.countryCodes[dialCode] = [];\n      }\n\n      var index = priority || 0;\n      this.countryCodes[dialCode][index] = iso2;\n    }\n  }, {\n    key: \"getAll\",\n    value: function getAll() {\n      if (!this.countries) {\n        this.countries = orderBy(this.countriesData || require(\"./resources/countries.json\"), ['name'], ['asc']);\n      }\n\n      return this.countries;\n    }\n  }, {\n    key: \"getCountryCodes\",\n    value: function getCountryCodes() {\n      var _this = this;\n\n      if (!this.countryCodes.length) {\n        this.getAll().map(function (country) {\n          _this.addCountryCode(country.iso2, country.dialCode, country.priority);\n\n          if (country.areaCodes) {\n            country.areaCodes.map(function (areaCode) {\n              _this.addCountryCode(country.iso2, country.dialCode + areaCode);\n            });\n          }\n        });\n      }\n\n      return this.countryCodes;\n    }\n  }, {\n    key: \"getCountryDataByCode\",\n    value: function getCountryDataByCode(iso2) {\n      return find(this.getAll(), function (country) {\n        return country.iso2 === iso2;\n      });\n    }\n  }]);\n\n  return Country;\n}();\n\nexport default Country.getInstance();","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-phone-input/lib/country.js"],"names":["find","orderBy","instance","Country","countryCodes","countriesData","json","iso2","dialCode","priority","index","countries","require","length","getAll","map","country","addCountryCode","areaCodes","areaCode","getInstance"],"mappings":";;AAAA,SAASA,IAAT,EAAeC,OAAf,QAA8B,QAA9B;AAEA,IAAIC,QAAQ,GAAG,IAAf;;IAEMC,O;;;kCACiB;AACnB,UAAI,CAACD,QAAL,EAAe;AACbA,QAAAA,QAAQ,GAAG,IAAIC,OAAJ,EAAX;AACD;;AACD,aAAOD,QAAP;AACD;;;AAED,qBAAc;AAAA;;AACZ,SAAKE,YAAL,GAAoB,EAApB;AAEA,SAAKC,aAAL,GAAqB,IAArB;AACD;;;;2CAEsBC,I,EAAM;AAC3B,WAAKD,aAAL,GAAqBC,IAArB;AACD;;;mCAEcC,I,EAAMC,Q,EAAUC,Q,EAAU;AACvC,UAAI,EAAED,QAAQ,IAAI,KAAKJ,YAAnB,CAAJ,EAAsC;AACpC,aAAKA,YAAL,CAAkBI,QAAlB,IAA8B,EAA9B;AACD;;AAED,UAAME,KAAK,GAAGD,QAAQ,IAAI,CAA1B;AACA,WAAKL,YAAL,CAAkBI,QAAlB,EAA4BE,KAA5B,IAAqCH,IAArC;AACD;;;6BAEQ;AACP,UAAI,CAAC,KAAKI,SAAV,EAAqB;AACnB,aAAKA,SAAL,GAAiBV,OAAO,CACtB,KAAKI,aAAL,IAAsBO,OAAO,8BADP,EAEtB,CAAC,MAAD,CAFsB,EAGtB,CAAC,KAAD,CAHsB,CAAxB;AAKD;;AAED,aAAO,KAAKD,SAAZ;AACD;;;sCAEiB;AAAA;;AAChB,UAAI,CAAC,KAAKP,YAAL,CAAkBS,MAAvB,EAA+B;AAC7B,aAAKC,MAAL,GAAcC,GAAd,CAAkB,UAACC,OAAD,EAAa;AAC7B,UAAA,KAAI,CAACC,cAAL,CAAoBD,OAAO,CAACT,IAA5B,EAAkCS,OAAO,CAACR,QAA1C,EAAoDQ,OAAO,CAACP,QAA5D;;AACA,cAAIO,OAAO,CAACE,SAAZ,EAAuB;AACrBF,YAAAA,OAAO,CAACE,SAAR,CAAkBH,GAAlB,CAAsB,UAACI,QAAD,EAAc;AAClC,cAAA,KAAI,CAACF,cAAL,CAAoBD,OAAO,CAACT,IAA5B,EAAkCS,OAAO,CAACR,QAAR,GAAmBW,QAArD;AACD,aAFD;AAGD;AACF,SAPD;AAQD;;AACD,aAAO,KAAKf,YAAZ;AACD;;;yCAEoBG,I,EAAM;AACzB,aAAOP,IAAI,CAAC,KAAKc,MAAL,EAAD,EAAgB,UAAAE,OAAO;AAAA,eAAIA,OAAO,CAACT,IAAR,KAAiBA,IAArB;AAAA,OAAvB,CAAX;AACD;;;;;;AAGH,eAAeJ,OAAO,CAACiB,WAAR,EAAf","sourcesContent":["import { find, orderBy } from 'lodash';\n\nlet instance = null;\n\nclass Country {\n  static getInstance() {\n    if (!instance) {\n      instance = new Country();\n    }\n    return instance;\n  }\n\n  constructor() {\n    this.countryCodes = [];\n\n    this.countriesData = null;\n  }\n\n  setCustomCountriesData(json) {\n    this.countriesData = json;\n  }\n\n  addCountryCode(iso2, dialCode, priority) {\n    if (!(dialCode in this.countryCodes)) {\n      this.countryCodes[dialCode] = [];\n    }\n\n    const index = priority || 0;\n    this.countryCodes[dialCode][index] = iso2;\n  }\n\n  getAll() {\n    if (!this.countries) {\n      this.countries = orderBy(\n        this.countriesData || require('./resources/countries.json'),\n        ['name'],\n        ['asc'],\n      );\n    }\n\n    return this.countries;\n  }\n\n  getCountryCodes() {\n    if (!this.countryCodes.length) {\n      this.getAll().map((country) => {\n        this.addCountryCode(country.iso2, country.dialCode, country.priority);\n        if (country.areaCodes) {\n          country.areaCodes.map((areaCode) => {\n            this.addCountryCode(country.iso2, country.dialCode + areaCode);\n          });\n        }\n      });\n    }\n    return this.countryCodes;\n  }\n\n  getCountryDataByCode(iso2) {\n    return find(this.getAll(), country => country.iso2 === iso2);\n  }\n}\n\nexport default Country.getInstance();\n"]},"metadata":{},"sourceType":"module"}