{"ast":null,"code":"import { auth } from \"../../utils/helper\";\nimport { storeData, getData, removeData } from \"../../utils/common\";\nvar providers = auth.providers;\nexport { providers };\nexport function initialize(config) {\n  auth.initialize(config);\n}\nexport function login(provider, info) {\n  return new Promise(function (resolve, reject) {\n    auth.login(provider, info).then(function (user) {\n      resolve(user);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\nexport function logout() {\n  return new Promise(function (resolve, reject) {\n    auth.logout().then(function (_ref) {\n      var status = _ref.status;\n      resolve({\n        status: status\n      });\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\nexport function isAuthenticated(onIdTokenChanged) {\n  auth.isAuthenticated(onIdTokenChanged);\n}\nexport function resetPassword(email) {\n  return new Promise(function (resolve, reject) {\n    auth.resetPassword(email).then(function (_ref2) {\n      var status = _ref2.status;\n      resolve({\n        status: status\n      });\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\nexport function storeUserToLocal(user) {\n  return new Promise(function (resolve, reject) {\n    storeData({\n      key: \"user\",\n      value: user\n    }).then(function (_ref3) {\n      var status = _ref3.status;\n      resolve({\n        status: status\n      });\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\nexport function getUserFromLocal() {\n  return new Promise(function (resolve, reject) {\n    getData({\n      key: \"user\"\n    }).then(function (_ref4) {\n      var value = _ref4.value;\n      resolve(value);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}\nexport function removeUserFromLocal() {\n  return new Promise(function (resolve, reject) {\n    removeData({\n      key: \"user\"\n    }).then(function (_ref5) {\n      var status = _ref5.status;\n      resolve({\n        status: status\n      });\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/marslab-library-react-native/services/auth/index.js"],"names":["auth","storeData","getData","removeData","providers","initialize","config","login","provider","info","Promise","resolve","reject","then","user","catch","error","logout","status","isAuthenticated","onIdTokenChanged","resetPassword","email","storeUserToLocal","key","value","getUserFromLocal","removeUserFromLocal"],"mappings":"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","sourcesContent":["import { auth } from \"../../utils/helper\";\r\nimport { storeData, getData, removeData } from \"../../utils/common\";\r\n\r\nexport const { providers } = auth;\r\n\r\nexport function initialize(config) {\r\n  auth.initialize(config);\r\n}\r\n\r\nexport function login(provider, info) {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .login(provider, info)\r\n      .then(user => {\r\n        resolve(user);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport function logout() {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .logout()\r\n      .then(({ status }) => {\r\n        resolve({ status });\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport function isAuthenticated(onIdTokenChanged) {\r\n  auth.isAuthenticated(onIdTokenChanged);\r\n}\r\n\r\nexport function resetPassword(email) {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .resetPassword(email)\r\n      .then(({ status }) => {\r\n        resolve({ status });\r\n      })\r\n      .catch(error => {\r\n        \r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport function storeUserToLocal(user) {\r\n  return new Promise((resolve, reject) => {\r\n    storeData({ key: \"user\", value: user })\r\n      .then(({ status }) => {\r\n        resolve({ status });\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport function getUserFromLocal() {\r\n  return new Promise((resolve, reject) => {\r\n    getData({ key: \"user\" })\r\n      .then(({ value }) => {\r\n        resolve( value );\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\nexport function removeUserFromLocal() {\r\n  return new Promise((resolve, reject) => {\r\n    removeData({ key: \"user\" })\r\n      .then(({ status }) => {\r\n        resolve({ status });\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n"]},"metadata":{},"sourceType":"module"}