{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\src\\\\screens\\\\main\\\\Profile\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { Actions } from \"react-native-router-flux\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { connect } from \"react-redux\";\nimport { logout } from \"../../../marslab-library-react-native/redux/auth/actions\";\nimport { listenFromDatabase as notificationListener, removeListenerFromDatabase as removeNotificationListener } from \"../../../marslab-library-react-native/redux/notification/action\";\nimport { listenToOwnRewards as ownRewardsListener, removeListenerFromOwnRewards as removeOwnRewardsListener } from \"../../../redux/reward/action\";\nimport onLogOut from \"../../../marslab-library-react-native/routes/onLogOut\";\nimport { UserProfile } from \"../../../components/templates\";\nimport { notificationHandler } from \"../../../settings/notification\";\nimport RouteMap9 from \"../../../components/templates/route/RouteMap/RouteMap9\";\n\nvar Profile = function (_Component) {\n  _inherits(Profile, _Component);\n\n  var _super = _createSuper(Profile);\n\n  function Profile(props) {\n    var _this;\n\n    _classCallCheck(this, Profile);\n\n    _this = _super.call(this, props);\n\n    _this.onSignoutPress = function () {\n      console.log(\"logout\");\n      onLogOut().then(function () {\n        _this.props.logout();\n      });\n    };\n\n    _this.onSignoutPress = function () {\n      console.log(\"logout\");\n      onLogOut().then(function () {\n        _this.props.logout();\n      });\n    };\n\n    _this.state = {\n      isRefreshing: false,\n      page: 1\n    };\n    _this._onTabChange = _this._onTabChange.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Profile, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.props.notificationListener();\n      this.props.ownRewardsListener();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeNotificationListener();\n      this.props.removeOwnRewardsListener();\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.props.removeNotificationListener();\n      this.props.removeOwnRewardsListener();\n    }\n  }, {\n    key: \"onNotificationPress\",\n    value: function onNotificationPress(notification) {\n      notification = _objectSpread({\n        origin: \"selected\"\n      }, notification);\n      notificationHandler(notification);\n    }\n  }, {\n    key: \"onRewardPress\",\n    value: function onRewardPress(reward) {\n      var rewardId = reward.id;\n      Actions.RedeemPage({\n        rewardId: rewardId\n      });\n    }\n  }, {\n    key: \"onHelpPress\",\n    value: function onHelpPress() {}\n  }, {\n    key: \"onEditProfilePress\",\n    value: function onEditProfilePress() {\n      Actions.EditProfile();\n    }\n  }, {\n    key: \"onSettingsPress\",\n    value: function onSettingsPress() {\n      Actions.Settings();\n    }\n  }, {\n    key: \"handleRefresh\",\n    value: function handleRefresh() {}\n  }, {\n    key: \"_onTabChange\",\n    value: function _onTabChange(tabIndex) {\n      this.setState({\n        page: tabIndex\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          user = _this$props.user,\n          notifications = _this$props.notifications,\n          ownRewards = _this$props.ownRewards,\n          photo = _this$props.photo,\n          readLoadingNotification = _this$props.readLoadingNotification,\n          readLoadingReward = _this$props.readLoadingReward;\n      return React.createElement(UserProfile, {\n        user: user,\n        photo: photo,\n        onHelpPress: this.onHelpPress.bind(this),\n        onEditProfilePress: this.onEditProfilePress.bind(this),\n        onSettingsPress: this.onSettingsPress.bind(this),\n        isRefreshing: this.state.isRefreshing,\n        refreshHandler: this.handleRefresh.bind(this),\n        onTabChange: this._onTabChange,\n        page: this.state.page,\n        notificationDataSource: notifications,\n        onNotificationPress: this.onNotificationPress.bind(this),\n        readLoadingNotification: readLoadingNotification,\n        rewardDataSource: ownRewards,\n        onRewardPress: this.onRewardPress.bind(this),\n        onSignoutPress: this.onSignoutPress.bind(this),\n        readLoadingReward: readLoadingReward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }\n      });\n    }\n  }]);\n\n  return Profile;\n}(Component);\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var user = state.Auth.user;\n  var photo = state.User.user.photoURL;\n  var notifications = state.Notification.notifications;\n  var ownRewards = state.Reward.ownRewards;\n  var readLoadingNotification = state.Notification.readLoading;\n  var readLoadingReward = state.Reward.readOwnRewardsLoading;\n  return {\n    user: user,\n    notifications: notifications,\n    photo: photo,\n    ownRewards: ownRewards,\n    readLoadingNotification: readLoadingNotification,\n    readLoadingReward: readLoadingReward\n  };\n};\n\nexport default connect(mapStateToProps, {\n  logout: logout,\n  notificationListener: notificationListener,\n  removeNotificationListener: removeNotificationListener,\n  ownRewardsListener: ownRewardsListener,\n  removeOwnRewardsListener: removeOwnRewardsListener\n})(Profile);","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/screens/main/Profile/index.js"],"names":["React","Component","Actions","connect","logout","listenFromDatabase","notificationListener","removeListenerFromDatabase","removeNotificationListener","listenToOwnRewards","ownRewardsListener","removeListenerFromOwnRewards","removeOwnRewardsListener","onLogOut","UserProfile","notificationHandler","RouteMap9","Profile","props","onSignoutPress","console","log","then","state","isRefreshing","page","_onTabChange","bind","notification","origin","reward","rewardId","id","RedeemPage","EditProfile","Settings","tabIndex","setState","user","notifications","ownRewards","photo","readLoadingNotification","readLoadingReward","onHelpPress","onEditProfilePress","onSettingsPress","handleRefresh","onNotificationPress","onRewardPress","mapStateToProps","Auth","User","photoURL","Notification","Reward","readLoading","readOwnRewardsLoading"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Actions } from \"react-native-router-flux\";\r\nimport { View } from \"react-native\";\r\n\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../../../marslab-library-react-native/redux/auth/actions\";\r\nimport {\r\n    listenFromDatabase as notificationListener,\r\n    removeListenerFromDatabase as removeNotificationListener,\r\n} from \"../../../marslab-library-react-native/redux/notification/action\";\r\n\r\nimport {\r\n    listenToOwnRewards as ownRewardsListener,\r\n    removeListenerFromOwnRewards as removeOwnRewardsListener,\r\n} from \"../../../redux/reward/action\";\r\n\r\nimport onLogOut from \"../../../marslab-library-react-native/routes/onLogOut\";\r\n\r\nimport { UserProfile } from \"../../../components/templates\";\r\nimport { notificationHandler } from \"../../../settings/notification\";\r\nimport RouteMap9 from \"../../../components/templates/route/RouteMap/RouteMap9\";\r\n\r\nclass Profile extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            isRefreshing: false,\r\n            page: 1,\r\n        };\r\n\r\n        this._onTabChange = this._onTabChange.bind(this);\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.props.notificationListener();\r\n        this.props.ownRewardsListener();\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        this.props.removeNotificationListener();\r\n        this.props.removeOwnRewardsListener();\r\n    }\r\n\r\n    onSignoutPress = () => {\r\n        console.log(\"logout\");\r\n        onLogOut().then(() => {\r\n            this.props.logout();\r\n        });\r\n    };\r\n\r\n    componentWillUnmount() {\r\n        this.props.removeNotificationListener();\r\n        this.props.removeOwnRewardsListener();\r\n    }\r\n\r\n    onSignoutPress = () => {\r\n        console.log(\"logout\");\r\n        onLogOut().then(() => {\r\n            this.props.logout();\r\n        });\r\n    };\r\n\r\n    onNotificationPress(notification) {\r\n        notification = { origin: \"selected\", ...notification };\r\n        notificationHandler(notification);\r\n    }\r\n\r\n    onRewardPress(reward) {\r\n        const rewardId = reward.id;\r\n        Actions.RedeemPage({ rewardId });\r\n    }\r\n\r\n    onHelpPress() {\r\n        //Actions.Help();\r\n    }\r\n\r\n    onEditProfilePress() {\r\n        Actions.EditProfile();\r\n    }\r\n\r\n    onSettingsPress() {\r\n        Actions.Settings();\r\n    }\r\n\r\n    handleRefresh() {}\r\n\r\n    _onTabChange(tabIndex) {\r\n        this.setState({ page: tabIndex });\r\n    }\r\n\r\n    render() {\r\n        let {\r\n            user,\r\n            notifications,\r\n            ownRewards,\r\n            photo,\r\n            readLoadingNotification,\r\n            readLoadingReward,\r\n        } = this.props;\r\n\r\n        return (\r\n            <UserProfile\r\n                user={user}\r\n                photo={photo}\r\n                //onEventPress={this.onEventPress.bind(this)}\r\n                onHelpPress={this.onHelpPress.bind(this)}\r\n                onEditProfilePress={this.onEditProfilePress.bind(this)}\r\n                onSettingsPress={this.onSettingsPress.bind(this)}\r\n                isRefreshing={this.state.isRefreshing}\r\n                refreshHandler={this.handleRefresh.bind(this)}\r\n                onTabChange={this._onTabChange}\r\n                page={this.state.page}\r\n                notificationDataSource={notifications}\r\n                onNotificationPress={this.onNotificationPress.bind(this)}\r\n                readLoadingNotification={readLoadingNotification}\r\n                rewardDataSource={ownRewards}\r\n                onRewardPress={this.onRewardPress.bind(this)}\r\n                onSignoutPress={this.onSignoutPress.bind(this)}\r\n                readLoadingReward={readLoadingReward}\r\n            />\r\n        );\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    const user = state.Auth.user;\r\n\r\n    const photo = state.User.user.photoURL;\r\n    const notifications = state.Notification.notifications;\r\n    const ownRewards = state.Reward.ownRewards;\r\n\r\n    const readLoadingNotification = state.Notification.readLoading;\r\n    const readLoadingReward = state.Reward.readOwnRewardsLoading;\r\n\r\n    return {\r\n        user,\r\n        notifications,\r\n        photo,\r\n        ownRewards,\r\n        readLoadingNotification,\r\n        readLoadingReward,\r\n    };\r\n};\r\n\r\nexport default connect(mapStateToProps, {\r\n    logout,\r\n    notificationListener,\r\n    removeNotificationListener,\r\n    ownRewardsListener,\r\n    removeOwnRewardsListener,\r\n})(Profile);\r\n"]},"metadata":{},"sourceType":"module"}