{"ast":null,"code":"import Constants from \"expo-constants\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nexport function getSystemInfo() {\n  var OS = Platform.OS;\n  var appVersion = Constants.manifest.version;\n  var isDevice = Constants.isDevice;\n  return {\n    OS: OS,\n    appVersion: appVersion,\n    isDevice: isDevice\n  };\n}\nexport function checkAppUpdate(_ref) {\n  var _ref$android = _ref.android,\n      android = _ref$android === void 0 ? {\n    latestVersion: \"0.0.0\",\n    latestVersionDescription: null,\n    playstoreUrl: null\n  } : _ref$android,\n      _ref$ios = _ref.ios,\n      ios = _ref$ios === void 0 ? {\n    latestVersion: \"0.0.0\",\n    latestVersionDescription: null,\n    appstoreUrl: null\n  } : _ref$ios;\n  var currentVersion = Constants.manifest.version;\n  var currentVersionArray = currentVersion.split(\".\");\n  var lastestVersion = \"0.0.0\";\n\n  if (Platform.OS === \"ios\") {\n    lastestVersion = ios.latestVersion;\n  }\n\n  if (Platform.OS === \"android\") {\n    lastestVersion = android.latestVersion;\n  }\n\n  var lastestVersionArray = lastestVersion.split(\".\");\n  var updateNeeded = false;\n  var forceUpdate = false;\n\n  if (currentVersionArray[2] < lastestVersionArray[2]) {\n    updateNeeded = true;\n  }\n\n  if (currentVersionArray[0] < lastestVersionArray[0] || currentVersionArray[1] < lastestVersionArray[1]) {\n    updateNeeded = true;\n    forceUpdate = true;\n  }\n\n  return {\n    updateNeeded: updateNeeded,\n    forceUpdate: forceUpdate\n  };\n}","map":{"version":3,"sources":["C:/Users/limwe/Documents/application/gogogain-app/gogogain-user/src/marslab-library-react-native/utils/system/information/index.js"],"names":["Constants","getSystemInfo","OS","Platform","appVersion","manifest","version","isDevice","checkAppUpdate","android","latestVersion","latestVersionDescription","playstoreUrl","ios","appstoreUrl","currentVersion","currentVersionArray","split","lastestVersion","lastestVersionArray","updateNeeded","forceUpdate"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,gBAAtB;;AAGA,OAAO,SAASC,aAAT,GAAyB;AAC5B,MAAMC,EAAE,GAAGC,QAAQ,CAACD,EAApB;AACA,MAAME,UAAU,GAAGJ,SAAS,CAACK,QAAV,CAAmBC,OAAtC;AACA,MAAMC,QAAQ,GAAGP,SAAS,CAACO,QAA3B;AAEA,SAAO;AAAEL,IAAAA,EAAE,EAAFA,EAAF;AAAME,IAAAA,UAAU,EAAVA,UAAN;AAAkBG,IAAAA,QAAQ,EAARA;AAAlB,GAAP;AACH;AAED,OAAO,SAASC,cAAT,OAWJ;AAAA,0BAVCC,OAUD;AAAA,MAVCA,OAUD,6BAVW;AACNC,IAAAA,aAAa,EAAE,OADT;AAENC,IAAAA,wBAAwB,EAAE,IAFpB;AAGNC,IAAAA,YAAY,EAAE;AAHR,GAUX;AAAA,sBALCC,GAKD;AAAA,MALCA,GAKD,yBALO;AACFH,IAAAA,aAAa,EAAE,OADb;AAEFC,IAAAA,wBAAwB,EAAE,IAFxB;AAGFG,IAAAA,WAAW,EAAE;AAHX,GAKP;AACC,MAAMC,cAAc,GAAGf,SAAS,CAACK,QAAV,CAAmBC,OAA1C;AACA,MAAMU,mBAAmB,GAAGD,cAAc,CAACE,KAAf,CAAqB,GAArB,CAA5B;AACA,MAAIC,cAAc,GAAG,OAArB;;AAEA,MAAIf,QAAQ,CAACD,EAAT,KAAgB,KAApB,EAA2B;AACvBgB,IAAAA,cAAc,GAAGL,GAAG,CAACH,aAArB;AACH;;AAED,MAAIP,QAAQ,CAACD,EAAT,KAAgB,SAApB,EAA+B;AAC3BgB,IAAAA,cAAc,GAAGT,OAAO,CAACC,aAAzB;AACH;;AAED,MAAMS,mBAAmB,GAAGD,cAAc,CAACD,KAAf,CAAqB,GAArB,CAA5B;AAEA,MAAIG,YAAY,GAAG,KAAnB;AACA,MAAIC,WAAW,GAAG,KAAlB;;AAEA,MAAIL,mBAAmB,CAAC,CAAD,CAAnB,GAAyBG,mBAAmB,CAAC,CAAD,CAAhD,EAAqD;AACjDC,IAAAA,YAAY,GAAG,IAAf;AACH;;AAED,MACIJ,mBAAmB,CAAC,CAAD,CAAnB,GAAyBG,mBAAmB,CAAC,CAAD,CAA5C,IACAH,mBAAmB,CAAC,CAAD,CAAnB,GAAyBG,mBAAmB,CAAC,CAAD,CAFhD,EAGE;AACEC,IAAAA,YAAY,GAAG,IAAf;AACAC,IAAAA,WAAW,GAAG,IAAd;AACH;;AACD,SAAO;AAAED,IAAAA,YAAY,EAAZA,YAAF;AAAgBC,IAAAA,WAAW,EAAXA;AAAhB,GAAP;AACH","sourcesContent":["import Constants from \"expo-constants\";\r\nimport { Platform } from \"react-native\";\r\n\r\nexport function getSystemInfo() {\r\n    const OS = Platform.OS;\r\n    const appVersion = Constants.manifest.version;\r\n    const isDevice = Constants.isDevice;\r\n\r\n    return { OS, appVersion, isDevice }\r\n}\r\n\r\nexport function checkAppUpdate({\r\n    android = {\r\n        latestVersion: \"0.0.0\",\r\n        latestVersionDescription: null,\r\n        playstoreUrl: null\r\n    },\r\n    ios = {\r\n        latestVersion: \"0.0.0\",\r\n        latestVersionDescription: null,\r\n        appstoreUrl: null\r\n    }\r\n}) {\r\n    const currentVersion = Constants.manifest.version;\r\n    const currentVersionArray = currentVersion.split(\".\");\r\n    let lastestVersion = \"0.0.0\";\r\n\r\n    if (Platform.OS === \"ios\") {\r\n        lastestVersion = ios.latestVersion;\r\n    }\r\n\r\n    if (Platform.OS === \"android\") {\r\n        lastestVersion = android.latestVersion;\r\n    }\r\n\r\n    const lastestVersionArray = lastestVersion.split(\".\");\r\n\r\n    let updateNeeded = false;\r\n    let forceUpdate = false;\r\n\r\n    if (currentVersionArray[2] < lastestVersionArray[2]) {\r\n        updateNeeded = true;\r\n    }\r\n\r\n    if (\r\n        currentVersionArray[0] < lastestVersionArray[0] ||\r\n        currentVersionArray[1] < lastestVersionArray[1]\r\n    ) {\r\n        updateNeeded = true;\r\n        forceUpdate = true;\r\n    }\r\n    return { updateNeeded, forceUpdate };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}