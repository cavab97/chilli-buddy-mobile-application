{"ast":null,"code":"import setValueForStyles from \"../../vendor/react-dom/setValueForStyles\";\n\nvar getRect = function getRect(node) {\n  var height = node.offsetHeight;\n  var width = node.offsetWidth;\n  var left = node.offsetLeft;\n  var top = node.offsetTop;\n  node = node.offsetParent;\n\n  while (node && node.nodeType === 1) {\n    left += node.offsetLeft - node.scrollLeft;\n    top += node.offsetTop - node.scrollTop;\n    node = node.offsetParent;\n  }\n\n  return {\n    height: height,\n    left: left,\n    top: top,\n    width: width\n  };\n};\n\nvar _measureLayout = function _measureLayout(node, relativeToNativeNode, callback) {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n\n  if (node && relativeNode) {\n    setTimeout(function () {\n      var relativeRect = getRect(relativeNode);\n\n      var _getRect = getRect(node),\n          height = _getRect.height,\n          left = _getRect.left,\n          top = _getRect.top,\n          width = _getRect.width;\n\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\nvar UIManager = {\n  blur: function blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n  focus: function focus(node) {\n    try {\n      var name = node.nodeName;\n\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n\n      node.focus();\n    } catch (err) {}\n  },\n  measure: function measure(node, callback) {\n    _measureLayout(node, null, callback);\n  },\n  measureInWindow: function measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(function () {\n        var _getRect2 = getRect(node),\n            height = _getRect2.height,\n            left = _getRect2.left,\n            top = _getRect2.top,\n            width = _getRect2.width;\n\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n  measureLayout: function measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    _measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n  updateView: function updateView(node, props, component) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n\n      var value = props[prop];\n\n      switch (prop) {\n        case 'style':\n          {\n            setValueForStyles(node, value, component._reactInternalInstance);\n            break;\n          }\n\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n\n        case 'text':\n        case 'value':\n          node.value = value;\n          break;\n\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n  configureNextLayoutAnimation: function configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n  setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental() {}\n};\nexport default UIManager;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/node_modules/react-native-web/dist/exports/UIManager/index.js"],"names":["setValueForStyles","getRect","node","height","offsetHeight","width","offsetWidth","left","offsetLeft","top","offsetTop","offsetParent","nodeType","scrollLeft","scrollTop","_measureLayout","relativeToNativeNode","callback","relativeNode","parentNode","setTimeout","relativeRect","_getRect","x","y","focusableElements","A","INPUT","SELECT","TEXTAREA","UIManager","blur","err","focus","name","nodeName","getAttribute","setAttribute","measure","measureInWindow","_getRect2","measureLayout","onFail","onSuccess","updateView","props","component","prop","Object","prototype","hasOwnProperty","call","value","_reactInternalInstance","configureNextLayoutAnimation","config","onAnimationDidEnd","setLayoutAnimationEnabledExperimental"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport setValueForStyles from '../../vendor/react-dom/setValueForStyles';\n\nvar getRect = function getRect(node) {\n  var height = node.offsetHeight;\n  var width = node.offsetWidth;\n  var left = node.offsetLeft;\n  var top = node.offsetTop;\n  node = node.offsetParent;\n\n  while (node && node.nodeType === 1 /* Node.ELEMENT_NODE */) {\n    left += node.offsetLeft - node.scrollLeft;\n    top += node.offsetTop - node.scrollTop;\n    node = node.offsetParent;\n  }\n  return { height: height, left: left, top: top, width: width };\n};\n\nvar _measureLayout = function _measureLayout(node, relativeToNativeNode, callback) {\n  var relativeNode = relativeToNativeNode || node && node.parentNode;\n  if (node && relativeNode) {\n    setTimeout(function () {\n      var relativeRect = getRect(relativeNode);\n\n      var _getRect = getRect(node),\n          height = _getRect.height,\n          left = _getRect.left,\n          top = _getRect.top,\n          width = _getRect.width;\n\n      var x = left - relativeRect.left;\n      var y = top - relativeRect.top;\n      callback(x, y, width, height, left, top);\n    }, 0);\n  }\n};\n\nvar focusableElements = {\n  A: true,\n  INPUT: true,\n  SELECT: true,\n  TEXTAREA: true\n};\n\nvar UIManager = {\n  blur: function blur(node) {\n    try {\n      node.blur();\n    } catch (err) {}\n  },\n  focus: function focus(node) {\n    try {\n      var name = node.nodeName;\n      // A tabIndex of -1 allows element to be programmatically focused but\n      // prevents keyboard focus, so we don't want to set the value on elements\n      // that support keyboard focus by default.\n      if (node.getAttribute('tabIndex') == null && focusableElements[name] == null) {\n        node.setAttribute('tabIndex', '-1');\n      }\n      node.focus();\n    } catch (err) {}\n  },\n  measure: function measure(node, callback) {\n    _measureLayout(node, null, callback);\n  },\n  measureInWindow: function measureInWindow(node, callback) {\n    if (node) {\n      setTimeout(function () {\n        var _getRect2 = getRect(node),\n            height = _getRect2.height,\n            left = _getRect2.left,\n            top = _getRect2.top,\n            width = _getRect2.width;\n\n        callback(left, top, width, height);\n      }, 0);\n    }\n  },\n  measureLayout: function measureLayout(node, relativeToNativeNode, onFail, onSuccess) {\n    _measureLayout(node, relativeToNativeNode, onSuccess);\n  },\n  updateView: function updateView(node, props, component /* only needed to surpress React errors in development */) {\n    for (var prop in props) {\n      if (!Object.prototype.hasOwnProperty.call(props, prop)) {\n        continue;\n      }\n\n      var value = props[prop];\n      switch (prop) {\n        case 'style':\n          {\n            setValueForStyles(node, value, component._reactInternalInstance);\n            break;\n          }\n        case 'class':\n        case 'className':\n          {\n            node.setAttribute('class', value);\n            break;\n          }\n        case 'text':\n        case 'value':\n          // native platforms use `text` prop to replace text input value\n          node.value = value;\n          break;\n        default:\n          node.setAttribute(prop, value);\n      }\n    }\n  },\n  configureNextLayoutAnimation: function configureNextLayoutAnimation(config, onAnimationDidEnd) {\n    onAnimationDidEnd();\n  },\n\n\n  // mocks\n  setLayoutAnimationEnabledExperimental: function setLayoutAnimationEnabledExperimental() {}\n};\n\nexport default UIManager;"]},"metadata":{},"sourceType":"module"}