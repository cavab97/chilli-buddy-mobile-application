{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createReactDOMStyle from \"./createReactDOMStyle\";\nimport flattenArray from \"../../modules/flattenArray\";\nimport flattenStyle from \"./flattenStyle\";\nimport I18nManager from \"../I18nManager\";\nimport i18nStyle from \"./i18nStyle\";\nimport { prefixInlineStyles } from \"../../modules/prefixStyles\";\nimport StyleSheetManager from \"./StyleSheetManager\";\nvar emptyObject = {};\n\nvar ReactNativeStyleResolver = function () {\n  ReactNativeStyleResolver.prototype._init = function _init() {\n    this.cache = {\n      ltr: {},\n      rtl: {},\n      rtlNoSwap: {}\n    };\n    this.injectedCache = {\n      ltr: {},\n      rtl: {},\n      rtlNoSwap: {}\n    };\n    this.styleSheetManager = new StyleSheetManager();\n  };\n\n  function ReactNativeStyleResolver() {\n    _classCallCheck(this, ReactNativeStyleResolver);\n\n    this._init();\n  }\n\n  ReactNativeStyleResolver.prototype.getStyleSheet = function getStyleSheet() {\n    var sheet = this.styleSheetManager.getStyleSheet();\n\n    if (!canUseDOM) {\n      this._init();\n    }\n\n    return sheet;\n  };\n\n  ReactNativeStyleResolver.prototype._injectRegisteredStyle = function _injectRegisteredStyle(id) {\n    var _this = this;\n\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n    if (!this.injectedCache[dir][id]) {\n      var style = flattenStyle(id);\n      var domStyle = createReactDOMStyle(i18nStyle(style));\n      Object.keys(domStyle).forEach(function (styleProp) {\n        var value = domStyle[styleProp];\n\n        if (value != null) {\n          _this.styleSheetManager.injectDeclaration(styleProp, value);\n        }\n      });\n      this.injectedCache[dir][id] = true;\n    }\n  };\n\n  ReactNativeStyleResolver.prototype.resolve = function resolve(style) {\n    if (!style) {\n      return emptyObject;\n    }\n\n    if (typeof style === 'number') {\n      this._injectRegisteredStyle(style);\n\n      var _key = createCacheKey(style);\n\n      return this._resolveStyleIfNeeded(style, _key);\n    }\n\n    if (!Array.isArray(style)) {\n      return this._resolveStyleIfNeeded(style);\n    }\n\n    var flatArray = flattenArray(style);\n    var isArrayOfNumbers = true;\n    var cacheKey = '';\n\n    for (var i = 0; i < flatArray.length; i++) {\n      var id = flatArray[i];\n\n      if (typeof id !== 'number') {\n        isArrayOfNumbers = false;\n      } else {\n        if (isArrayOfNumbers) {\n          cacheKey += id + '-';\n        }\n\n        this._injectRegisteredStyle(id);\n      }\n    }\n\n    var key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n    return this._resolveStyleIfNeeded(flatArray, key);\n  };\n\n  ReactNativeStyleResolver.prototype.resolveWithNode = function resolveWithNode(rnStyleNext, node) {\n    var _this2 = this;\n\n    var _getDOMStyleInfo = getDOMStyleInfo(node),\n        rdomClassList = _getDOMStyleInfo.classList,\n        rdomStyle = _getDOMStyleInfo.style;\n\n    var _rdomClassList$reduce = rdomClassList.reduce(function (styleProps, className) {\n      var _styleSheetManager$ge = _this2.styleSheetManager.getDeclaration(className),\n          prop = _styleSheetManager$ge.prop,\n          value = _styleSheetManager$ge.value;\n\n      if (prop) {\n        styleProps.style[prop] = value;\n      } else {\n        styleProps.classList.push(className);\n      }\n\n      return styleProps;\n    }, {\n      classList: [],\n      style: {}\n    }),\n        rnClassList = _rdomClassList$reduce.classList,\n        rnStyle = _rdomClassList$reduce.style;\n\n    var _resolve = this.resolve([i18nStyle(rnStyle), rnStyleNext]),\n        rdomClassListNext = _resolve.classList,\n        rdomStyleNext = _resolve.style;\n\n    var className = classListToString(rdomClassListNext.concat(rnClassList));\n\n    var style = _extends({}, rdomStyle);\n\n    rdomClassListNext.forEach(function (className) {\n      var _styleSheetManager$ge2 = _this2.styleSheetManager.getDeclaration(className),\n          prop = _styleSheetManager$ge2.prop;\n\n      if (style[prop]) {\n        style[prop] = '';\n      }\n    });\n\n    _extends(style, rdomStyleNext);\n\n    return {\n      className: className,\n      style: style\n    };\n  };\n\n  ReactNativeStyleResolver.prototype._resolveStyle = function _resolveStyle(style) {\n    var _this3 = this;\n\n    var flatStyle = flattenStyle(style);\n    var domStyle = createReactDOMStyle(i18nStyle(flatStyle));\n    var props = Object.keys(domStyle).reduce(function (props, styleProp) {\n      var value = domStyle[styleProp];\n\n      if (value != null) {\n        var className = _this3.styleSheetManager.getClassName(styleProp, value);\n\n        if (className) {\n          props.classList.push(className);\n        } else {\n          if (styleProp === 'pointerEvents' || styleProp === 'placeholderTextColor' || styleProp === 'animationName') {\n            var _className = _this3.styleSheetManager.injectDeclaration(styleProp, value);\n\n            if (_className) {\n              props.classList.push(_className);\n            }\n          } else {\n            if (!props.style) {\n              props.style = {};\n            }\n\n            props.style[styleProp] = value;\n          }\n        }\n      }\n\n      return props;\n    }, {\n      classList: []\n    });\n    props.className = classListToString(props.classList);\n\n    if (props.style) {\n      props.style = prefixInlineStyles(props.style);\n    }\n\n    return props;\n  };\n\n  ReactNativeStyleResolver.prototype._resolveStyleIfNeeded = function _resolveStyleIfNeeded(style, key) {\n    if (key) {\n      var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n          isRTL = I18nManager.isRTL;\n      var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n\n      if (!this.cache[dir][key]) {\n        this.cache[dir][key] = this._resolveStyle(style);\n      }\n\n      return this.cache[dir][key];\n    }\n\n    return this._resolveStyle(style);\n  };\n\n  return ReactNativeStyleResolver;\n}();\n\nexport default ReactNativeStyleResolver;\n\nvar createCacheKey = function createCacheKey(id) {\n  var prefix = 'rn';\n  return prefix + '-' + id;\n};\n\nvar classListToString = function classListToString(list) {\n  return list.join(' ').trim();\n};\n\nvar hyphenPattern = /-([a-z])/g;\n\nvar toCamelCase = function toCamelCase(str) {\n  return str.replace(hyphenPattern, function (m) {\n    return m[1].toUpperCase();\n  });\n};\n\nvar getDOMStyleInfo = function getDOMStyleInfo(node) {\n  var nodeStyle = node.style;\n  var classList = Array.prototype.slice.call(node.classList);\n  var style = {};\n\n  for (var i = 0; i < nodeStyle.length; i += 1) {\n    var property = nodeStyle.item(i);\n\n    if (property) {\n      style[toCamelCase(property)] = nodeStyle.getPropertyValue(property);\n    }\n  }\n\n  return {\n    classList: classList,\n    style: style\n  };\n};","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-web/dist/exports/StyleSheet/ReactNativeStyleResolver.js"],"names":["_classCallCheck","instance","Constructor","TypeError","canUseDOM","createReactDOMStyle","flattenArray","flattenStyle","I18nManager","i18nStyle","prefixInlineStyles","StyleSheetManager","emptyObject","ReactNativeStyleResolver","prototype","_init","cache","ltr","rtl","rtlNoSwap","injectedCache","styleSheetManager","getStyleSheet","sheet","_injectRegisteredStyle","id","_this","doLeftAndRightSwapInRTL","isRTL","dir","style","domStyle","Object","keys","forEach","styleProp","value","injectDeclaration","resolve","_key","createCacheKey","_resolveStyleIfNeeded","Array","isArray","flatArray","isArrayOfNumbers","cacheKey","i","length","key","resolveWithNode","rnStyleNext","node","_this2","_getDOMStyleInfo","getDOMStyleInfo","rdomClassList","classList","rdomStyle","_rdomClassList$reduce","reduce","styleProps","className","_styleSheetManager$ge","getDeclaration","prop","push","rnClassList","rnStyle","_resolve","rdomClassListNext","rdomStyleNext","classListToString","concat","_styleSheetManager$ge2","_resolveStyle","_this3","flatStyle","props","getClassName","_className","prefix","list","join","trim","hyphenPattern","toCamelCase","str","replace","m","toUpperCase","nodeStyle","slice","call","property","item","getPropertyValue"],"mappings":"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","sourcesContent":["function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * Copyright (c) 2016-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\n/**\n * WARNING: changes to this file in particular can cause significant changes to\n * the results of render performance benchmarks.\n */\n\nimport { canUseDOM } from 'fbjs/lib/ExecutionEnvironment';\nimport createReactDOMStyle from './createReactDOMStyle';\nimport flattenArray from '../../modules/flattenArray';\nimport flattenStyle from './flattenStyle';\nimport I18nManager from '../I18nManager';\nimport i18nStyle from './i18nStyle';\nimport { prefixInlineStyles } from '../../modules/prefixStyles';\nimport StyleSheetManager from './StyleSheetManager';\n\nvar emptyObject = {};\n\nvar ReactNativeStyleResolver = function () {\n  ReactNativeStyleResolver.prototype._init = function _init() {\n    this.cache = { ltr: {}, rtl: {}, rtlNoSwap: {} };\n    this.injectedCache = { ltr: {}, rtl: {}, rtlNoSwap: {} };\n    this.styleSheetManager = new StyleSheetManager();\n  };\n\n  function ReactNativeStyleResolver() {\n    _classCallCheck(this, ReactNativeStyleResolver);\n\n    this._init();\n  }\n\n  ReactNativeStyleResolver.prototype.getStyleSheet = function getStyleSheet() {\n    // reset state on the server so critical css is always the result\n    var sheet = this.styleSheetManager.getStyleSheet();\n    if (!canUseDOM) {\n      this._init();\n    }\n    return sheet;\n  };\n\n  ReactNativeStyleResolver.prototype._injectRegisteredStyle = function _injectRegisteredStyle(id) {\n    var _this = this;\n\n    var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n        isRTL = I18nManager.isRTL;\n\n    var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n    if (!this.injectedCache[dir][id]) {\n      var style = flattenStyle(id);\n      var domStyle = createReactDOMStyle(i18nStyle(style));\n      Object.keys(domStyle).forEach(function (styleProp) {\n        var value = domStyle[styleProp];\n        if (value != null) {\n          _this.styleSheetManager.injectDeclaration(styleProp, value);\n        }\n      });\n      this.injectedCache[dir][id] = true;\n    }\n  };\n\n  /**\n   * Resolves a React Native style object to DOM attributes\n   */\n\n\n  ReactNativeStyleResolver.prototype.resolve = function resolve(style) {\n    if (!style) {\n      return emptyObject;\n    }\n\n    // fast and cachable\n    if (typeof style === 'number') {\n      this._injectRegisteredStyle(style);\n      var _key = createCacheKey(style);\n      return this._resolveStyleIfNeeded(style, _key);\n    }\n\n    // resolve a plain RN style object\n    if (!Array.isArray(style)) {\n      return this._resolveStyleIfNeeded(style);\n    }\n\n    // flatten the style array\n    // cache resolved props when all styles are registered\n    // otherwise fallback to resolving\n    var flatArray = flattenArray(style);\n    var isArrayOfNumbers = true;\n    var cacheKey = '';\n    for (var i = 0; i < flatArray.length; i++) {\n      var id = flatArray[i];\n      if (typeof id !== 'number') {\n        isArrayOfNumbers = false;\n      } else {\n        if (isArrayOfNumbers) {\n          cacheKey += id + '-';\n        }\n        this._injectRegisteredStyle(id);\n      }\n    }\n    var key = isArrayOfNumbers ? createCacheKey(cacheKey) : null;\n    return this._resolveStyleIfNeeded(flatArray, key);\n  };\n\n  /**\n   * Resolves a React Native style object to DOM attributes, accounting for\n   * the existing styles applied to the DOM node.\n   *\n   * To determine the next style, some of the existing DOM state must be\n   * converted back into React Native styles.\n   */\n\n\n  ReactNativeStyleResolver.prototype.resolveWithNode = function resolveWithNode(rnStyleNext, node) {\n    var _this2 = this;\n\n    var _getDOMStyleInfo = getDOMStyleInfo(node),\n        rdomClassList = _getDOMStyleInfo.classList,\n        rdomStyle = _getDOMStyleInfo.style;\n    // Convert the DOM classList back into a React Native form\n    // Preserves unrecognized class names.\n\n\n    var _rdomClassList$reduce = rdomClassList.reduce(function (styleProps, className) {\n      var _styleSheetManager$ge = _this2.styleSheetManager.getDeclaration(className),\n          prop = _styleSheetManager$ge.prop,\n          value = _styleSheetManager$ge.value;\n\n      if (prop) {\n        styleProps.style[prop] = value;\n      } else {\n        styleProps.classList.push(className);\n      }\n      return styleProps;\n    }, { classList: [], style: {} }),\n        rnClassList = _rdomClassList$reduce.classList,\n        rnStyle = _rdomClassList$reduce.style;\n\n    // Create next DOM style props from current and next RN styles\n\n\n    var _resolve = this.resolve([i18nStyle(rnStyle), rnStyleNext]),\n        rdomClassListNext = _resolve.classList,\n        rdomStyleNext = _resolve.style;\n\n    // Final className\n    // Add the current class names not managed by React Native\n\n\n    var className = classListToString(rdomClassListNext.concat(rnClassList));\n\n    // Final style\n    // Next class names take priority over current inline styles\n    var style = Object.assign({}, rdomStyle);\n    rdomClassListNext.forEach(function (className) {\n      var _styleSheetManager$ge2 = _this2.styleSheetManager.getDeclaration(className),\n          prop = _styleSheetManager$ge2.prop;\n\n      if (style[prop]) {\n        style[prop] = '';\n      }\n    });\n    // Next inline styles take priority over current inline styles\n    Object.assign(style, rdomStyleNext);\n\n    return { className: className, style: style };\n  };\n\n  /**\n   * Resolves a React Native style object\n   */\n\n\n  ReactNativeStyleResolver.prototype._resolveStyle = function _resolveStyle(style) {\n    var _this3 = this;\n\n    var flatStyle = flattenStyle(style);\n    var domStyle = createReactDOMStyle(i18nStyle(flatStyle));\n\n    var props = Object.keys(domStyle).reduce(function (props, styleProp) {\n      var value = domStyle[styleProp];\n      if (value != null) {\n        var className = _this3.styleSheetManager.getClassName(styleProp, value);\n        if (className) {\n          props.classList.push(className);\n        } else {\n          // Certain properties and values are not transformed by 'createReactDOMStyle' as they\n          // require more complex transforms into multiple CSS rules. Here we assume that StyleManager\n          // can bind these styles to a className, and prevent them becoming invalid inline-styles.\n          if (styleProp === 'pointerEvents' || styleProp === 'placeholderTextColor' || styleProp === 'animationName') {\n            var _className = _this3.styleSheetManager.injectDeclaration(styleProp, value);\n            if (_className) {\n              props.classList.push(_className);\n            }\n          } else {\n            if (!props.style) {\n              props.style = {};\n            }\n            // 4x slower render\n            props.style[styleProp] = value;\n          }\n        }\n      }\n      return props;\n    }, { classList: [] });\n\n    props.className = classListToString(props.classList);\n    if (props.style) {\n      props.style = prefixInlineStyles(props.style);\n    }\n    return props;\n  };\n\n  /**\n   * Caching layer over 'resolveStyle'\n   */\n\n\n  ReactNativeStyleResolver.prototype._resolveStyleIfNeeded = function _resolveStyleIfNeeded(style, key) {\n    if (key) {\n      var doLeftAndRightSwapInRTL = I18nManager.doLeftAndRightSwapInRTL,\n          isRTL = I18nManager.isRTL;\n\n      var dir = isRTL ? doLeftAndRightSwapInRTL ? 'rtl' : 'rtlNoSwap' : 'ltr';\n      if (!this.cache[dir][key]) {\n        // slow: convert style object to props and cache\n        this.cache[dir][key] = this._resolveStyle(style);\n      }\n      return this.cache[dir][key];\n    }\n    return this._resolveStyle(style);\n  };\n\n  return ReactNativeStyleResolver;\n}();\n\n/**\n * Misc helpers\n */\n\n\nexport default ReactNativeStyleResolver;\nvar createCacheKey = function createCacheKey(id) {\n  var prefix = 'rn';\n  return prefix + '-' + id;\n};\n\nvar classListToString = function classListToString(list) {\n  return list.join(' ').trim();\n};\n\n/**\n * Copies classList and style data from a DOM node\n */\nvar hyphenPattern = /-([a-z])/g;\nvar toCamelCase = function toCamelCase(str) {\n  return str.replace(hyphenPattern, function (m) {\n    return m[1].toUpperCase();\n  });\n};\n\nvar getDOMStyleInfo = function getDOMStyleInfo(node) {\n  var nodeStyle = node.style;\n  var classList = Array.prototype.slice.call(node.classList);\n  var style = {};\n  // DOM style is a CSSStyleDeclaration\n  // https://developer.mozilla.org/en-US/docs/Web/API/CSSStyleDeclaration\n  for (var i = 0; i < nodeStyle.length; i += 1) {\n    var property = nodeStyle.item(i);\n    if (property) {\n      // DOM style uses hyphenated prop names and may include vendor prefixes\n      // Transform back into React DOM style.\n      style[toCamelCase(property)] = nodeStyle.getPropertyValue(property);\n    }\n  }\n  return { classList: classList, style: style };\n};"]},"metadata":{},"sourceType":"module"}