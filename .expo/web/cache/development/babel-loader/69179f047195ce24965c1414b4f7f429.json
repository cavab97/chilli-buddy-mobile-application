{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Gogogain\\\\Gogogain - User\\\\src\\\\components\\\\molecules\\\\Tab.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function () { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { CustomIcon, Text, View, TouchableOpacity } from \"../atoms\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\n\nvar Tab = function (_PureComponent) {\n  _inherits(Tab, _PureComponent);\n\n  var _super = _createSuper(Tab);\n\n  function Tab() {\n    var _this;\n\n    _classCallCheck(this, Tab);\n\n    _this = _super.call(this);\n    _this._handleTabPress = _this._handleTabPress.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Tab, [{\n    key: \"_handleTabPress\",\n    value: function _handleTabPress() {\n      this.props.onTabPress(this.props.tabIndex);\n    }\n  }, {\n    key: \"_getColor\",\n    value: function _getColor() {\n      if (this.props.selected === this.props.tabIndex) {\n        return this.props.activeColor;\n      }\n\n      return this.props.unActiveColor;\n    }\n  }, {\n    key: \"getBorder\",\n    value: function getBorder() {\n      if (this.props.highlight) {\n        return {\n          borderBottomColor: this.props.selected === this.props.tabIndex ? this.props.activeColor : \"#fff\",\n          borderBottomWidth: 0\n        };\n      }\n    }\n  }, {\n    key: \"getBackgroundColor\",\n    value: function getBackgroundColor() {\n      if (this.props.selected === this.props.tabIndex) {\n        return \"#fff\";\n      } else {\n        return \"#dce3ea\";\n      }\n    }\n  }, {\n    key: \"getBottomPositionStyles\",\n    value: function getBottomPositionStyles() {\n      if (this.props.positionBottom) {\n        return {\n          backgroundColor: this.getBackgroundColor(),\n          width: \"100%\",\n          paddingRight: 10,\n          paddingLeft: 10\n        };\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return React.createElement(View, {\n        style: [this.getBorder(), this.props.style, styles.container],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }, React.createElement(TouchableOpacity, {\n        onPress: this._handleTabPress,\n        activeOpacity: this.props.pressOpacity,\n        style: [this.props.style, styles.container, this.getBottomPositionStyles()],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }\n      }, this.props.name && React.createElement(CustomIcon, {\n        name: this.props.name,\n        size: this.props.iconSize,\n        color: this.props.iconColor ? this.props.iconColor : this._getColor(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }\n      }), this.props.image ? this.props.image : React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 62\n        }\n      }), !this.props.onlyIcon && React.createElement(Text, {\n        style: [this.props.fontStyle, {\n          color: this._getColor(),\n          fontSize: this.props.fontSize\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }\n      }, this.props.label)));\n    }\n  }]);\n\n  return Tab;\n}(PureComponent);\n\nTab.propTypes = {\n  name: PropTypes.string,\n  label: PropTypes.string,\n  fontStyle: PropTypes.object,\n  positionBottom: PropTypes.bool,\n  highlight: PropTypes.bool,\n  style: PropTypes.oneOfType([PropTypes.object, PropTypes.number])\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nexport default Tab;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/components/molecules/Tab.js"],"names":["React","PureComponent","PropTypes","CustomIcon","Text","View","TouchableOpacity","Tab","_handleTabPress","bind","props","onTabPress","tabIndex","selected","activeColor","unActiveColor","highlight","borderBottomColor","borderBottomWidth","positionBottom","backgroundColor","getBackgroundColor","width","paddingRight","paddingLeft","getBorder","style","styles","container","pressOpacity","getBottomPositionStyles","name","iconSize","iconColor","_getColor","image","onlyIcon","fontStyle","color","fontSize","label","propTypes","string","object","bool","oneOfType","number","StyleSheet","create","flex","alignItems","justifyContent"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport {\r\n    CustomIcon,\r\n    Text,\r\n    View,\r\n    TouchableOpacity,\r\n} from '../atoms';\r\n\r\nimport {\r\n    StyleSheet,\r\n} from 'react-native';\r\n\r\nclass Tab extends PureComponent {\r\n    constructor() {\r\n        super();\r\n\r\n        this._handleTabPress = this._handleTabPress.bind(this);\r\n    }\r\n\r\n    _handleTabPress() {\r\n        this.props.onTabPress(this.props.tabIndex);\r\n    }\r\n\r\n    _getColor() {\r\n        if (this.props.selected === this.props.tabIndex) {\r\n            return this.props.activeColor;\r\n        }\r\n\r\n        return this.props.unActiveColor;\r\n    }\r\n\r\n    getBorder() {\r\n        if (this.props.highlight) {\r\n            return {\r\n                borderBottomColor: this.props.selected === this.props.tabIndex ? this.props.activeColor : \"#fff\",\r\n                borderBottomWidth: 0,\r\n            }\r\n        }\r\n    }\r\n\r\n    getBackgroundColor() {\r\n        if (this.props.selected === this.props.tabIndex) {\r\n            return \"#fff\";\r\n        } else {\r\n            return \"#dce3ea\";\r\n        }\r\n    }\r\n\r\n    getBottomPositionStyles() {\r\n        if (this.props.positionBottom) {\r\n            return {\r\n                backgroundColor: this.getBackgroundColor(),\r\n                width: \"100%\",\r\n                paddingRight: 10,\r\n                paddingLeft: 10\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <View style={[this.getBorder(), this.props.style, styles.container]} >\r\n                <TouchableOpacity\r\n                    onPress={this._handleTabPress}\r\n                    activeOpacity={this.props.pressOpacity}\r\n                    style={[this.props.style, styles.container, this.getBottomPositionStyles()]}\r\n                >\r\n                    {this.props.name &&\r\n                        <CustomIcon\r\n                            name={this.props.name}\r\n                            size={this.props.iconSize}\r\n                            color={this.props.iconColor ? this.props.iconColor : this._getColor()}\r\n                        />\r\n                    }\r\n                    {this.props.image ? (this.props.image) : <View />}\r\n                    {!this.props.onlyIcon &&\r\n                        <Text style={[this.props.fontStyle, { color: this._getColor(), fontSize: this.props.fontSize }]}>\r\n                            {this.props.label}\r\n                        </Text>\r\n                    }\r\n                </TouchableOpacity>\r\n            </View>\r\n        );\r\n    }\r\n}\r\n\r\nTab.propTypes = {\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    fontStyle: PropTypes.object,\r\n    positionBottom: PropTypes.bool,\r\n    highlight: PropTypes.bool,\r\n    style: PropTypes.oneOfType([\r\n        PropTypes.object,\r\n        PropTypes.number\r\n    ]),\r\n};\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        alignItems: 'center',\r\n        justifyContent: 'center'\r\n    },\r\n});\r\n\r\nexport default Tab;"]},"metadata":{},"sourceType":"module"}