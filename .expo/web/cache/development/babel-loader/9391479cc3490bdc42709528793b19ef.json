{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\src\\\\components\\\\templates\\\\UserProfile\\\\myranking.js\";\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport { TouchableOpacity, View, Icon, Text, ScrollView } from \"../../../marslab-library-react-native/components/atoms\";\nimport Eventpage from \"./Eventpage\";\nimport LuckyDrawPage from \"./LuckyDrawPage\";\nimport styles from \"./styles\";\nimport { Colors } from \"../../../settings/styles/theme\";\nexport var Myranking = function (_Component) {\n  _inherits(Myranking, _Component);\n\n  var _super = _createSuper(Myranking);\n\n  function Myranking(props) {\n    var _this;\n\n    _classCallCheck(this, Myranking);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      eventChoosed: true\n    };\n    return _this;\n  }\n\n  _createClass(Myranking, [{\n    key: \"onEventButtonPress\",\n    value: function onEventButtonPress() {\n      this.setState({\n        eventChoosed: true\n      });\n    }\n  }, {\n    key: \"onLuckyButtonPress\",\n    value: function onLuckyButtonPress() {\n      this.setState({\n        eventChoosed: false\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$props = this.props,\n          dataSource = _this$props.dataSource,\n          onPress = _this$props.onPress,\n          readLoadingReward = _this$props.readLoadingReward;\n      var routeRewards = dataSource.filter(function (_ref) {\n        var _ref$routeIds = _ref.routeIds,\n            routeIds = _ref$routeIds === void 0 ? [] : _ref$routeIds;\n        return routeIds.length !== 0;\n      });\n      var eventRewards = dataSource.filter(function (_ref2) {\n        var _ref2$eventIds = _ref2.eventIds,\n            eventIds = _ref2$eventIds === void 0 ? [] : _ref2$eventIds;\n        return eventIds.length !== 0;\n      });\n      return React.createElement(View, {\n        style: styles.rankingContainer,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }\n      }, React.createElement(View, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, this.state.eventChoosed ? React.createElement(Eventpage, {\n        dataSource: routeRewards,\n        onPress: onPress,\n        readLoading: readLoadingReward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }\n      }) : React.createElement(LuckyDrawPage, {\n        dataSource: eventRewards,\n        onPress: onPress,\n        readLoading: readLoadingReward,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }\n      })), React.createElement(TouchableOpacity, {\n        style: [styles.eventButtonStyle, styles.eventButtonPosition, {\n          backgroundColor: this.state.eventChoosed ? Colors.PRIMARY : Colors.WHITE\n        }],\n        onPress: function onPress() {\n          return _this2.onEventButtonPress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }\n      }, React.createElement(Icon, {\n        name: \"calendar-check-o\",\n        type: \"font-awesome\",\n        color: this.state.eventChoosed ? Colors.WHITE : Colors.GRAY_MEDIUM,\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }\n      }), React.createElement(Text, {\n        style: [styles.eventTextStyle, {\n          color: this.state.eventChoosed ? Colors.WHITE : Colors.GRAY_MEDIUM\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }\n      }, \"Route\")), React.createElement(TouchableOpacity, {\n        style: [styles.eventButtonStyle, styles.luckyButtonPosition, {\n          backgroundColor: !this.state.eventChoosed ? Colors.PRIMARY : Colors.WHITE\n        }],\n        onPress: function onPress() {\n          return _this2.onLuckyButtonPress();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }\n      }, React.createElement(Icon, {\n        name: \"calendar-check-o\",\n        type: \"font-awesome\",\n        color: !this.state.eventChoosed ? Colors.WHITE : Colors.GRAY_MEDIUM,\n        size: 18,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 15\n        }\n      }), React.createElement(Text, {\n        style: [styles.eventTextStyle, {\n          color: !this.state.eventChoosed ? Colors.WHITE : Colors.GRAY_MEDIUM\n        }],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }\n      }, \"Suprise Event\")));\n    }\n  }]);\n\n  return Myranking;\n}(Component);\nexport default Myranking;","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/src/components/templates/UserProfile/myranking.js"],"names":["React","Component","TouchableOpacity","View","Icon","Text","ScrollView","Eventpage","LuckyDrawPage","styles","Colors","Myranking","props","state","eventChoosed","setState","dataSource","onPress","readLoadingReward","routeRewards","filter","routeIds","length","eventRewards","eventIds","rankingContainer","eventButtonStyle","eventButtonPosition","backgroundColor","PRIMARY","WHITE","onEventButtonPress","GRAY_MEDIUM","eventTextStyle","color","luckyButtonPosition","onLuckyButtonPress"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,gBADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,IAJF,EAKEC,UALF;AAOA,OAAOC,SAAP;AACA,OAAOC,aAAP;AACA,OAAOC,MAAP;AACA,SAASC,MAAT;AAEA,WAAaC,SAAb;AAAA;;AAAA;;AACE,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,YAAY,EAAE;AADH,KAAb;AAHiB;AAMlB;;AAPH;AAAA;AAAA,yCASuB;AACnB,WAAKC,QAAL,CAAc;AAAED,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD;AAXH;AAAA;AAAA,yCAauB;AACnB,WAAKC,QAAL,CAAc;AAAED,QAAAA,YAAY,EAAE;AAAhB,OAAd;AACD;AAfH;AAAA;AAAA,6BAiBW;AAAA;;AAAA,wBAC4C,KAAKF,KADjD;AAAA,UACCI,UADD,eACCA,UADD;AAAA,UACaC,OADb,eACaA,OADb;AAAA,UACsBC,iBADtB,eACsBA,iBADtB;AAGP,UAAMC,YAAY,GAAGH,UAAU,CAACI,MAAX,CAAkB,gBAAuB;AAAA,iCAApBC,QAAoB;AAAA,YAApBA,QAAoB,8BAAT,EAAS;AAC5D,eAAOA,QAAQ,CAACC,MAAT,KAAoB,CAA3B;AACD,OAFoB,CAArB;AAIA,UAAMC,YAAY,GAAGP,UAAU,CAACI,MAAX,CAAkB,iBAAuB;AAAA,mCAApBI,QAAoB;AAAA,YAApBA,QAAoB,+BAAT,EAAS;AAC5D,eAAOA,QAAQ,CAACF,MAAT,KAAoB,CAA3B;AACD,OAFoB,CAArB;AAIA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAEb,MAAM,CAACgB,gBAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACG,KAAKZ,KAAL,CAAWC,YAAX,GACC,oBAAC,SAAD;AAAW,QAAA,UAAU,EAAEK,YAAvB;AAAqC,QAAA,OAAO,EAAEF,OAA9C;AAAuD,QAAA,WAAW,EAAEC,iBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD,GAGC,oBAAC,aAAD;AAAe,QAAA,UAAU,EAAEK,YAA3B;AAAyC,QAAA,OAAO,EAAEN,OAAlD;AAA2D,QAAA,WAAW,EAAEC,iBAAxE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJJ,CADF,EAQI,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE,CACLT,MAAM,CAACiB,gBADF,EAELjB,MAAM,CAACkB,mBAFF,EAGL;AACEC,UAAAA,eAAe,EAAE,KAAKf,KAAL,CAAWC,YAAX,GACbJ,MAAM,CAACmB,OADM,GAEbnB,MAAM,CAACoB;AAHb,SAHK,CADT;AAUE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACC,kBAAL,EAAN;AAAA,SAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,kBADP;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,KAAK,EACH,KAAKlB,KAAL,CAAWC,YAAX,GAA0BJ,MAAM,CAACoB,KAAjC,GAAyCpB,MAAM,CAACsB,WAJpD;AAME,QAAA,IAAI,EAAE,EANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAoBE,oBAAC,IAAD;AACI,QAAA,KAAK,EAAE,CACLvB,MAAM,CAACwB,cADF,EAEL;AACEC,UAAAA,KAAK,EAAE,KAAKrB,KAAL,CAAWC,YAAX,GACHJ,MAAM,CAACoB,KADJ,GAEHpB,MAAM,CAACsB;AAHb,SAFK,CADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBApBF,CARJ,EAyCM,oBAAC,gBAAD;AACE,QAAA,KAAK,EAAE,CACLvB,MAAM,CAACiB,gBADF,EAELjB,MAAM,CAAC0B,mBAFF,EAGL;AACEP,UAAAA,eAAe,EAAE,CAAC,KAAKf,KAAL,CAAWC,YAAZ,GACbJ,MAAM,CAACmB,OADM,GAEbnB,MAAM,CAACoB;AAHb,SAHK,CADT;AAUE,QAAA,OAAO,EAAE;AAAA,iBAAM,MAAI,CAACM,kBAAL,EAAN;AAAA,SAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAYE,oBAAC,IAAD;AACE,QAAA,IAAI,EAAC,kBADP;AAEE,QAAA,IAAI,EAAC,cAFP;AAGE,QAAA,KAAK,EACH,CAAC,KAAKvB,KAAL,CAAWC,YAAZ,GAA2BJ,MAAM,CAACoB,KAAlC,GAA0CpB,MAAM,CAACsB,WAJrD;AAME,QAAA,IAAI,EAAE,EANR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAZF,EAoBE,oBAAC,IAAD;AACE,QAAA,KAAK,EAAE,CACLvB,MAAM,CAACwB,cADF,EAEL;AACEC,UAAAA,KAAK,EAAE,CAAC,KAAKrB,KAAL,CAAWC,YAAZ,GACHJ,MAAM,CAACoB,KADJ,GAEHpB,MAAM,CAACsB;AAHb,SAFK,CADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBApBF,CAzCN,CADF;AA6ED;AAzGH;;AAAA;AAAA,EAA+B/B,SAA/B;AA4GA,eAAeU,SAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport {\r\n  TouchableOpacity,\r\n  View,\r\n  Icon,\r\n  Text,\r\n  ScrollView\r\n} from \"../../../marslab-library-react-native/components/atoms\";\r\nimport Eventpage from \"./Eventpage\";\r\nimport LuckyDrawPage from \"./LuckyDrawPage\";\r\nimport styles from \"./styles\";\r\nimport { Colors } from \"../../../settings/styles/theme\";\r\n\r\nexport class Myranking extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      eventChoosed: true,\r\n    };\r\n  }\r\n\r\n  onEventButtonPress() {\r\n    this.setState({ eventChoosed: true });\r\n  }\r\n\r\n  onLuckyButtonPress() {\r\n    this.setState({ eventChoosed: false });\r\n  }\r\n\r\n  render() {\r\n    const { dataSource, onPress, readLoadingReward } = this.props;\r\n\r\n    const routeRewards = dataSource.filter(({ routeIds = [] }) => {\r\n      return routeIds.length !== 0;\r\n    });\r\n\r\n    const eventRewards = dataSource.filter(({ eventIds = [] }) => {\r\n      return eventIds.length !== 0;\r\n    });\r\n\r\n    return (\r\n      <View style={styles.rankingContainer}>\r\n        <View  >\r\n          {this.state.eventChoosed ? (\r\n            <Eventpage dataSource={routeRewards} onPress={onPress} readLoading={readLoadingReward}/>\r\n          ) : (\r\n            <LuckyDrawPage dataSource={eventRewards} onPress={onPress} readLoading={readLoadingReward}/>\r\n          )}\r\n        </View>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.eventButtonStyle,\r\n              styles.eventButtonPosition,\r\n              {\r\n                backgroundColor: this.state.eventChoosed\r\n                  ? Colors.PRIMARY\r\n                  : Colors.WHITE,\r\n              },\r\n            ]}\r\n            onPress={() => this.onEventButtonPress()}\r\n          >\r\n            <Icon\r\n              name=\"calendar-check-o\"\r\n              type=\"font-awesome\"\r\n              color={\r\n                this.state.eventChoosed ? Colors.WHITE : Colors.GRAY_MEDIUM\r\n              }\r\n              size={18}\r\n            />\r\n            <Text\r\n                style={[\r\n                  styles.eventTextStyle,\r\n                  {\r\n                    color: this.state.eventChoosed\r\n                      ? Colors.WHITE\r\n                      : Colors.GRAY_MEDIUM,\r\n                  },\r\n                ]}\r\n              >\r\n                Route\r\n              </Text>\r\n            </TouchableOpacity>\r\n            <TouchableOpacity\r\n              style={[\r\n                styles.eventButtonStyle,\r\n                styles.luckyButtonPosition,\r\n                {\r\n                  backgroundColor: !this.state.eventChoosed\r\n                    ? Colors.PRIMARY\r\n                    : Colors.WHITE,\r\n                },\r\n              ]}\r\n              onPress={() => this.onLuckyButtonPress()}\r\n            >\r\n              <Icon\r\n                name=\"calendar-check-o\"\r\n                type=\"font-awesome\"\r\n                color={\r\n                  !this.state.eventChoosed ? Colors.WHITE : Colors.GRAY_MEDIUM\r\n                }\r\n                size={18}\r\n              />\r\n              <Text\r\n                style={[\r\n                  styles.eventTextStyle,\r\n                  {\r\n                    color: !this.state.eventChoosed\r\n                      ? Colors.WHITE\r\n                      : Colors.GRAY_MEDIUM,\r\n                  },\r\n                ]}\r\n              >\r\n                Suprise Event\r\n              </Text>\r\n            </TouchableOpacity>\r\n        </View>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Myranking;\r\n"]},"metadata":{},"sourceType":"module"}