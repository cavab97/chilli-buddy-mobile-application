{"ast":null,"code":"'use strict';\n\nimport Animated from \"../../../exports/Animated\";\nimport I18nManager from \"../../../exports/I18nManager\";\nimport PanResponder from \"../../../exports/PanResponder\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from \"../../../exports/StyleSheet\";\nimport TimerMixin from 'react-timer-mixin';\nimport View from \"../../../exports/View\";\nimport createReactClass from 'create-react-class';\nimport emptyFunction from 'fbjs/lib/emptyFunction';\n\nvar isRTL = function isRTL() {\n  return I18nManager.isRTL;\n};\n\nvar CLOSED_LEFT_POSITION = 0;\nvar HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;\nvar HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;\nvar SLOW_SPEED_SWIPE_FACTOR = 4;\nvar SWIPE_DURATION = 300;\nvar ON_MOUNT_BOUNCE_DELAY = 700;\nvar ON_MOUNT_BOUNCE_DURATION = 400;\nvar RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;\nvar RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;\nvar RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;\nvar SwipeableRow = createReactClass({\n  displayName: 'SwipeableRow',\n  _panResponder: {},\n  _previousLeft: CLOSED_LEFT_POSITION,\n  mixins: [TimerMixin],\n  propTypes: {\n    children: PropTypes.any,\n    isOpen: PropTypes.bool,\n    preventSwipeRight: PropTypes.bool,\n    maxSwipeDistance: PropTypes.number.isRequired,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSwipeEnd: PropTypes.func.isRequired,\n    onSwipeStart: PropTypes.func.isRequired,\n    shouldBounceOnMount: PropTypes.bool,\n    slideoutView: PropTypes.node.isRequired,\n    swipeThreshold: PropTypes.number.isRequired\n  },\n  getInitialState: function getInitialState() {\n    return {\n      currentLeft: new Animated.Value(this._previousLeft),\n      isSwipeableViewRendered: false,\n      rowHeight: null\n    };\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isOpen: false,\n      preventSwipeRight: false,\n      maxSwipeDistance: 0,\n      onOpen: emptyFunction,\n      onClose: emptyFunction,\n      onSwipeEnd: emptyFunction,\n      onSwipeStart: emptyFunction,\n      swipeThreshold: 30\n    };\n  },\n  UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {\n        return false;\n      }\n    });\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    if (this.props.shouldBounceOnMount) {\n      this.setTimeout(function () {\n        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);\n      }, ON_MOUNT_BOUNCE_DELAY);\n    }\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    if (this.props.isOpen && !nextProps.isOpen) {\n      this._animateToClosedPosition();\n    }\n  },\n  render: function render() {\n    var slideOutView = void 0;\n\n    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {\n      slideOutView = React.createElement(View, {\n        style: [styles.slideOutContainer, {\n          height: this.state.rowHeight\n        }]\n      }, this.props.slideoutView);\n    }\n\n    var swipeableView = React.createElement(Animated.View, {\n      onLayout: this._onSwipeableViewLayout,\n      style: {\n        transform: [{\n          translateX: this.state.currentLeft\n        }]\n      }\n    }, this.props.children);\n    return React.createElement(View, this._panResponder.panHandlers, slideOutView, swipeableView);\n  },\n  close: function close() {\n    this.props.onClose();\n\n    this._animateToClosedPosition();\n  },\n  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {\n    this.setState({\n      isSwipeableViewRendered: true,\n      rowHeight: event.nativeEvent.layout.height\n    });\n  },\n  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {\n    return gestureState.dy < 10 && this._isValidSwipe(gestureState);\n  },\n  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},\n  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {\n    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {\n      return;\n    }\n\n    this.props.onSwipeStart();\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this._swipeSlowSpeed(gestureState);\n    } else {\n      this._swipeFullSpeed(gestureState);\n    }\n  },\n  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;\n  },\n  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);\n  },\n  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);\n  },\n  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;\n  },\n  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {\n    return false;\n  },\n  _animateTo: function _animateTo(toValue) {\n    var _this2 = this;\n\n    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;\n    Animated.timing(this.state.currentLeft, {\n      duration: duration,\n      toValue: toValue,\n      useNativeDriver: true\n    }).start(function () {\n      _this2._previousLeft = toValue;\n      callback();\n    });\n  },\n  _animateToOpenPosition: function _animateToOpenPosition() {\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n\n    this._animateTo(-maxSwipeDistance);\n  },\n  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {\n    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n\n    this._animateTo(-maxSwipeDistance, duration);\n  },\n  _animateToClosedPosition: function _animateToClosedPosition() {\n    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;\n\n    this._animateTo(CLOSED_LEFT_POSITION, duration);\n  },\n  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {\n    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n  },\n  _animateBounceBack: function _animateBounceBack(duration) {\n    var swipeBounceBackDistance = isRTL() ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;\n\n    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);\n  },\n  _isValidSwipe: function _isValidSwipe(gestureState) {\n    if (this.props.preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {\n      return false;\n    }\n\n    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;\n  },\n  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {\n    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n  },\n  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {\n    var horizontalDistance = isRTL() ? -gestureState.dx : gestureState.dx;\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this.props.onOpen();\n\n      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n    } else if (this._shouldAnimateRemainder(gestureState)) {\n      if (horizontalDistance < 0) {\n        this.props.onOpen();\n\n        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);\n      } else {\n        this.props.onClose();\n\n        this._animateToClosedPosition();\n      }\n    } else {\n      if (this._previousLeft === CLOSED_LEFT_POSITION) {\n        this._animateToClosedPosition();\n      } else {\n        this._animateToOpenPosition();\n      }\n    }\n\n    this.props.onSwipeEnd();\n  }\n});\nvar styles = StyleSheet.create({\n  slideOutContainer: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\nexport default SwipeableRow;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/node_modules/react-native-web/dist/vendor/react-native/SwipeableRow/index.js"],"names":["Animated","I18nManager","PanResponder","React","PropTypes","StyleSheet","TimerMixin","View","createReactClass","emptyFunction","isRTL","CLOSED_LEFT_POSITION","HORIZONTAL_SWIPE_DISTANCE_THRESHOLD","HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD","SLOW_SPEED_SWIPE_FACTOR","SWIPE_DURATION","ON_MOUNT_BOUNCE_DELAY","ON_MOUNT_BOUNCE_DURATION","RIGHT_SWIPE_BOUNCE_BACK_DISTANCE","RIGHT_SWIPE_BOUNCE_BACK_DURATION","RIGHT_SWIPE_THRESHOLD","SwipeableRow","displayName","_panResponder","_previousLeft","mixins","propTypes","children","any","isOpen","bool","preventSwipeRight","maxSwipeDistance","number","isRequired","onOpen","func","onClose","onSwipeEnd","onSwipeStart","shouldBounceOnMount","slideoutView","node","swipeThreshold","getInitialState","currentLeft","Value","isSwipeableViewRendered","rowHeight","getDefaultProps","UNSAFE_componentWillMount","create","onMoveShouldSetPanResponderCapture","_handleMoveShouldSetPanResponderCapture","onPanResponderGrant","_handlePanResponderGrant","onPanResponderMove","_handlePanResponderMove","onPanResponderRelease","_handlePanResponderEnd","onPanResponderTerminationRequest","_onPanResponderTerminationRequest","onPanResponderTerminate","onShouldBlockNativeResponder","event","gestureState","componentDidMount","_this","props","setTimeout","_animateBounceBack","UNSAFE_componentWillReceiveProps","nextProps","_animateToClosedPosition","render","slideOutView","state","createElement","style","styles","slideOutContainer","height","swipeableView","onLayout","_onSwipeableViewLayout","transform","translateX","panHandlers","close","setState","nativeEvent","layout","dy","_isValidSwipe","_isSwipingExcessivelyRightFromClosedPosition","_isSwipingRightFromClosed","_swipeSlowSpeed","_swipeFullSpeed","gestureStateDx","dx","setValue","_animateTo","toValue","_this2","duration","arguments","length","undefined","callback","timing","useNativeDriver","start","_animateToOpenPosition","_animateToOpenPositionWith","speed","distMoved","Math","abs","_animateToClosedPositionDuringBounce","swipeBounceBackDistance","_shouldAnimateRemainder","vx","horizontalDistance","bottom","left","position","right","top"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @providesModule SwipeableRow\n * @noflow\n */\n'use strict';\n\nimport Animated from '../../../exports/Animated';\nimport I18nManager from '../../../exports/I18nManager';\nimport PanResponder from '../../../exports/PanResponder';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport StyleSheet from '../../../exports/StyleSheet';\n/* $FlowFixMe(>=0.54.0 site=react_native_oss) This comment suppresses an error\n * found when Flow v0.54 was deployed. To see the error delete this comment and\n * run Flow. */\nimport TimerMixin from 'react-timer-mixin';\nimport View from '../../../exports/View';\n\nimport createReactClass from 'create-react-class';\nimport emptyFunction from 'fbjs/lib/emptyFunction';\n\nvar isRTL = function isRTL() {\n  return I18nManager.isRTL;\n};\n\n// NOTE: Eventually convert these consts to an input object of configurations\n\n// Position of the left of the swipable item when closed\nvar CLOSED_LEFT_POSITION = 0;\n// Minimum swipe distance before we recognize it as such\nvar HORIZONTAL_SWIPE_DISTANCE_THRESHOLD = 10;\n// Minimum swipe speed before we fully animate the user's action (open/close)\nvar HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD = 0.3;\n// Factor to divide by to get slow speed; i.e. 4 means 1/4 of full speed\nvar SLOW_SPEED_SWIPE_FACTOR = 4;\n// Time, in milliseconds, of how long the animated swipe should be\nvar SWIPE_DURATION = 300;\n\n/**\n * On SwipeableListView mount, the 1st item will bounce to show users it's\n * possible to swipe\n */\nvar ON_MOUNT_BOUNCE_DELAY = 700;\nvar ON_MOUNT_BOUNCE_DURATION = 400;\n\n// Distance left of closed position to bounce back when right-swiping from closed\nvar RIGHT_SWIPE_BOUNCE_BACK_DISTANCE = 30;\nvar RIGHT_SWIPE_BOUNCE_BACK_DURATION = 300;\n/**\n * Max distance of right swipe to allow (right swipes do functionally nothing).\n * Must be multiplied by SLOW_SPEED_SWIPE_FACTOR because gestureState.dx tracks\n * how far the finger swipes, and not the actual animation distance.\n*/\nvar RIGHT_SWIPE_THRESHOLD = 30 * SLOW_SPEED_SWIPE_FACTOR;\n\n/**\n * Creates a swipable row that allows taps on the main item and a custom View\n * on the item hidden behind the row. Typically this should be used in\n * conjunction with SwipeableListView for additional functionality, but can be\n * used in a normal ListView. See the renderRow for SwipeableListView to see how\n * to use this component separately.\n */\nvar SwipeableRow = createReactClass({\n  displayName: 'SwipeableRow',\n  _panResponder: {},\n  _previousLeft: CLOSED_LEFT_POSITION,\n\n  mixins: [TimerMixin],\n\n  propTypes: {\n    children: PropTypes.any,\n    isOpen: PropTypes.bool,\n    preventSwipeRight: PropTypes.bool,\n    maxSwipeDistance: PropTypes.number.isRequired,\n    onOpen: PropTypes.func.isRequired,\n    onClose: PropTypes.func.isRequired,\n    onSwipeEnd: PropTypes.func.isRequired,\n    onSwipeStart: PropTypes.func.isRequired,\n    // Should bounce the row on mount\n    shouldBounceOnMount: PropTypes.bool,\n    /**\n     * A ReactElement that is unveiled when the user swipes\n     */\n    slideoutView: PropTypes.node.isRequired,\n    /**\n     * The minimum swipe distance required before fully animating the swipe. If\n     * the user swipes less than this distance, the item will return to its\n     * previous (open/close) position.\n     */\n    swipeThreshold: PropTypes.number.isRequired\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      currentLeft: new Animated.Value(this._previousLeft),\n      /**\n       * In order to render component A beneath component B, A must be rendered\n       * before B. However, this will cause \"flickering\", aka we see A briefly\n       * then B. To counter this, _isSwipeableViewRendered flag is used to set\n       * component A to be transparent until component B is loaded.\n       */\n      isSwipeableViewRendered: false,\n      rowHeight: null\n    };\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      isOpen: false,\n      preventSwipeRight: false,\n      maxSwipeDistance: 0,\n      onOpen: emptyFunction,\n      onClose: emptyFunction,\n      onSwipeEnd: emptyFunction,\n      onSwipeStart: emptyFunction,\n      swipeThreshold: 30\n    };\n  },\n  UNSAFE_componentWillMount: function UNSAFE_componentWillMount() {\n    this._panResponder = PanResponder.create({\n      onMoveShouldSetPanResponderCapture: this._handleMoveShouldSetPanResponderCapture,\n      onPanResponderGrant: this._handlePanResponderGrant,\n      onPanResponderMove: this._handlePanResponderMove,\n      onPanResponderRelease: this._handlePanResponderEnd,\n      onPanResponderTerminationRequest: this._onPanResponderTerminationRequest,\n      onPanResponderTerminate: this._handlePanResponderEnd,\n      onShouldBlockNativeResponder: function onShouldBlockNativeResponder(event, gestureState) {\n        return false;\n      }\n    });\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    if (this.props.shouldBounceOnMount) {\n      /**\n       * Do the on mount bounce after a delay because if we animate when other\n       * components are loading, the animation will be laggy\n       */\n      this.setTimeout(function () {\n        _this._animateBounceBack(ON_MOUNT_BOUNCE_DURATION);\n      }, ON_MOUNT_BOUNCE_DELAY);\n    }\n  },\n  UNSAFE_componentWillReceiveProps: function UNSAFE_componentWillReceiveProps(nextProps) {\n    /**\n     * We do not need an \"animateOpen(noCallback)\" because this animation is\n     * handled internally by this component.\n     */\n    if (this.props.isOpen && !nextProps.isOpen) {\n      this._animateToClosedPosition();\n    }\n  },\n  render: function render() {\n    // The view hidden behind the main view\n    var slideOutView = void 0;\n    if (this.state.isSwipeableViewRendered && this.state.rowHeight) {\n      slideOutView = React.createElement(\n        View,\n        { style: [styles.slideOutContainer, { height: this.state.rowHeight }] },\n        this.props.slideoutView\n      );\n    }\n\n    // The swipeable item\n    var swipeableView = React.createElement(\n      Animated.View,\n      {\n        onLayout: this._onSwipeableViewLayout,\n        style: { transform: [{ translateX: this.state.currentLeft }] } },\n      this.props.children\n    );\n\n    return React.createElement(\n      View,\n      this._panResponder.panHandlers,\n      slideOutView,\n      swipeableView\n    );\n  },\n  close: function close() {\n    this.props.onClose();\n    this._animateToClosedPosition();\n  },\n  _onSwipeableViewLayout: function _onSwipeableViewLayout(event) {\n    this.setState({\n      isSwipeableViewRendered: true,\n      rowHeight: event.nativeEvent.layout.height\n    });\n  },\n  _handleMoveShouldSetPanResponderCapture: function _handleMoveShouldSetPanResponderCapture(event, gestureState) {\n    // Decides whether a swipe is responded to by this component or its child\n    return gestureState.dy < 10 && this._isValidSwipe(gestureState);\n  },\n  _handlePanResponderGrant: function _handlePanResponderGrant(event, gestureState) {},\n  _handlePanResponderMove: function _handlePanResponderMove(event, gestureState) {\n    if (this._isSwipingExcessivelyRightFromClosedPosition(gestureState)) {\n      return;\n    }\n\n    this.props.onSwipeStart();\n\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this._swipeSlowSpeed(gestureState);\n    } else {\n      this._swipeFullSpeed(gestureState);\n    }\n  },\n  _isSwipingRightFromClosed: function _isSwipingRightFromClosed(gestureState) {\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._previousLeft === CLOSED_LEFT_POSITION && gestureStateDx > 0;\n  },\n  _swipeFullSpeed: function _swipeFullSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx);\n  },\n  _swipeSlowSpeed: function _swipeSlowSpeed(gestureState) {\n    this.state.currentLeft.setValue(this._previousLeft + gestureState.dx / SLOW_SPEED_SWIPE_FACTOR);\n  },\n  _isSwipingExcessivelyRightFromClosedPosition: function _isSwipingExcessivelyRightFromClosedPosition(gestureState) {\n    /**\n     * We want to allow a BIT of right swipe, to allow users to know that\n     * swiping is available, but swiping right does not do anything\n     * functionally.\n     */\n    var gestureStateDx = isRTL() ? -gestureState.dx : gestureState.dx;\n    return this._isSwipingRightFromClosed(gestureState) && gestureStateDx > RIGHT_SWIPE_THRESHOLD;\n  },\n  _onPanResponderTerminationRequest: function _onPanResponderTerminationRequest(event, gestureState) {\n    return false;\n  },\n  _animateTo: function _animateTo(toValue) {\n    var _this2 = this;\n\n    var duration = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : SWIPE_DURATION;\n    var callback = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : emptyFunction;\n\n    Animated.timing(this.state.currentLeft, {\n      duration: duration,\n      toValue: toValue,\n      useNativeDriver: true\n    }).start(function () {\n      _this2._previousLeft = toValue;\n      callback();\n    });\n  },\n  _animateToOpenPosition: function _animateToOpenPosition() {\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n    this._animateTo(-maxSwipeDistance);\n  },\n  _animateToOpenPositionWith: function _animateToOpenPositionWith(speed, distMoved) {\n    /**\n     * Ensure the speed is at least the set speed threshold to prevent a slow\n     * swiping animation\n     */\n    speed = speed > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD ? speed : HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n    /**\n     * Calculate the duration the row should take to swipe the remaining distance\n     * at the same speed the user swiped (or the speed threshold)\n     */\n    var duration = Math.abs((this.props.maxSwipeDistance - Math.abs(distMoved)) / speed);\n    var maxSwipeDistance = isRTL() ? -this.props.maxSwipeDistance : this.props.maxSwipeDistance;\n    this._animateTo(-maxSwipeDistance, duration);\n  },\n  _animateToClosedPosition: function _animateToClosedPosition() {\n    var duration = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : SWIPE_DURATION;\n\n    this._animateTo(CLOSED_LEFT_POSITION, duration);\n  },\n  _animateToClosedPositionDuringBounce: function _animateToClosedPositionDuringBounce() {\n    this._animateToClosedPosition(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n  },\n  _animateBounceBack: function _animateBounceBack(duration) {\n    /**\n     * When swiping right, we want to bounce back past closed position on release\n     * so users know they should swipe right to get content.\n     */\n    var swipeBounceBackDistance = isRTL() ? -RIGHT_SWIPE_BOUNCE_BACK_DISTANCE : RIGHT_SWIPE_BOUNCE_BACK_DISTANCE;\n    this._animateTo(-swipeBounceBackDistance, duration, this._animateToClosedPositionDuringBounce);\n  },\n\n\n  // Ignore swipes due to user's finger moving slightly when tapping\n  _isValidSwipe: function _isValidSwipe(gestureState) {\n    if (this.props.preventSwipeRight && this._previousLeft === CLOSED_LEFT_POSITION && gestureState.dx > 0) {\n      return false;\n    }\n\n    return Math.abs(gestureState.dx) > HORIZONTAL_SWIPE_DISTANCE_THRESHOLD;\n  },\n  _shouldAnimateRemainder: function _shouldAnimateRemainder(gestureState) {\n    /**\n     * If user has swiped past a certain distance, animate the rest of the way\n     * if they let go\n     */\n    return Math.abs(gestureState.dx) > this.props.swipeThreshold || gestureState.vx > HORIZONTAL_FULL_SWIPE_SPEED_THRESHOLD;\n  },\n  _handlePanResponderEnd: function _handlePanResponderEnd(event, gestureState) {\n    var horizontalDistance = isRTL() ? -gestureState.dx : gestureState.dx;\n    if (this._isSwipingRightFromClosed(gestureState)) {\n      this.props.onOpen();\n      this._animateBounceBack(RIGHT_SWIPE_BOUNCE_BACK_DURATION);\n    } else if (this._shouldAnimateRemainder(gestureState)) {\n      if (horizontalDistance < 0) {\n        // Swiped left\n        this.props.onOpen();\n        this._animateToOpenPositionWith(gestureState.vx, horizontalDistance);\n      } else {\n        // Swiped right\n        this.props.onClose();\n        this._animateToClosedPosition();\n      }\n    } else {\n      if (this._previousLeft === CLOSED_LEFT_POSITION) {\n        this._animateToClosedPosition();\n      } else {\n        this._animateToOpenPosition();\n      }\n    }\n\n    this.props.onSwipeEnd();\n  }\n});\n\nvar styles = StyleSheet.create({\n  slideOutContainer: {\n    bottom: 0,\n    left: 0,\n    position: 'absolute',\n    right: 0,\n    top: 0\n  }\n});\n\nexport default SwipeableRow;"]},"metadata":{},"sourceType":"module"}