{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { database } from \"../../marslab-library-react-native/utils/helper\";\nexport function readObjects() {\n  return new Promise(function (resolve, reject) {\n    database.readTable({\n      ref: \"posts\"\n    }).where(\"deleted_at\", \"==\", null).get().then(function (QuerySnapshot) {\n      var result = [];\n      QuerySnapshot.forEach(function (snapshot) {\n        var data = _objectSpread(_objectSpread({}, snapshot.data()), {}, {\n          id: snapshot.id\n        });\n\n        var parent = database.processData({\n          data: data\n        });\n\n        var processedData = _objectSpread({}, parent);\n\n        result.push(processedData);\n      });\n      resolve(result);\n    }).catch(function (error) {\n      reject(error);\n    });\n  });\n}","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/src/services/database/advertisement.js"],"names":["database","readObjects","Promise","resolve","reject","readTable","ref","where","get","then","QuerySnapshot","result","forEach","snapshot","data","id","parent","processData","processedData","push","catch","error"],"mappings":";;;;;;AAAA,SAASA,QAAT;AAEA,OAAO,SAASC,WAAT,GAAuB;AAC5B,SAAO,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCJ,IAAAA,QAAQ,CACLK,SADH,CACa;AAAEC,MAAAA,GAAG;AAAL,KADb,EAEGC,KAFH,CAES,YAFT,EAEuB,IAFvB,EAE6B,IAF7B,EAGGC,GAHH,GAIGC,IAJH,CAIQ,UAAAC,aAAa,EAAI;AACrB,UAAMC,MAAM,GAAG,EAAf;AACAD,MAAAA,aAAa,CAACE,OAAd,CAAsB,UAAAC,QAAQ,EAAI;AAChC,YAAMC,IAAI,mCACLD,QAAQ,CAACC,IAAT,EADK;AAGRC,UAAAA,EAAE,EAAEF,QAAQ,CAACE;AAHL,UAAV;;AAOA,YAAMC,MAAM,GAAGhB,QAAQ,CAACiB,WAAT,CAAqB;AAAEH,UAAAA,IAAI,EAAJA;AAAF,SAArB,CAAf;;AAMA,YAAMI,aAAa,qBAAQF,MAAR,CAAnB;;AAEAL,QAAAA,MAAM,CAACQ,IAAP,CAAYD,aAAZ;AACD,OAjBD;AAkBAf,MAAAA,OAAO,CAACQ,MAAD,CAAP;AACD,KAzBH,EA0BGS,KA1BH,CA0BS,UAAAC,KAAK,EAAI;AACdjB,MAAAA,MAAM,CAACiB,KAAD,CAAN;AACD,KA5BH;AA6BD,GA9BM,CAAP;AA+BD","sourcesContent":["import { database } from \"../../marslab-library-react-native/utils/helper\";\r\n\r\nexport function readObjects() {\r\n  return new Promise((resolve, reject) => {\r\n    database\r\n      .readTable({ ref: `posts` })\r\n      .where(\"deleted_at\", \"==\", null)\r\n      .get()\r\n      .then(QuerySnapshot => {\r\n        const result = [];\r\n        QuerySnapshot.forEach(snapshot => {\r\n          const data = {\r\n            ...snapshot.data(),\r\n            // ...snapshot.data().d,\r\n            id: snapshot.id\r\n          };\r\n          // delete data[\"d\"];\r\n\r\n          const parent = database.processData({ data });\r\n          // const created = database.processData({ data: data.created });\r\n          // const deleted = database.processData({ data: data.deleted });\r\n          // const updated = database.processData({ data: data.updated });\r\n\r\n          //const processedData = { ...parent, created, deleted, updated };\r\n          const processedData = { ...parent };\r\n\r\n          result.push(processedData);\r\n        });\r\n        resolve(result);\r\n      })\r\n      .catch(error => {\r\n        reject(error);\r\n      });\r\n  });\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}