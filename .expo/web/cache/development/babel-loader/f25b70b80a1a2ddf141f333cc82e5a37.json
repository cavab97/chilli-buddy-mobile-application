{"ast":null,"code":"import AccessibilityUtil from \"../../modules/AccessibilityUtil\";\nimport createDOMProps from \"../../modules/createDOMProps\";\nimport { injectEventPluginsByName } from 'react-dom/unstable-native-dependencies';\nimport normalizeNativeEvent from \"../../modules/normalizeNativeEvent\";\nimport React from 'react';\nimport ResponderEventPlugin from \"../../modules/ResponderEventPlugin\";\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin\n});\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\nvar eventHandlerNames = {\n  onBlur: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onResponderRelease: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true\n};\n\nvar adjustProps = function adjustProps(domProps) {\n  var onClick = domProps.onClick,\n      onResponderRelease = domProps.onResponderRelease,\n      role = domProps.role;\n  var isButtonLikeRole = AccessibilityUtil.buttonLikeRoles[role];\n  var isDisabled = AccessibilityUtil.isDisabled(domProps);\n  var isLinkRole = role === 'link';\n  Object.keys(domProps).forEach(function (propName) {\n    var prop = domProps[propName];\n    var isEventHandler = typeof prop === 'function' && eventHandlerNames[propName];\n\n    if (isEventHandler) {\n      if (isButtonLikeRole && isDisabled) {\n        domProps[propName] = undefined;\n      } else {\n        domProps[propName] = function (e) {\n          e.nativeEvent = normalizeNativeEvent(e.nativeEvent);\n          return prop(e);\n        };\n      }\n    }\n  });\n\n  if (isLinkRole && onResponderRelease) {\n    domProps.onClick = function (e) {\n      if (!e.isDefaultPrevented() && !isModifiedEvent(e.nativeEvent) && !domProps.target) {\n        e.preventDefault();\n      }\n    };\n  }\n\n  if (isButtonLikeRole && !isDisabled) {\n    domProps.onKeyPress = function (e) {\n      if (!e.isDefaultPrevented() && (e.which === 13 || e.which === 32)) {\n        e.preventDefault();\n\n        if (onClick) {\n          onClick(e);\n        }\n      }\n    };\n  }\n};\n\nvar createElement = function createElement(component, props) {\n  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  var accessibilityComponent = void 0;\n\n  if (component && component.constructor === String) {\n    accessibilityComponent = AccessibilityUtil.propsToAccessibilityComponent(props);\n  }\n\n  var Component = accessibilityComponent || component;\n  var domProps = createDOMProps(Component, props);\n  adjustProps(domProps);\n  return React.createElement.apply(React, [Component, domProps].concat(children));\n};\n\nexport default createElement;","map":{"version":3,"sources":["C:/Gogogain/Gogogain - User/node_modules/react-native-web/dist/exports/createElement/index.js"],"names":["AccessibilityUtil","createDOMProps","injectEventPluginsByName","normalizeNativeEvent","React","ResponderEventPlugin","isModifiedEvent","event","metaKey","altKey","ctrlKey","shiftKey","eventHandlerNames","onBlur","onClick","onClickCapture","onContextMenu","onFocus","onResponderRelease","onTouchCancel","onTouchCancelCapture","onTouchEnd","onTouchEndCapture","onTouchMove","onTouchMoveCapture","onTouchStart","onTouchStartCapture","adjustProps","domProps","role","isButtonLikeRole","buttonLikeRoles","isDisabled","isLinkRole","Object","keys","forEach","propName","prop","isEventHandler","undefined","e","nativeEvent","isDefaultPrevented","target","preventDefault","onKeyPress","which","createElement","component","props","_len","arguments","length","children","Array","_key","accessibilityComponent","constructor","String","propsToAccessibilityComponent","Component","apply","concat"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) 2015-present, Nicolas Gallagher.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @noflow\n */\n\nimport AccessibilityUtil from '../../modules/AccessibilityUtil';\nimport createDOMProps from '../../modules/createDOMProps';\nimport { injectEventPluginsByName } from 'react-dom/unstable-native-dependencies';\nimport normalizeNativeEvent from '../../modules/normalizeNativeEvent';\nimport React from 'react';\nimport ResponderEventPlugin from '../../modules/ResponderEventPlugin';\n\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin\n});\n\nvar isModifiedEvent = function isModifiedEvent(event) {\n  return !!(event.metaKey || event.altKey || event.ctrlKey || event.shiftKey);\n};\n\n/**\n * Ensure event handlers receive an event of the expected shape. The 'button'\n * role â€“ for accessibility reasons and functional equivalence to the native\n * button element â€“ must also support synthetic keyboard activation of onclick,\n * and remove event handlers when disabled.\n */\nvar eventHandlerNames = {\n  onBlur: true,\n  onClick: true,\n  onClickCapture: true,\n  onContextMenu: true,\n  onFocus: true,\n  onResponderRelease: true,\n  onTouchCancel: true,\n  onTouchCancelCapture: true,\n  onTouchEnd: true,\n  onTouchEndCapture: true,\n  onTouchMove: true,\n  onTouchMoveCapture: true,\n  onTouchStart: true,\n  onTouchStartCapture: true\n};\nvar adjustProps = function adjustProps(domProps) {\n  var onClick = domProps.onClick,\n      onResponderRelease = domProps.onResponderRelease,\n      role = domProps.role;\n\n\n  var isButtonLikeRole = AccessibilityUtil.buttonLikeRoles[role];\n  var isDisabled = AccessibilityUtil.isDisabled(domProps);\n  var isLinkRole = role === 'link';\n\n  Object.keys(domProps).forEach(function (propName) {\n    var prop = domProps[propName];\n    var isEventHandler = typeof prop === 'function' && eventHandlerNames[propName];\n    if (isEventHandler) {\n      if (isButtonLikeRole && isDisabled) {\n        domProps[propName] = undefined;\n      } else {\n        // TODO: move this out of the render path\n        domProps[propName] = function (e) {\n          e.nativeEvent = normalizeNativeEvent(e.nativeEvent);\n          return prop(e);\n        };\n      }\n    }\n  });\n\n  // Cancel click events if the responder system is being used on a link\n  // element. Click events are not an expected part of the React Native API,\n  // and browsers dispatch click events that cannot otherwise be cancelled from\n  // preceding mouse events in the responder system.\n  if (isLinkRole && onResponderRelease) {\n    domProps.onClick = function (e) {\n      if (!e.isDefaultPrevented() && !isModifiedEvent(e.nativeEvent) && !domProps.target) {\n        e.preventDefault();\n      }\n    };\n  }\n\n  // Button-like roles should trigger 'onClick' if SPACE or ENTER keys are pressed.\n  if (isButtonLikeRole && !isDisabled) {\n    domProps.onKeyPress = function (e) {\n      if (!e.isDefaultPrevented() && (e.which === 13 || e.which === 32)) {\n        e.preventDefault();\n        if (onClick) {\n          onClick(e);\n        }\n      }\n    };\n  }\n};\n\nvar createElement = function createElement(component, props) {\n  for (var _len = arguments.length, children = Array(_len > 2 ? _len - 2 : 0), _key = 2; _key < _len; _key++) {\n    children[_key - 2] = arguments[_key];\n  }\n\n  // use equivalent platform elements where possible\n  var accessibilityComponent = void 0;\n  if (component && component.constructor === String) {\n    accessibilityComponent = AccessibilityUtil.propsToAccessibilityComponent(props);\n  }\n  var Component = accessibilityComponent || component;\n  var domProps = createDOMProps(Component, props);\n  adjustProps(domProps);\n  return React.createElement.apply(React, [Component, domProps].concat(children));\n};\n\nexport default createElement;"]},"metadata":{},"sourceType":"module"}