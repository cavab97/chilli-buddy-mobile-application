{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/extends\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\User\\\\Desktop\\\\ZuMei\\\\gogogainUser\\\\node_modules\\\\react-native-image-transformer\\\\src\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _createSuper(Derived) { return function () { var Super = _getPrototypeOf(Derived), result; if (_isNativeReflectConstruct()) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ViewPropTypes from \"react-native-web/dist/exports/ViewPropTypes\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport PropTypes from \"prop-types\";\nimport ViewTransformer from \"react-native-easy-view-transformer\";\n\nvar ImageTransformer = function (_React$Component) {\n  _inherits(ImageTransformer, _React$Component);\n\n  var _super = _createSuper(ImageTransformer);\n\n  function ImageTransformer(props) {\n    var _this;\n\n    _classCallCheck(this, ImageTransformer);\n\n    _this = _super.call(this, props);\n    _this.onLayout = _this.onLayout.bind(_assertThisInitialized(_this));\n    _this.onLoad = _this.onLoad.bind(_assertThisInitialized(_this));\n    _this.onLoadStart = _this.onLoadStart.bind(_assertThisInitialized(_this));\n    _this.getViewTransformerInstance = _this.getViewTransformerInstance.bind(_assertThisInitialized(_this));\n    _this.renderError = _this.renderError.bind(_assertThisInitialized(_this));\n    _this.onOrientation = _this.onOrientation.bind(_assertThisInitialized(_this));\n    _this.state = {\n      viewWidth: 0,\n      viewHeight: 0,\n      imageLoaded: false,\n      imageDimensions: props.image.dimensions ? props.image.dimensions : props.image.width && props.image.height ? {\n        width: props.image.width,\n        height: props.image.height\n      } : undefined,\n      keyAccumulator: 1,\n      source: undefined,\n      enableOrientation: false\n    };\n    return _this;\n  }\n\n  _createClass(ImageTransformer, [{\n    key: \"UNSAFE_componentWillMount\",\n    value: function UNSAFE_componentWillMount() {\n      this._mounted = true;\n      Dimensions.addEventListener(\"change\", this.onOrientation);\n\n      if (!this.state.source) {\n        this.getImageSource(this.props.image);\n      }\n\n      if (!this.state.imageDimensions) {\n        this.getImageSize(this.props.image);\n      }\n    }\n  }, {\n    key: \"UNSAFE_componentWillReceiveProps\",\n    value: function UNSAFE_componentWillReceiveProps(nextProps) {\n      if (!sameImage(this.props.image, nextProps.image)) {\n        this.setState({\n          imageDimensions: nextProps.image.dimensions ? nextProps.image.dimensions : nextProps.image.width && nextProps.image.height ? {\n            width: nextProps.image.width,\n            height: nextProps.image.height\n          } : undefined,\n          keyAccumulator: this.state.keyAccumulator + 1,\n          imageLoaded: false\n        });\n\n        if (!nextProps.image.source) {\n          this.getImageSource(nextProps.image);\n        }\n\n        if (!nextProps.image.dimensions) {\n          this.getImageSize(nextProps.image);\n        }\n      }\n    }\n  }, {\n    key: \"shouldComponentUpdate\",\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (nextState.enableOrientation) {\n        return true;\n      } else if (nextState.imageLoaded && !this.state.imageLoaded) {\n        return true;\n      }\n\n      return false;\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      Dimensions.removeEventListener(\"change\", this.onOrientation);\n      this._mounted = false;\n    }\n  }, {\n    key: \"onLoadStart\",\n    value: function onLoadStart(e) {\n      this.props.onLoadStart && this.props.onLoadStart(e);\n\n      if (this.state.imageLoaded) {\n        this.setState({\n          imageLoaded: false\n        });\n      }\n    }\n  }, {\n    key: \"onLoad\",\n    value: function onLoad(e) {\n      this.props.onLoad && this.props.onLoad(e);\n\n      if (!this.state.imageLoaded) {\n        this.setState({\n          imageLoaded: true\n        });\n      }\n    }\n  }, {\n    key: \"onLayout\",\n    value: function onLayout(e) {\n      var _e$nativeEvent$layout = e.nativeEvent.layout,\n          width = _e$nativeEvent$layout.width,\n          height = _e$nativeEvent$layout.height;\n\n      if (this.state.viewWidth !== width || this.state.viewHeight !== height) {\n        this.setState({\n          viewWidth: width,\n          viewHeight: height\n        });\n      }\n\n      this.props.onLayout && this.props.onLayout(e);\n    }\n  }, {\n    key: \"onOrientation\",\n    value: function onOrientation() {\n      this.setState({\n        enableOrientation: true\n      });\n    }\n  }, {\n    key: \"getImageSize\",\n    value: function getImageSize(image) {\n      var _this2 = this;\n\n      if (!image) {\n        return;\n      }\n\n      var uri = image.source && image.source.uri ? image.source.uri : image.uri ? image.uri : image.URI ? image.URI : image.url ? image.url : image.URL ? image.URL : undefined;\n\n      if (image.dimensions && image.dimensions.width && image.dimensions.height) {\n        this._mounted && this.setState({\n          imageDimensions: image.dimensions\n        });\n        return;\n      }\n\n      if (image.width && image.height) {\n        this._mounted && this.setState({\n          imageDimensions: {\n            width: image.width,\n            height: image.height\n          }\n        });\n        return;\n      }\n\n      if (uri) {\n        Image.getSize(uri, function (width, height) {\n          if (width && height) {\n            if (_this2.state.imageDimensions && _this2.state.imageDimensions.width === width && _this2.state.imageDimensions.height === height) {} else {\n              _this2._mounted && _this2.setState({\n                imageDimensions: {\n                  width: width,\n                  height: height\n                }\n              });\n            }\n          }\n        }, function () {\n          _this2._mounted && _this2.setState({\n            error: true\n          });\n        });\n      } else {\n        console.warn(\"react-native-image-transformer\", \"Please provide dimensions for your local images.\");\n      }\n    }\n  }, {\n    key: \"getImageSource\",\n    value: function getImageSource(image) {\n      var source = image.source ? image.source : image.uri ? {\n        uri: image.uri\n      } : image.URI ? {\n        uri: image.URI\n      } : image.url ? {\n        uri: image.url\n      } : image.URL ? {\n        uri: image.URL\n      } : undefined;\n\n      if (source) {\n        this.setState({\n          source: source\n        });\n      } else {\n        console.warn(\"react-native-image-transformer\", \"Please provide a valid image field in \" + \"data images. Ex. source, uri, URI, url, URL\");\n      }\n    }\n  }, {\n    key: \"getViewTransformerInstance\",\n    value: function getViewTransformerInstance() {\n      return this.viewTransformer;\n    }\n  }, {\n    key: \"renderError\",\n    value: function renderError() {\n      return this.props.errorComponent && this.props.errorComponent() || React.createElement(View, {\n        style: {\n          flex: 1,\n          backgroundColor: \"black\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 13\n        }\n      }, React.createElement(Text, {\n        style: {\n          color: \"white\",\n          fontSize: 15,\n          fontStyle: \"italic\"\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 17\n        }\n      }, \"This image cannot be displayed...\"));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this3 = this;\n\n      var _this$state = this.state,\n          source = _this$state.source,\n          imageDimensions = _this$state.imageDimensions,\n          viewWidth = _this$state.viewWidth,\n          viewHeight = _this$state.viewHeight,\n          error = _this$state.error,\n          keyAccumulator = _this$state.keyAccumulator,\n          imageLoaded = _this$state.imageLoaded;\n      var _this$props = this.props,\n          style = _this$props.style,\n          imageComponent = _this$props.imageComponent,\n          resizeMode = _this$props.resizeMode,\n          enableTransform = _this$props.enableTransform,\n          enableScale = _this$props.enableScale,\n          maxScale = _this$props.maxScale,\n          enableTranslate = _this$props.enableTranslate,\n          enableResistance = _this$props.enableResistance,\n          resistantStrHorizontal = _this$props.resistantStrHorizontal,\n          resistantStrVertical = _this$props.resistantStrVertical,\n          maxOverScrollDistance = _this$props.maxOverScrollDistance,\n          onTransformStart = _this$props.onTransformStart,\n          onViewTransformed = _this$props.onViewTransformed,\n          onPinchTransforming = _this$props.onPinchTransforming,\n          onPinchStartReached = _this$props.onPinchStartReached,\n          onPinchEndReached = _this$props.onPinchEndReached,\n          onTransformGestureReleased = _this$props.onTransformGestureReleased,\n          onSwipeUpReleased = _this$props.onSwipeUpReleased,\n          onSwipeDownReleased = _this$props.onSwipeDownReleased,\n          onDoubleTapStartReached = _this$props.onDoubleTapStartReached,\n          onDoubleTapEndReached = _this$props.onDoubleTapEndReached,\n          onDoubleTapConfirmed = _this$props.onDoubleTapConfirmed,\n          onSingleTapConfirmed = _this$props.onSingleTapConfirmed,\n          index = _this$props.index;\n      var resolvedMaxScale = 1;\n      var contentAspectRatio;\n      var width, height;\n\n      if (imageDimensions) {\n        width = imageDimensions.width;\n        height = imageDimensions.height;\n      }\n\n      if (width && height) {\n        contentAspectRatio = width / height;\n\n        if (viewWidth && viewHeight) {\n          if (!maxScale) {\n            resolvedMaxScale = Math.max(width / viewWidth, height / viewHeight);\n            resolvedMaxScale = Math.max(1, resolvedMaxScale);\n          } else {\n            resolvedMaxScale = maxScale;\n          }\n        }\n      }\n\n      var imageProps = _objectSpread({}, this.props, {\n        imageLoaded: imageLoaded,\n        source: source,\n        style: [style, {\n          backgroundColor: \"transparent\"\n        }],\n        resizeMode: resizeMode,\n        onLoadStart: this.onLoadStart,\n        onLoad: this.onLoad,\n        capInsets: {\n          left: 0.1,\n          top: 0.1,\n          right: 0.1,\n          bottom: 0.1\n        }\n      });\n\n      var content = error ? this.renderError() : imageComponent ? imageComponent(imageProps, imageDimensions, index) : React.createElement(Image, _extends({}, imageProps, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 328,\n          columnNumber: 15\n        }\n      }));\n      return React.createElement(ViewTransformer, {\n        ref: function ref(component) {\n          return _this3.viewTransformer = component;\n        },\n        key: \"viewTransformer#\" + keyAccumulator,\n        enableTransform: enableTransform && imageLoaded,\n        enableScale: enableScale,\n        enableTranslate: enableTranslate,\n        enableResistance: enableResistance,\n        resistantStrHorizontal: resistantStrHorizontal,\n        resistantStrVertical: resistantStrVertical,\n        maxOverScrollDistance: maxOverScrollDistance,\n        onTransformStart: onTransformStart,\n        onViewTransformed: onViewTransformed,\n        onPinchTransforming: onPinchTransforming,\n        onPinchStartReached: onPinchStartReached,\n        onPinchEndReached: onPinchEndReached,\n        onTransformGestureReleased: onTransformGestureReleased,\n        onSwipeUpReleased: onSwipeUpReleased,\n        onSwipeDownReleased: onSwipeDownReleased,\n        onDoubleTapStartReached: onDoubleTapStartReached,\n        onDoubleTapEndReached: onDoubleTapEndReached,\n        onDoubleTapConfirmed: onDoubleTapConfirmed,\n        onSingleTapConfirmed: onSingleTapConfirmed,\n        maxScale: resolvedMaxScale,\n        contentAspectRatio: contentAspectRatio,\n        onLayout: this.onLayout,\n        style: style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 13\n        }\n      }, content);\n    }\n  }]);\n\n  return ImageTransformer;\n}(React.Component);\n\nImageTransformer.propTypes = {\n  image: PropTypes.shape({\n    uri: PropTypes.string,\n    dimensions: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    })\n  }).isRequired,\n  index: PropTypes.number,\n  style: ViewPropTypes ? ViewPropTypes.style : View.propTypes.style,\n  onLoad: PropTypes.func,\n  onLoadStart: PropTypes.func,\n  enableTransform: PropTypes.bool,\n  enableScale: PropTypes.bool,\n  maxScale: PropTypes.number,\n  enableTranslate: PropTypes.bool,\n  enableResistance: PropTypes.bool,\n  resistantStrHorizontal: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  resistantStrVertical: PropTypes.oneOfType([PropTypes.func, PropTypes.number, PropTypes.string]),\n  maxOverScrollDistance: PropTypes.number,\n  onTransformStart: PropTypes.func,\n  onPinchTransforming: PropTypes.func,\n  onPinchStartReached: PropTypes.func,\n  onPinchEndReached: PropTypes.func,\n  onViewTransformed: PropTypes.func,\n  onTransformGestureReleased: PropTypes.func,\n  onSwipeUpReleased: PropTypes.func,\n  onSwipeDownReleased: PropTypes.func,\n  onDoubleTapStartReached: PropTypes.func,\n  onDoubleTapEndReached: PropTypes.func,\n  onDoubleTapConfirmed: PropTypes.func,\n  onSingleTapConfirmed: PropTypes.func,\n  imageComponent: PropTypes.func,\n  resizeMode: PropTypes.string,\n  errorComponent: PropTypes.func,\n  onLayout: PropTypes.func\n};\nImageTransformer.defaultProps = {\n  index: 0,\n  enableTransform: true,\n  enableScale: true,\n  enableTranslate: true,\n  enableResistance: true,\n  imageComponent: undefined,\n  resizeMode: \"contain\"\n};\nexport { ImageTransformer as default };\n\nfunction sameImage(source, nextSource) {\n  if (source === nextSource) {\n    return true;\n  }\n\n  if (source && nextSource) {\n    var uri = findUri(source);\n    var nextUri = findUri(nextSource);\n\n    if (uri && nextUri) {\n      return uri === nextUri;\n    }\n  }\n\n  return false;\n}\n\nfunction findUri(data) {\n  return data.source ? data.source : data.uri ? {\n    uri: data.uri\n  } : data.URI ? {\n    uri: data.URI\n  } : data.url ? {\n    uri: data.url\n  } : data.URL ? {\n    uri: data.URL\n  } : undefined;\n}","map":{"version":3,"sources":["C:/Users/User/Desktop/ZuMei/gogogainUser/node_modules/react-native-image-transformer/src/index.js"],"names":["React","PropTypes","ViewTransformer","ImageTransformer","props","onLayout","bind","onLoad","onLoadStart","getViewTransformerInstance","renderError","onOrientation","state","viewWidth","viewHeight","imageLoaded","imageDimensions","image","dimensions","width","height","undefined","keyAccumulator","source","enableOrientation","_mounted","Dimensions","addEventListener","getImageSource","getImageSize","nextProps","sameImage","setState","nextState","removeEventListener","e","nativeEvent","layout","uri","URI","url","URL","Image","getSize","error","console","warn","viewTransformer","errorComponent","flex","backgroundColor","alignItems","justifyContent","color","fontSize","fontStyle","style","imageComponent","resizeMode","enableTransform","enableScale","maxScale","enableTranslate","enableResistance","resistantStrHorizontal","resistantStrVertical","maxOverScrollDistance","onTransformStart","onViewTransformed","onPinchTransforming","onPinchStartReached","onPinchEndReached","onTransformGestureReleased","onSwipeUpReleased","onSwipeDownReleased","onDoubleTapStartReached","onDoubleTapEndReached","onDoubleTapConfirmed","onSingleTapConfirmed","index","resolvedMaxScale","contentAspectRatio","Math","max","imageProps","capInsets","left","top","right","bottom","content","component","Component","propTypes","shape","string","number","isRequired","ViewPropTypes","View","func","bool","oneOfType","defaultProps","nextSource","findUri","nextUri","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { View, Text, Image, ViewPropTypes, Dimensions } from \"react-native\";\nimport PropTypes from \"prop-types\";\nimport ViewTransformer from \"react-native-easy-view-transformer\";\n\nexport default class ImageTransformer extends React.Component {\n    static propTypes = {\n        image: PropTypes.shape({\n            uri: PropTypes.string,\n            dimensions: PropTypes.shape({\n                width: PropTypes.number,\n                height: PropTypes.number\n            })\n        }).isRequired,\n        index: PropTypes.number,\n        style: ViewPropTypes\n            ? ViewPropTypes.style\n            : View.propTypes.style,\n        onLoad: PropTypes.func,\n        onLoadStart: PropTypes.func,\n        enableTransform: PropTypes.bool,\n        enableScale: PropTypes.bool,\n        maxScale: PropTypes.number,\n        enableTranslate: PropTypes.bool,\n        enableResistance: PropTypes.bool,\n        resistantStrHorizontal: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.number,\n            PropTypes.string\n        ]),\n        resistantStrVertical: PropTypes.oneOfType([\n            PropTypes.func,\n            PropTypes.number,\n            PropTypes.string\n        ]),\n        maxOverScrollDistance: PropTypes.number,\n        onTransformStart: PropTypes.func,\n        onPinchTransforming: PropTypes.func,\n        onPinchStartReached: PropTypes.func,\n        onPinchEndReached: PropTypes.func,\n        onViewTransformed: PropTypes.func,\n        onTransformGestureReleased: PropTypes.func,\n        onSwipeUpReleased: PropTypes.func,\n        onSwipeDownReleased: PropTypes.func,\n        onDoubleTapStartReached: PropTypes.func,\n        onDoubleTapEndReached: PropTypes.func,\n        onDoubleTapConfirmed: PropTypes.func,\n        onSingleTapConfirmed: PropTypes.func,\n        imageComponent: PropTypes.func,\n        resizeMode: PropTypes.string,\n        errorComponent: PropTypes.func,\n        onLayout: PropTypes.func,\n    };\n\n    static defaultProps = {\n        index: 0,\n        enableTransform: true,\n        enableScale: true,\n        enableTranslate: true,\n        enableResistance: true,\n        imageComponent: undefined,\n        resizeMode: \"contain\"\n    };\n\n    constructor (props) {\n        super(props);\n\n        this.onLayout = this.onLayout.bind(this);\n        this.onLoad = this.onLoad.bind(this);\n        this.onLoadStart = this.onLoadStart.bind(this);\n        this.getViewTransformerInstance =\n            this.getViewTransformerInstance.bind(this);\n        this.renderError = this.renderError.bind(this);\n        this.onOrientation = this.onOrientation.bind(this);\n\n        this.state = {\n            viewWidth: 0,\n            viewHeight: 0,\n            imageLoaded: false,\n            imageDimensions: props.image.dimensions\n                ? props.image.dimensions\n                : props.image.width && props.image.height\n                ? { width: props.image.width, height: props.image.height }\n                : undefined,\n            keyAccumulator: 1,\n            source: undefined,\n            enableOrientation: false\n        };\n    }\n\n    UNSAFE_componentWillMount () {\n        this._mounted = true;\n\n        // TO DO: Find better way to get initial states\n        Dimensions.addEventListener(\"change\", this.onOrientation);\n        if (!this.state.source) {\n            this.getImageSource(this.props.image);\n        }\n        if (!this.state.imageDimensions) {\n            this.getImageSize(this.props.image);\n        }\n    }\n\n    UNSAFE_componentWillReceiveProps (nextProps) {\n        if (!sameImage(this.props.image, nextProps.image)) {\n            // image source changed, clear last\n            // image's imageDimensions info if any\n            this.setState({\n                imageDimensions: nextProps.image.dimensions\n                    ? nextProps.image.dimensions\n                    : nextProps.image.width && nextProps.image.height\n                    ? { width: nextProps.image.width, height: nextProps.image.height }\n                    : undefined,\n                keyAccumulator: this.state.keyAccumulator + 1,\n                imageLoaded: false\n            });\n            if (!nextProps.image.source) {\n                this.getImageSource(nextProps.image);\n            }\n            // if we don't have image dimensions provided in source\n            if (!nextProps.image.dimensions) {\n                this.getImageSize(nextProps.image);\n            }\n        }\n    }\n\n    shouldComponentUpdate(nextProps, nextState) {\n        if (nextState.enableOrientation) {\n            return true;\n        } else if (nextState.imageLoaded && !this.state.imageLoaded) {\n            return true;\n        }\n        return false;\n    }\n\n    componentWillUnmount () {\n        Dimensions.removeEventListener(\"change\", this.onOrientation);\n        this._mounted = false;\n    }\n\n    onLoadStart (e) {\n        this.props.onLoadStart && this.props.onLoadStart(e);\n        if (this.state.imageLoaded) {\n            this.setState({ imageLoaded: false });\n        }\n    }\n\n    onLoad (e) {\n        this.props.onLoad && this.props.onLoad(e);\n        if (!this.state.imageLoaded) {\n            this.setState({ imageLoaded: true });\n        }\n    }\n\n    onLayout (e) {\n        let {width, height} = e.nativeEvent.layout;\n        if (this.state.viewWidth !== width || this.state.viewHeight !== height) {\n            this.setState({ viewWidth: width, viewHeight: height });\n        }\n\n        this.props.onLayout && this.props.onLayout(e);\n    }\n\n    onOrientation() {\n        this.setState({\n            enableOrientation: true\n        });\n    }\n\n    getImageSize (image) {\n        if (!image) {\n            return;\n        }\n\n        const uri = image.source && image.source.uri\n            ? image.source.uri : image.uri\n            ? image.uri : image.URI\n            ? image.URI : image.url\n            ? image.url : image.URL\n            ? image.URL : undefined;\n\n        if (image.dimensions && image.dimensions.width && image.dimensions.height) {\n            this._mounted && this.setState({\n                imageDimensions: image.dimensions\n            });\n            return;\n        }\n\n        if (image.width && image.height) {\n            this._mounted && this.setState({\n                imageDimensions: {\n                    width: image.width,\n                    height: image.height\n                }\n            });\n            return;\n        }\n\n        if (uri) {\n            Image.getSize(\n                uri,\n                (width, height) => {\n                    if (width && height) {\n                        if (\n                            this.state.imageDimensions &&\n                            this.state.imageDimensions.width === width &&\n                            this.state.imageDimensions.height === height\n                        ) {\n                            // no need to update state\n                        } else {\n                            this._mounted && this.setState({\n                                imageDimensions: { width, height }\n                            });\n                        }\n                    }\n                },\n                () => {\n                    this._mounted && this.setState({ error: true });\n                }\n            );\n        } else {\n            // eslint-disable-next-line no-console\n            console.warn(\n                \"react-native-image-transformer\",\n                \"Please provide dimensions for your local images.\"\n            );\n        }\n    }\n\n    getImageSource (image) {\n        const source = image.source\n            ? image.source : image.uri\n            ? { uri: image.uri } : image.URI\n            ? { uri: image.URI } : image.url\n            ? { uri: image.url } : image.URL\n            ? { uri: image.URL } : undefined;\n\n        if (source) {\n            this.setState({ source });\n        } else {\n            // eslint-disable-next-line no-console\n            console.warn(\n                \"react-native-image-transformer\",\n                \"Please provide a valid image field in \" +\n                \"data images. Ex. source, uri, URI, url, URL\"\n            );\n        }\n    }\n\n    getViewTransformerInstance () {\n        return this.viewTransformer;\n    }\n\n    renderError () {\n        return (this.props.errorComponent && this.props.errorComponent()) || (\n            <View style={{\n                flex: 1,\n                backgroundColor: \"black\",\n                alignItems: \"center\",\n                justifyContent: \"center\"\n            }}>\n                <Text\n                    style={{\n                        color: \"white\",\n                        fontSize: 15,\n                        fontStyle: \"italic\"\n                    }}>\n                    This image cannot be displayed...\n                </Text>\n            </View>\n        );\n    }\n\n    render () {\n        const {\n            source, imageDimensions, viewWidth, viewHeight,\n            error, keyAccumulator, imageLoaded\n        } = this.state;\n        const {\n            style, imageComponent, resizeMode, enableTransform,\n            enableScale, maxScale, enableTranslate, enableResistance,\n            resistantStrHorizontal, resistantStrVertical,\n            maxOverScrollDistance, onTransformStart, onViewTransformed,\n            onPinchTransforming,  onPinchStartReached,\n            onPinchEndReached, onTransformGestureReleased,\n            onSwipeUpReleased, onSwipeDownReleased,\n            onDoubleTapStartReached, onDoubleTapEndReached,\n            onDoubleTapConfirmed, onSingleTapConfirmed,\n            index\n        } = this.props;\n\n        let resolvedMaxScale = 1;\n        let contentAspectRatio;\n        let width, height; // imageDimensions\n\n        if (imageDimensions) {\n            width = imageDimensions.width;\n            height = imageDimensions.height;\n        }\n\n        if (width && height) {\n            contentAspectRatio = width / height;\n            if (viewWidth && viewHeight) {\n                if (!maxScale) {\n                    resolvedMaxScale = Math.max(width / viewWidth, height / viewHeight);\n                    resolvedMaxScale = Math.max(1, resolvedMaxScale);\n                } else {\n                    resolvedMaxScale = maxScale;\n                }\n            }\n        }\n\n        const imageProps = {\n            ...this.props,\n            imageLoaded,\n            source: source,\n            style: [style, { backgroundColor: \"transparent\" }],\n            resizeMode: resizeMode,\n            onLoadStart: this.onLoadStart,\n            onLoad: this.onLoad,\n            capInsets: { left: 0.1, top: 0.1, right: 0.1, bottom: 0.1 }\n        };\n\n        const content = error\n            ? this.renderError()\n            : imageComponent\n            ? imageComponent(imageProps, imageDimensions, index)\n            : <Image { ...imageProps } />;\n\n        return (\n            <ViewTransformer\n                ref={(component) => (this.viewTransformer = component)}\n                // when image source changes, we should use a different\n                // node to avoid reusing previous transform state\n                key={\"viewTransformer#\" + keyAccumulator}\n                // disable transform until image is loaded\n                enableTransform={enableTransform && imageLoaded}\n                enableScale={enableScale}\n                enableTranslate={enableTranslate}\n                enableResistance={enableResistance}\n                resistantStrHorizontal={resistantStrHorizontal}\n                resistantStrVertical={resistantStrVertical}\n                maxOverScrollDistance={maxOverScrollDistance}\n                onTransformStart={onTransformStart}\n                onViewTransformed={onViewTransformed}\n                onPinchTransforming={onPinchTransforming}\n                onPinchStartReached={onPinchStartReached}\n                onPinchEndReached={onPinchEndReached}\n                onTransformGestureReleased={onTransformGestureReleased}\n                onSwipeUpReleased={onSwipeUpReleased}\n                onSwipeDownReleased={onSwipeDownReleased}\n                onDoubleTapStartReached={onDoubleTapStartReached}\n                onDoubleTapEndReached={onDoubleTapEndReached}\n                onDoubleTapConfirmed={onDoubleTapConfirmed}\n                onSingleTapConfirmed={onSingleTapConfirmed}\n                maxScale={resolvedMaxScale}\n                contentAspectRatio={contentAspectRatio}\n                onLayout={this.onLayout}\n                style={style}>\n                    { content }\n            </ViewTransformer>\n        );\n    }\n}\n\nfunction sameImage (source, nextSource) {\n    if (source === nextSource) {\n        return true;\n    }\n    if (source && nextSource) {\n\t\tconst uri = findUri(source);\n\t\tconst nextUri = findUri(nextSource);\n        if (uri && nextUri) {\n            return uri === nextUri;\n        }\n    }\n    return false;\n}\n\nfunction findUri (data) {\n\treturn data.source\n\t\t? data.source : data.uri\n\t\t? { uri: data.uri } : data.URI\n\t\t? { uri: data.URI } : data.url\n\t\t? { uri: data.url } : data.URL\n\t\t? { uri: data.URL } : undefined;\n}\n"]},"metadata":{},"sourceType":"module"}